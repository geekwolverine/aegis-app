{"version":3,"sources":["webpack://microlib-example/./src/domain/check-payload.js","webpack://microlib-example/./src/domain/customer.js","webpack://microlib-example/./src/domain/inventory.js","webpack://microlib-example/./src/domain/order.js","webpack://microlib-example/./src/domain/ports.js","webpack://microlib-example/./src/domain/user.js","webpack://microlib-example/./src/domain/utils.js"],"names":["checkPayload","key","options","payload","port","name","model","Object","keys","Error","desc","error","Array","isArray","map","k","reduce","p","c","find","then","latest","makeCustomerFactory","dependencies","createCustomer","firstName","lastName","shippingAddress","creditCardNumber","billingAddress","phone","email","userId","freeze","customerId","uuid","okToDelete","customer","orders","length","console","func","assetTypes","properties","categories","makeInventoryFactory","category","price","discount","sku","purchaseOrder","vendor","inStock","assetType","quantity","orderStatus","orderTotal","orderNo","OrderStatus","PENDING","APPROVED","SHIPPING","COMPLETE","CANCELED","checkItem","orderItem","itemId","checkItems","orderItems","items","every","calcTotal","total","item","qty","itemCount","freezeOnApproval","propKey","o","finalStatus","status","includes","freezeOnCompletion","requiredForGuest","requiredForApproval","requiredForCompletion","invalidStatusChange","from","to","propVal","prevmodel","invalidStatusChanges","statusChangeValid","some","i","orderTotalValid","recalcTotal","updateSignature","signatureRequired","readyToDelete","handleError","order","errMsg","emit","JSON","stringify","paymentCompleted","changes","update","orderShipped","shipmentPayload","shipmentId","orderPicked","addressValidated","addressPayload","paymentAuthorized","paymentStatus","refundPayment","verifyAddress","debug","fn","validateAddress","verifyPayment","authorizePayment","authorizeOrder","paymentDeclined","verifyInventory","inventory","insufficient","filter","inv","id","getCustomerOrder","log","custInfo","decrypt","info","saveShippingDetails","processPendingOrder","asyncPipe","OrderActions","processedOrder","autoCheckout","runOrderWorkflow","test","pickOrder","trackShipment","trackingUpdate","undo","handleOrderEvent","eventType","needsSignature","input","logMessage","message","type","msg","substring","time","Date","now","toJSON","toUTCString","makeOrderFactory","shippingPriority","requireSignature","fibonacci","result","estimatedArrival","push","logEvent","index","indx","parseInt","NaN","lastIndexOf","l","createOrder","approve","approvedOrder","updateSync","logStateChange","cancel","canceledOrder","checkout","errorCallback","timeoutCallback","ports","adapterFn","returnInventory","returnShipment","logUndo","accountOrder","req","res","returnDelivery","cancelPayment","userFactory","userName","password","userMixins","requireProperties","freezeProperties","hashPasswords","validateProperties","regex","unique","encrypted","compose","funcs","initVal","reduceRight","val","composeAsync","Promise","resolve","obj","f","passwd","process","env","ENCRYPTION_PWD","algo","crypto","String","iv","Buffer","alloc","encrypt","text","cipher","cipherText","decipher","decrypted","hash","data","digest","nanoid","makeArray","v","makeObject","prop","async","promise","ok","object","asObject","asArray"],"mappings":"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","file":"334.js","sourcesContent":["'use strict'\n\n/**\n * Check the payload for expected properties.\n * @param {string|string[]} key name of property or properties\n * @param {*} options\n * @param {*} payload\n * @param {*} port\n */\nexport default function checkPayload (\n  key,\n  options = {},\n  payload = {},\n  port = checkPayload.name\n) {\n  const { model } = options\n\n  if (!model || Object.keys(payload) < 1 || !key) {\n    throw new Error({\n      desc: 'model, payload, or key is missing',\n      model,\n      port,\n      error,\n      payload,\n      key\n    })\n  }\n\n  if (Array.isArray(key)) {\n    const keys = key.map(k => checkPayload(k, options, payload, port))\n\n    return keys.reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  if (payload[key]) {\n    return { [key]: payload[key] }\n  }\n\n  if (model[key]) {\n    return { [key]: model[key] }\n  }\n\n  return model\n    .find()\n    .then(latest => ({ [key]: latest[key] }))\n    .catch(error => {\n      throw new Error('property is missing' + key, port, error, payload, model)\n    })\n}\n","\"use strict\";\n\nexport function makeCustomerFactory(dependencies) {\n  return function createCustomer({\n    firstName,\n    lastName,\n    shippingAddress,\n    creditCardNumber,\n    billingAddress = shippingAddress,\n    phone,\n    email,\n    userId,\n  } = {}) {\n    return Object.freeze({\n      customerId: dependencies.uuid(),\n      firstName,\n      lastName,\n      creditCardNumber,\n      shippingAddress,\n      billingAddress,\n      phone,\n      email,\n      userId,\n    });\n  };\n}\n\nexport async function okToDelete(customer) {\n  try {\n    const orders = await customer.orders();\n    return orders.length > 0;\n  } catch (error) {\n    console.error({ func: okToDelete.name, error });\n    return true;\n  }\n}\n","'use strict'\n\nexport const assetTypes = ['rotating-asset', 'spare-part']\nexport const properties = ['height', 'length', 'width', 'weight', 'color']\nexport const categories = ['home', 'auto', 'business']\n\nexport const makeInventoryFactory = dependencies => ({\n  category,\n  properties,\n  price,\n  discount,\n  name,\n  desc,\n  sku,\n  purchaseOrder,\n  vendor,\n  inStock,\n  assetType,\n  quantity\n}) =>\n  Object.freeze({\n    category,\n    properties,\n    price: price - (discount || 0.0),\n    name,\n    desc,\n    sku,\n    purchaseOrder,\n    vendor,\n    inStock,\n    assetType,\n    quantity\n  })\n","'use strict'\n\nimport { prevmodel } from './mixins'\nimport { asyncPipe } from '../domain/utils'\nimport checkPayload from './check-payload'\n\n/** @typedef { import('../domain/index.js').ModelSpecification} ModelSpecification */\n/** @typedef {string|RegExp} topic*/\n/** @typedef {function(string)} eventCallback*/\n/** @typedef {import('../adapters/index').adapterFunction} adapterFunction*/\n/** @typedef {string} id */\n/** @typedef {import(\"./customer\").Customer} Customer */\n/** @typedef {function(Order)} undoFunction */\n/**\n * @callback logMessageFn\n * @param {object|string} message\n * @param {logType} [type]\n */\n\n/** @typedef {'first'|'last'|'lastStateChange'|'stateChange'|'error'|'undo'} logType */\n\n/**\n * @typedef readLogType\n * @property {number} index\n * @property  {logType} type\n */\n\n/**\n * @typedef {{\n *  itemId: string,\n *  price: number,\n *  qty?: number\n * }} orderItemType\n */\n\n/**\n * @callback relationFunction\n * @property {...args}\n * @returns {Promise<Model>}\n * } relationFunction\n */\n\n/**\n *  @typedef {Object} Order The Order Service\n * @property {function(topic,eventCallback)} listen - listen for events\n * @property {import('../adapters/event-adapter').notifyType} notify\n * @property {adapterFunction} validateAddress - returns valid address or throws exception\n * @property {adapterFunction} completePayment - completes payment for an authorized charge\n * @property {adapterFunction} verifyDelivery - verify the order was received by the customer\n * @property {adapterFunction} trackShipment\n * @property {adapterFunction} refundPayment\n * @property {relationFunction} inventory - reserve inventory items\n * @property {adapterFunction} undo - undo all transactions up to this point\n * @property {function():Promise<Order>} pickOrder - pick items from warehouse and prepare for shipment\n * @property {adapterFunction} authorizePayment - verify payment, i.e. reserve the balance due\n * @property {import('../adapters/shipping-adapter').shipOrder} shipOrder -\n * calls shipping service to print label and request delivery\n * @property {function(Order):Promise<void>} save - saves order\n * @property {function():Promise<Order>} find - finds order\n * @property {string} shippingAddress\n * @property {string} orderNo = the order number\n * @property {string} trackingId - id given by tracking status for this `orderNo`\n * @property {function():Order} decrypt - decrypts sensitive properties\n * @property {function({key1:any,keyN:any}, boolean):Promise<Order>} update - update the order,\n * set the second arg to false to turn off validation.\n * @property {'PENDING'|'APPROVED'|'SHIPPING'|'CANCELED'|'COMPLETED'} orderStatus\n * @property {function(...args):Promise<import(\"../domain/index\").Model>} customer - retrieves related customer object,\n * or if args are provided, creates a new customer object, using the provided args as the input.\n * @property {function(string,Order):Promise} emit - broadcast domain event\n * @property {function():boolean} paymentAccepted - payment approved and funds reserved\n * @property {function():boolean} autoCheckout - whether or not to immediately submit the order\n * @property {boolean} saveShippingDetails save shipping and payment details in a new customer record\n * @property {{itemId:string,price:number,qty:number}[]} orderItems\n * @property {Symbol} customerId {@link Customer}\n * @property {logMessageFn} logEvent\n * @property {logMessageFn} logError\n * @property {logMessageFn} logUndo\n * @property {logMessageFn} logStateChange\n * @property {readMessageFn} readLog\n */\n\nconst orderStatus = 'orderStatus'\nconst orderTotal = 'orderTotal'\nconst orderNo = 'orderNo'\n\nexport const OrderStatus = {\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  SHIPPING: 'SHIPPING',\n  COMPLETE: 'COMPLETE',\n  CANCELED: 'CANCELED'\n}\n\n/**\n *\n * @param {orderItemType} orderItem\n * @returns {boolean} true if item is valid\n */\nexport const checkItem = function (orderItem) {\n  return (\n    typeof orderItem.itemId === 'string' && typeof orderItem.price === 'number'\n  )\n}\n\n/**\n * @param {orderItemType[]} orderItems\n */\nexport const checkItems = function (orderItems) {\n  if (!orderItems || orderItems.length < 1) {\n    throw new Error('order contains no items')\n  }\n  const items = Array.isArray(orderItems) ? orderItems : [orderItems]\n\n  if (items.length > 0 && items.every(checkItem)) {\n    return items\n  }\n  throw new Error('order items invalid')\n}\n\n/**\n * Calculate order total\n * @param {orderItemType[]} orderItems\n */\nexport const calcTotal = function (orderItems) {\n  const items = checkItems(orderItems)\n\n  return items.reduce((total, item) => {\n    const qty = item.qty || 1\n    return (total += item.price * qty)\n  }, 0)\n}\n\n/**\n * @param {orderItemType[]} orderItems\n * @returns {number} number of items\n */\nexport const itemCount = function (orderItems) {\n  return orderItems.reduce((total, item) => (total += item.qty || 1))\n}\n\n/**\n * No changes to `propKey` properties once the order is approved\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnApproval = propKey => o =>\n  o.orderStatus && o.orderStatus !== OrderStatus.PENDING ? propKey : null\n\nconst finalStatus = status =>\n  [OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(status)\n\n/**\n * No changes to `propKey` once order is complete or canceled\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnCompletion = propKey => o =>\n  finalStatus(o.orderStatus) ? null : propKey\n\n/**\n * If not a registered customer, provide shipping & payment details.\n * @param {*} o\n * @param {*} propKey\n * @returns {string | void} the key or `void`\n */\nexport const requiredForGuest = propKey => o => (o.customerId ? null : propKey)\n\n/**\n * Value required to approve order.\n * @param {*} propKey\n */\nexport const requiredForApproval = propKey => o =>\n  o.orderStatus === OrderStatus.APPROVED ? propKey : null\n\n/**\n * Value required to complete order\n * @param {object} o\n * @param {string | string[]} propKey these props are required to comlete the order\n * @returns {string | void} the key or `void`\n */\nexport const requiredForCompletion = propKey => o =>\n  o.orderStatus === OrderStatus.COMPLETE ? propKey : null\n\n/**\n *\n * @param {enum} from\n * @param {enum} to\n * @returns\n */\nconst invalidStatusChange = (from, to) => (o, propVal) =>\n  propVal === to && o[prevmodel].orderStatus === from\n\nconst invalidStatusChanges = [\n  // Can't change back to pending once approved\n  invalidStatusChange(OrderStatus.APPROVED, OrderStatus.PENDING),\n  // Can't change back to pending once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.PENDING),\n  // Can't change back to approved once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.APPROVED),\n  // Can't change directly to shipping from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.SHIPPING),\n  // Can't change directly to complete from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.COMPLETE),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.CANCELED),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.COMPLETE)\n]\n\n/**\n * Check that status changes are valid\n */\nexport const statusChangeValid = (o, propVal) => {\n  if (invalidStatusChanges.some(i => i(o, propVal))) {\n    throw new Error('invalid status change')\n  }\n  return true\n}\n\n/**\n *\n * @param {*} o\n * @param {*} propVal\n */\nexport const orderTotalValid = (o, propVal) =>\n  calcTotal(o.orderItems) === propVal\n\n/**\n * Recalculate order total\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const recalcTotal = (o, propVal) => ({\n  orderTotal: calcTotal(propVal)\n})\n\n/**\n * Updated signature requirement if `orderTotal` above certain value\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const updateSignature = (o, propVal) => ({\n  signatureRequired: calcTotal(propVal) > 999.99 || o.signatureRequired\n})\n\n/**\n * Don't delete orders before they're complete.\n */\nexport function readyToDelete (model) {\n  if (\n    ![OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(model.orderStatus)\n  ) {\n    throw new Error('order must be canceled or completed')\n  }\n  return model\n}\n\n/**\n *\n * @param {Error} error\n * @param {Order} order\n * @param {*} func\n */\nfunction handleError (error, order, func) {\n  const errMsg = { func, orderNo: order.orderNo, error }\n  if (order) order.emit('orderError', errMsg)\n\n  throw new Error(JSON.stringify(errMsg))\n}\n\n/**\n * Callback invoked by adapter when payment is complete\n * @param {{model:Order}} options\n */\nexport async function paymentCompleted (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'confirmationCode',\n    options,\n    payload,\n    paymentCompleted.name\n  )\n  return order.update({ ...changes, orderStatus: OrderStatus.COMPLETE })\n}\n\n/**\n * Callback invoked by shipping adapter when order is picked up.\n * @param {{model:Order}} options\n * @param {string} shipmentId\n */\nexport async function orderShipped (options = {}, payload = {}) {\n  const { model: order } = options\n  const shipmentPayload = checkPayload(\n    'shipmentId',\n    options,\n    payload,\n    orderShipped.name\n  )\n  return order.update({\n    shipmentId: shipmentPayload.shipmentId,\n    orderStatus: OrderStatus.SHIPPING\n  })\n}\n\n/**\n * Callback invoked when order is ready for pickup\n * @param {{ model:Order }} options\n */\nexport async function orderPicked (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'pickupAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update(changes)\n}\n\n/**\n * Callback invoked when shippingAddress is verified (and possibly corrected)\n * @param {{ model:Order }} options\n * @param {string} shippingAddress\n */\nexport async function addressValidated (options = {}, payload = {}) {\n  const { model: order } = options\n  const addressPayload = checkPayload(\n    'shippingAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update({ shippingAddress: addressPayload.shippingAddress })\n}\n\n/**\n * Called by adapter when port recevies response from payment service.\n * @param {{ model:Order }} options\n * @param {*} paymentAuthorization\n */\nexport async function paymentAuthorized (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'paymentStatus',\n    options,\n    payload,\n    paymentAuthorized.name\n  )\n  return order.update({ ...changes, paymentStatus }, false)\n}\n\n/**\n * Called to refund payment when order is canceled.\n * @param {*} options\n * @param {*} payload\n * @returns\n */\nexport async function refundPayment (order) {\n  // call port by same name.\n  order.refundPayment((options, payload) => {\n    const changes = checkPayload(\n      'refundReceipt',\n      options,\n      payload,\n      refundPayment.name\n    )\n    return order.update({ ...changes, orderStatus: OrderStatus.CANCELED })\n  })\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyAddress (order) {\n  console.debug({\n    fn: verifyAddress.name,\n    validateAddress: order.validateAddress\n  })\n  return order.validateAddress(addressValidated)\n}\n\n/**\n * Request the bank or lender to place a hold on\n * the customer account in the amount of the payment\n * due, to be withdrawn once the shipment is safely\n * in our customer's hands, or credited back if things\n * don't work out.\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyPayment (order) {\n  try {\n    /**\n     * @type {Order}\n     */\n    const authorizeOrder = await order.authorizePayment(paymentAuthorized)\n\n    if (!authorizeOrder.paymentDeclined) {\n      throw new Error('payment declined')\n    }\n\n    return authorizeOrder\n  } catch (e) {\n    handleError(e, order, verifyPayment.name)\n  }\n  return order\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n * @throws {'InsufficientInventory'}\n */\nasync function verifyInventory (order) {\n  const inventory = await order.inventory()\n  if (inventory.length < 1) throw new Error('bad inventory ID')\n\n  const insufficient = order.orderItems.filter(item => {\n    const inv = inventory.find(i => i.id === item.itemId)\n    if (!inv) return true\n    if (inv.quantity < item.qty) return true\n    return false\n  })\n\n  if (insufficient.length > 0) {\n    order.emit('lowOrOutOfStock', insufficient)\n    throw new Error(`low or out of stock: ${insufficient.map(i => i.itemId)}`)\n  }\n}\n/**\n * Copy existing customer data into the order\n * or create new customer from order details.\n *\n * @param {Order} order\n * @throws {'InvalidCustomerId'}\n */\nasync function getCustomerOrder (order) {\n  // If an id is given, try fetching the model\n  if (order.customerId) {\n    if (!order.customer) {\n      console.log({ order })\n    }\n    // Use the relation defined in the spec\n    const customer = await order.customer()\n\n    if (!customer) {\n      throw new Error('invalid customer id', order.customerId)\n    }\n\n    // Add customer data to the order\n    const custInfo = { ...customer.decrypt(), firstName: customer.firstName }\n    const update = await order.update(custInfo)\n\n    console.info('update order with data from existing customer', custInfo)\n    return update\n  }\n\n  // Create a new customer from the shipping details\n  if (order.saveShippingDetails) {\n    const custInfo = { ...order.decrypt(), firstName: order.firstName }\n    const customer = await order.customer(custInfo)\n\n    console.info('create new customer with data from order', customer)\n    return order\n  }\n\n  return order\n}\n\n/**\n * Handle a new order:\n * - fetch or save customer info\n * - check item availability\n * - authorize payment\n * - verify shipping address\n */\nconst processPendingOrder = asyncPipe(\n  getCustomerOrder,\n  verifyInventory,\n  verifyPayment,\n  verifyAddress\n)\n\n/**\n * Implements the beginging of the order service workflow.\n * The rest is implemented by the {@link ModelSpecification}.\n * See the port configuration section of {@link Order}.\n */\nconst OrderActions = {\n  /**\n   * Verifies the shipping address and authorizes payment\n   * for the order total when the order is first created,\n   * or when it is updated while still in pending status.\n   *\n   * @param {Order} order - the order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.PENDING]: async order => {\n    try {\n      /**@type {Order} */\n      const processedOrder = await processPendingOrder(order)\n\n      if (processedOrder.autoCheckout()) {\n        runOrderWorkflow(\n          processedOrder.update({ OrderStatus: OrderStatus.APPROVED }, false)\n        )\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    return order\n  },\n\n  /**\n   * If payment is authorized, check inventory.\n   * This kicks off the rest of the workflow,\n   * which is controlled by port event flow.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.APPROVED]: async order => {\n    console.log('typeof order', typeof order)\n    try {\n      if (/approved/i.test(order.paymentStatus)) {\n        return order.pickOrder(orderPicked)\n      }\n      await order.emit('PayAuthFail', 'Payment authorization problem')\n      return order\n    } catch (error) {\n      console.log({ error })\n      handleError(error, order, OrderStatus.APPROVED)\n    }\n    return order\n  },\n\n  /**\n   * Useful if we need to restart tracking.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.SHIPPING]: async order => {\n    try {\n      order.trackShipment(trackingUpdate)\n      console.debug({ func: OrderStatus.SHIPPING, order })\n      await (await order.update({ orderStatus: OrderStatus.SHIPPING })).emit(\n        'orderPicked'\n      )\n    } catch (error) {\n      handleError(error, order, OrderStatus.SHIPPING)\n    }\n    return order\n  },\n\n  /**\n   * Start cancellation process.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.CANCELED]: async order => {\n    try {\n      console.debug({\n        func: OrderStatus.CANCELED,\n        desc: 'order canceled, calling undo',\n        orderNo: order.orderNo\n      })\n      return order.undo()\n    } catch (error) {\n      handleError(error, order, OrderStatus.CANCELED)\n    }\n    return order\n  },\n  /**\n   *\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.COMPLETE]: async order => {\n    // send route to questionnaire, perform analysis, schedule follow-up\n    console.log('customer sentiment analysis, customer care, sales analysis')\n    return order\n  }\n}\n\n/**\n * Call order service workflow - controlled by status\n * @param {Order} order\n * @returns {Promise<Readonly<Order>>}\n */\nexport async function runOrderWorkflow (order) {\n  return OrderActions[order.orderStatus](order)\n}\n\n/**\n * Called on create, update, delete of model instance.\n * @param {{model:Promise<ReadOnly<Order>>}}\n */\nexport async function handleOrderEvent ({ model: order, eventType, changes }) {\n  if (changes?.orderStatus || eventType === 'CREATE') {\n    // console.debug({ fn: handleOrderEvent.name, order })\n    return runOrderWorkflow(order)\n  }\n}\n\n/**\n * Require a signature for orders $1000 and up\n * @param {*} input\n * @param {*} orderTotal\n */\nfunction needsSignature (input, orderTotal) {\n  return typeof input === 'boolean' ? input : orderTotal > 999.99\n}\n\n/** format and classify log entries */\nfunction logMessage (message, type) {\n  const msg = typeof message === 'string' ? message : JSON.stringify(message)\n\n  return {\n    desc: msg.substring(0, 140),\n    type,\n    time: Date.now(),\n    toJSON () {\n      return {\n        desc: this.desc,\n        type,\n        time: new Date(this.time).toUTCString()\n      }\n    }\n  }\n}\n\n/**\n * Returns factory function for the Order model.\n * @type {import('../domain/index.js').modelSpecFactoryFn}\n * @param {*} dependencies - inject dependencies\n */\nexport function makeOrderFactory (dependencies) {\n  return async function createOrder ({\n    orderItems,\n    email = null,\n    lastName = null,\n    firstName = null,\n    customerId = null,\n    billingAddress = null,\n    shippingAddress = null,\n    creditCardNumber = null,\n    shippingPriority = null,\n    autoCheckout = false,\n    saveShippingDetails = false,\n    requireSignature,\n    fibonacci = 10\n  }) {\n    const total = calcTotal(orderItems)\n    const signatureRequired = needsSignature(requireSignature, total)\n    const order = {\n      email,\n      lastName,\n      firstName,\n      customerId,\n      orderItems,\n      creditCardNumber,\n      billingAddress,\n      shippingAddress,\n      signatureRequired,\n      saveShippingDetails,\n      shippingPriority,\n      fibonacci,\n      result: 0,\n      time: 0,\n      estimatedArrival: null,\n      log: [logMessage('order created')],\n      [orderTotal]: total,\n      [orderStatus]: OrderStatus.PENDING,\n      [orderNo]: dependencies.uuid(),\n      desc: 'new order 25',\n      /**\n       * Has payment for the order been authorized?\n       */\n      paymentAccepted () {\n        return true\n      },\n      /**\n       * Proceed to checkout automatically or wait for approval?\n       */\n      autoCheckout () {\n        return autoCheckout\n      },\n      totalItems () {\n        return itemCount(this.orderItems)\n      },\n      total () {\n        return calcTotal(this.orderItems)\n      },\n      addItem (item) {\n        if (checkItem(item)) {\n          this.orderItems.push(item)\n          return true\n        }\n        return false\n      },\n      logEvent (message, type = 'info') {\n        this.log.push(logMessage(message, type))\n      },\n      logError (message) {\n        this.logEvent(message, 'error')\n      },\n      logUndo (message) {\n        this.logEvent(message, 'undo')\n      },\n      logStateChange (message) {\n        this.logEvent(message, 'stateChange')\n      },\n      /**\n       *\n       * @param {viewLog} options\n       * @returns {logMessageFn[]|logMessageFn}\n       */\n      readLog ({ index = null, type = null }) {\n        const indx = parseInt(index)\n        if (indx < this.log.length && indx !== NaN) return this.log[indx]\n        if (type === 'first') return this.log[0]\n        if (type === 'last') return this.log[this.log.length - 1]\n        if (type === 'lastStateChange')\n          return this.log[this.log.lastIndexOf({ type: 'stateChange' })]\n        if (type === 'stateChanges')\n          return this.log.filter(l => l.type === 'stateChange')\n        if (type === 'error') return this.log.filter(l => l.type === 'error')\n        if (type === 'undo') return this.log.filter(l => l.type === 'undo')\n        return this.log\n      }\n    }\n\n    return Object.freeze(order)\n  }\n}\n\n/**\n * Called as command to approve/submit order.\n * @param {Order} order\n */\nexport async function approve (order) {\n  console.debug({ msg: 'got order', order })\n  const approvedOrder = order.updateSync({\n    orderStatus: OrderStatus.APPROVED\n  }, false)\n  console.debug({ approvedOrder })\n  approvedOrder.logStateChange(OrderStatus.APPROVED)\n  return runOrderWorkflow(approvedOrder)\n}\n\n/**\n * Called as command to cancel order.\n * @param {Order} order\n */\nexport async function cancel (order) {\n  const canceledOrder = await order.update({\n    orderStatus: OrderStatus.CANCELED\n  })\n  canceledOrder.logStateChange(OrderStatus.CANCELED)\n  return runOrderWorkflow(canceledOrder)\n}\n\n/**\n * Alias of `approve`\n * @param {Order} order\n * @returns\n */\nexport async function checkout (order) {\n  return approve(order)\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function errorCallback ({ port, model: order, error }) {\n  const errMsg = { error, port, error }\n  console.error(errorCallback.name, errMsg)\n  order.logEvent(errMsg)\n  order.emit(errorCallback.name, errMsg)\n  return order.undo()\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function timeoutCallback ({ port, ports, adapterFn, model: order }) {\n  console.error('timeout...', port)\n  //order.logError(timeoutCallback.name, 'timeout')\n  order.emit(timeoutCallback.name, errMsg)\n}\n\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnInventory (order) {\n  console.log(returnInventory.name)\n  order.logEvent(returnInventory.name, 'timeout')\n  order.emit(returnInventory.name, errMsg)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n * Start process for the shipper to pick the items to return.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnShipment (order) {\n  console.log(returnShipment.name)\n  order.logUndo(returnShipment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\nexport function accountOrder (req, res) {}\n1\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnDelivery (order) {\n  console.log(returnDelivery.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n */\nexport async function cancelPayment (order) {\n  console.log(cancelPayment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n","export * from './order'\nexport * from './customer'\nexport * from './inventory'\nexport * from './user'\n","'use strict'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  hashPasswords,\n  validateProperties\n} from './mixins'\n\nexport function userFactory ({ uuid }) {\n  return async ({\n    userName,\n    password,\n    customerId,\n    firstName,\n    lastName,\n    phone,\n    email,\n    fibonacci\n  } = {}) =>\n    Object.freeze({\n      userId: uuid(),\n      password,\n      userName,\n      customerId,\n      firstName,\n      lastName,\n      phone,\n      email,\n      fibonacci\n    })\n}\n\nexport const userMixins = [\n  requireProperties('userName', 'password', 'firstName'),\n  freezeProperties('userId', 'userName'),\n  hashPasswords('password'),\n  validateProperties([\n    {\n      propKey: 'email',\n      regex: 'email',\n      unique: { encrypted: true }\n    },\n    {\n      propKey: 'userName',\n      unique: { encrypted: false }\n    }\n  ])\n]\n","'use strict'\n\nimport crypto from 'crypto'\nimport { nanoid } from 'nanoid'\n\nexport function compose (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal)\n  }\n}\n\nexport function composeAsync (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    )\n  }\n}\n\n/**\n * @callback pipeFn\n * @param {object} obj - the object to compose\n * @returns {object} - the composed object\n */\n\n/**\n * @param {pipeFn} func\n */\nexport const asyncPipe = (...func) => obj =>\n  func.reduce((o, f) => o.then(f), Promise.resolve(obj))\n\nconst passwd = process.env.ENCRYPTION_PWD\nconst algo = 'aes-192-cbc'\nconst key = crypto.scryptSync(String(passwd), 'salt', 24)\nconst iv = Buffer.alloc(16, 0)\n\nexport function encrypt (text) {\n  const cipher = crypto.createCipheriv(algo, key, iv)\n  let encrypted = cipher.update(text, 'utf8', 'hex')\n  encrypted += cipher.final('hex')\n  return encrypted\n}\n\nexport function decrypt (cipherText) {\n  console.log('decrypt(%s)', cipherText)\n  const decipher = crypto.createDecipheriv(algo, key, iv)\n  let decrypted = decipher.update(cipherText, 'hex', 'utf8')\n  decrypted += decipher.final('utf8')\n  return decrypted\n}\n\nexport function hash (data) {\n  return crypto\n    .createHash('sha1')\n    .update(data)\n    .digest('hex')\n}\n\nexport function uuid () {\n  // return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n  //   (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  // );\n  return nanoid()\n}\n\nexport function makeArray (v) {\n  return Array.isArray(v) ? v : [v]\n}\n\nexport function makeObject (prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }))\n  }\n  return prop\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async (promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result)\n    }))\n    .catch(error => {\n      console.error(error)\n      return Promise.resolve({ ok: false, error })\n    })\n}\n"],"sourceRoot":""}