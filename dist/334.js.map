{"version":3,"sources":["webpack://microlib-example/./src/domain/utils.js","webpack://microlib-example/./src/services/event-service.js"],"names":["compose","funcs","initVal","reduceRight","val","func","composeAsync","then","Promise","resolve","asyncPipe","obj","reduce","o","f","passwd","process","env","ENCRYPTION_PWD","algo","key","crypto","String","iv","Buffer","alloc","encrypt","text","cipher","encrypted","update","decrypt","cipherText","console","log","decipher","decrypted","hash","data","digest","uuid","nanoid","makeArray","v","Array","isArray","makeObject","prop","p","c","async","promise","result","ok","object","asObject","asArray","error","brokers","KAFKA_BROKERS","topics","RegExp","KAFKA_TOPICS","groupId","KAFKA_GROUP_ID","pid","kafka","Kafka","clientId","split","consumer","producer","Event","listening","listen","topic","callback","connect","subscribe","fromBeginning","run","eachMessage","message","value","toString","notify","send","messages","disconnect","name"],"mappings":"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","file":"334.js","sourcesContent":["'use strict'\n\nimport crypto from 'crypto'\nimport { nanoid } from 'nanoid'\n\nexport function compose (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal)\n  }\n}\n\nexport function composeAsync (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    )\n  }\n}\n\n/**\n * @callback pipeFn\n * @param {object} obj - the object to compose\n * @returns {object} - the composed object\n */\n\n/**\n * @param {pipeFn} func\n */\nexport const asyncPipe = (...func) => obj =>\n  func.reduce((o, f) => o.then(f), Promise.resolve(obj))\n\nconst passwd = process.env.ENCRYPTION_PWD\nconst algo = 'aes-192-cbc'\nconst key = crypto.scryptSync(String(passwd), 'salt', 24)\nconst iv = Buffer.alloc(16, 0)\n\nexport function encrypt (text) {\n  const cipher = crypto.createCipheriv(algo, key, iv)\n  let encrypted = cipher.update(text, 'utf8', 'hex')\n  encrypted += cipher.final('hex')\n  return encrypted\n}\n\nexport function decrypt (cipherText) {\n  console.log('decrypt(%s)', cipherText)\n  const decipher = crypto.createDecipheriv(algo, key, iv)\n  let decrypted = decipher.update(cipherText, 'hex', 'utf8')\n  decrypted += decipher.final('utf8')\n  return decrypted\n}\n\nexport function hash (data) {\n  return crypto\n    .createHash('sha1')\n    .update(data)\n    .digest('hex')\n}\n\nexport function uuid () {\n  // return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n  //   (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  // );\n  return nanoid()\n}\n\nexport function makeArray (v) {\n  return Array.isArray(v) ? v : [v]\n}\n\nexport function makeObject (prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }))\n  }\n  return prop\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async (promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result)\n    }))\n    .catch(error => {\n      console.error(error)\n      return Promise.resolve({ ok: false, error })\n    })\n}\n","\"use strict\";\n\nimport { Kafka } from \"kafkajs\";\n\nconst brokers = process.env.KAFKA_BROKERS || \"localhost:9092\";\nconst topics = new RegExp(process.env.KAFKA_TOPICS) || /Channel/;\nconst groupId = (process.env.KAFKA_GROUP_ID || \"MicroLib\") + process.pid;\n\nconst kafka = new Kafka({\n  clientId: \"MicroLib\",\n  brokers: brokers.split(\",\"),\n});\n\nconst consumer = kafka.consumer({ groupId });\nconst producer = kafka.producer();\n\n/**\n * @typedef {EventService}\n */\nexport const Event = {\n  listening: false,\n  topics,\n\n  /**\n   * Implements event consumer service.\n   * @param {string|RegExp} topic\n   * @param {function({message, topic})} callback\n   */\n  async listen(topic, callback) {\n    try {\n      await consumer.connect();\n      await consumer.subscribe({ topic, fromBeginning: true });\n      this.listening = true;\n      await consumer.run({\n        eachMessage: async ({ topic, message }) => {\n          try {\n            callback({\n              topic,\n              message: message.value.toString(),\n            });\n          } catch (error) {\n            console.error(error);\n          }\n        },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  /**\n   * Implemements event producer service.\n   * @param {string|RegExp} topic\n   * @param {string} message\n   */\n  async notify(topic, message) {\n    try {\n      await producer.connect();\n      await producer.send({\n        topic: topic,\n        messages: [{ value: message }],\n      });\n      await producer.disconnect();\n    } catch (error) {\n      console.error({ func: this.notify.name, error });\n    }\n  },\n};\n"],"sourceRoot":""}