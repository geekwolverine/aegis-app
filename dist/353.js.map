{"version":3,"sources":["webpack://microlib-example/./src/domain/check-payload.js","webpack://microlib-example/./src/domain/customer.js","webpack://microlib-example/./src/domain/inventory.js","webpack://microlib-example/./src/domain/mixins.js","webpack://microlib-example/./src/domain/order.js","webpack://microlib-example/./src/domain/user.js","webpack://microlib-example/./src/domain/utils.js"],"names":["checkPayload","key","options","payload","port","name","model","Object","keys","Error","desc","error","Array","isArray","map","k","reduce","p","c","find","then","latest","makeCustomerFactory","dependencies","createCustomer","firstName","lastName","shippingAddress","creditCardNumber","billingAddress","phone","email","userId","freeze","customerId","uuid","okToDelete","customer","orders","length","console","func","assetTypes","properties","categories","makeInventoryFactory","category","price","discount","sku","purchaseOrder","vendor","inStock","assetType","quantity","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","changes","JSON","parse","stringify","updates","compose","values","updated","updateMixins","type","o","cb","mixinSet","Map","has","set","eventMask","update","create","onload","handleUpdateEvent","event","isUpdate","decrypted","decrypt","isObject","containsUpdates","changeList","every","util","fn","validateModel","input","filter","v","sort","a","b","order","apply","output","enableEvent","onUpdate","onCreate","onLoad","enabled","enableValidation","onCreateAndUpdate","onAll","never","addValidation","config","some","warn","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","freezeProperties","preventUpdates","mutations","includes","requireProperties","requireProps","missing","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","concat","unknownProps","qs","rejectUnknownProperties","RegEx","ipv4Address","ipv6Address","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","propKey","Validator","tests","isValid","regex","maxnum","maxlen","validateProperties","validate","invalid","updateProperties","updaters","updateProps","u","invokePort","args","log","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","value","x","encryptPersonalInfo","GlobalMixins","orderStatus","orderTotal","orderNo","OrderStatus","PENDING","APPROVED","SHIPPING","COMPLETE","CANCELED","checkItem","orderItem","itemId","checkItems","orderItems","items","calcTotal","total","item","qty","itemCount","freezeOnApproval","finalStatus","status","freezeOnCompletion","requiredForGuest","requiredForApproval","requiredForCompletion","invalidStatusChange","from","to","invalidStatusChanges","statusChangeValid","i","orderTotalValid","recalcTotal","updateSignature","signatureRequired","readyToDelete","handleError","errMsg","emit","paymentCompleted","orderShipped","shipmentPayload","shipmentId","orderPicked","addressValidated","addressPayload","paymentAuthorized","paymentStatus","refundPayment","verifyAddress","debug","validateAddress","verifyPayment","authorizePayment","authorizeOrder","paymentDeclined","verifyInventory","inventory","insufficient","inv","id","getCustomerOrder","custInfo","info","saveShippingDetails","processPendingOrder","asyncPipe","OrderActions","processedOrder","autoCheckout","runOrderWorkflow","pickOrder","trackShipment","trackingUpdate","undo","handleOrderEvent","eventType","needsSignature","logMessage","message","msg","substring","time","Date","now","toJSON","toUTCString","makeOrderFactory","shippingPriority","requireSignature","fibonacci","result","estimatedArrival","push","logEvent","index","indx","parseInt","NaN","lastIndexOf","l","createOrder","approve","approvedOrder","updateSync","logStateChange","cancel","canceledOrder","checkout","errorCallback","timeoutCallback","ports","adapterFn","returnInventory","returnShipment","logUndo","accountOrder","req","res","returnDelivery","cancelPayment","userFactory","userName","password","userMixins","funcs","initVal","reduceRight","composeAsync","Promise","resolve","f","passwd","process","env","ENCRYPTION_PWD","algo","crypto","String","iv","Buffer","alloc","text","cipher","cipherText","decipher","data","digest","nanoid","makeArray","makeObject","prop","async","promise","ok","object","asObject","asArray"],"mappings":"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","file":"353.js","sourcesContent":["'use strict'\n\n/**\n * Check the payload for expected properties.\n * @param {string|string[]} key name of property or properties\n * @param {*} options\n * @param {*} payload\n * @param {*} port\n */\nexport default function checkPayload (\n  key,\n  options = {},\n  payload = {},\n  port = checkPayload.name\n) {\n  const { model } = options\n\n  if (!model || Object.keys(payload) < 1 || !key) {\n    throw new Error({\n      desc: 'model, payload, or key is missing',\n      model,\n      port,\n      error,\n      payload,\n      key\n    })\n  }\n\n  if (Array.isArray(key)) {\n    const keys = key.map(k => checkPayload(k, options, payload, port))\n\n    return keys.reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  if (payload[key]) {\n    return { [key]: payload[key] }\n  }\n\n  if (model[key]) {\n    return { [key]: model[key] }\n  }\n\n  return model\n    .find()\n    .then(latest => ({ [key]: latest[key] }))\n    .catch(error => {\n      throw new Error('property is missing' + key, port, error, payload, model)\n    })\n}\n","\"use strict\";\n\nexport function makeCustomerFactory(dependencies) {\n  return function createCustomer({\n    firstName,\n    lastName,\n    shippingAddress,\n    creditCardNumber,\n    billingAddress = shippingAddress,\n    phone,\n    email,\n    userId,\n  } = {}) {\n    return Object.freeze({\n      customerId: dependencies.uuid(),\n      firstName,\n      lastName,\n      creditCardNumber,\n      shippingAddress,\n      billingAddress,\n      phone,\n      email,\n      userId,\n    });\n  };\n}\n\nexport async function okToDelete(customer) {\n  try {\n    const orders = await customer.orders();\n    return orders.length > 0;\n  } catch (error) {\n    console.error({ func: okToDelete.name, error });\n    return true;\n  }\n}\n","'use strict'\n\nexport const assetTypes = ['rotating-asset', 'spare-part']\nexport const properties = ['height', 'length', 'width', 'weight', 'color']\nexport const categories = ['home', 'auto', 'business']\n\nexport const makeInventoryFactory = dependencies => ({\n  category,\n  properties,\n  price,\n  discount,\n  name,\n  desc,\n  sku,\n  purchaseOrder,\n  vendor,\n  inStock,\n  assetType,\n  quantity\n}) =>\n  Object.freeze({\n    category,\n    properties,\n    price: price - (discount || 0.0),\n    name,\n    desc,\n    sku,\n    purchaseOrder,\n    vendor,\n    inStock,\n    assetType,\n    quantity\n  })\n","'use strict'\n\nimport { hash, encrypt, decrypt, compose } from '../domain/utils'\nimport util from 'util'\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol('prevModel')\n/**\n * private key to access validation config\n */\nexport const validations = Symbol('validations')\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol('pre'),\n  post: Symbol('post')\n}\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol('preUpdateMixins'),\n  [mixinType.post]: Symbol('postUpdateMixins')\n}\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre]\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post]\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate (model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)) // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes\n\n  const updated = { ...model, ...updates }\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins (type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error('invalid mixin type')\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map()\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb())\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet\n    }\n  }\n  return o\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2 //  0100 Load\n}\n\nfunction handleUpdateEvent (model, updates, event) {\n  const isUpdate = eventMask.update & event\n  const decrypted = isUpdate ? model.decrypt() : {}\n  return {\n    ...model,\n    ...updates,\n    ...decrypted\n  }\n}\n\nfunction isObject (p) {\n  return p != null && typeof p === 'object'\n}\n\nfunction containsUpdates (model, changes, event) {\n  try {\n    if (!changes) return false\n    if (eventMask.update & event) {\n      const changeList = Object.keys(changes)\n      if (changeList.length < 1) return false\n\n      if (\n        changeList.every(\n          k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n        )\n      ) {\n        return false\n      }\n    }\n    return true\n  } catch (error) {\n    console.error({ fn: containsUpdates.name, error })\n  }\n  return false\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see {@link eventMask}.\n */\nexport function validateModel (model, changes, event) {\n  if (!model || !changes || !event) return {}\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) }\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input)\n\n  const updated = { ...model, ...updates }\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated)\n}\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent (onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0\n\n  if (onUpdate) {\n    enabled |= eventMask.update\n  }\n  if (onCreate) {\n    enabled |= eventMask.create\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload\n  }\n  return enabled\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate: enableEvent(true, false, false),\n    /**\n     * Validation runs on create.\n     */\n    onCreate: enableEvent(false, true, false),\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate: enableEvent(true, true, false),\n    /**\n     * Validation runs on load.\n     */\n    onLoad: enableEvent(false, false, true),\n    /**\n     * Validation runs on all events.\n     */\n    onAll: enableEvent(true, true, true),\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never: enableEvent(false, false, false)\n  }\n})()\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation ({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || []\n\n  if (config.some(v => v.name === name)) {\n    console.warn('duplicate validation name', name)\n    return model\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }]\n  }\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys (o, ...propKeys) {\n  if (!propKeys || !o) return null\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === 'function') return k(o)\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key))\n    if (k === '*') return Object.keys(o)\n    return k\n  })\n  return keys.flat()\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    encryptProperties () {\n      return encryptProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    }),\n\n    decrypt () {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n}\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys)\n\n    const mutations = Object.keys(obj).filter(key => keys.includes(key))\n    if (mutations?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${mutations}`)\n    }\n  }\n\n  return {\n    freezeProperties () {\n      preventUpdates(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20\n    })\n  }\n}\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function requireProps (obj) {\n    const missing = keys.filter(key => key && !obj[key])\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`)\n    }\n  }\n  return {\n    requireProperties () {\n      requireProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 90\n    })\n  }\n}\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function hashPwds (obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    hashPasswords () {\n      return hashPwds(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    })\n  }\n}\n\nconst internalPropList = []\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps () {\n    const keys = parseKeys(o, ...propKeys)\n    const allowList = keys.concat(internalPropList)\n\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key))\n\n    if (unknownProps?.length > 0) {\n      qs\n      throw new Error(`invalid properties: ${unknownProps}`)\n    }\n  }\n\n  return {\n    rejectUnknownProperties () {\n      return rejectUnknownProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: rejectUnknownProps.name,\n      input: enableValidation.onUpdate,\n      order: 10\n    })\n  }\n}\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test (expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr\n    return _expr.test(val)\n  }\n}\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:numbertp\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness (v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal\n  return o.listSync({ [v.propKey]: compareVal }).length < 1\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal)\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid (v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal)\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate (obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey]\n\n      if (!propVal) {\n        return false\n      }\n      return !Validator.isValid(v, obj, propVal)\n    })\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`)\n    }\n  }\n\n  return {\n    validateProperties () {\n      validate(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 50\n    })\n  }\n}\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps (obj) {\n    const updates = updaters.filter(u => obj[u.propKey])\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n\n  return {\n    updateProperties () {\n      return updateProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 30\n    })\n  }\n}\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort () {\n      console.log({ func: 'invokePort', fn, args })\n      return this[fn](...args).then(o => o)\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'invokePort',\n      output: enableValidation.onUpdate,\n      order: 85\n    })\n  }\n}\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o)\n  }\n\n  return {\n    ...o,\n    async execMethod () {\n      const model = await functionType[typeof fn](fn, this, ...args)\n      return model\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'execMethod',\n      output: enableValidation.onUpdate,\n      order: 40\n    })\n  }\n}\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args)\n  }\n}\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`)\n  }\n  return propKey\n}\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr\n    throw new Error(`${x} invalid`)\n  }\n}\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n)\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo]\n\nexport default GlobalMixins\n","'use strict'\n\nimport { prevmodel } from './mixins'\nimport { asyncPipe } from '../domain/utils'\nimport checkPayload from './check-payload'\n\n/** @typedef { import('../domain/index.js').ModelSpecification} ModelSpecification */\n/** @typedef {string|RegExp} topic*/\n/** @typedef {function(string)} eventCallback*/\n/** @typedef {import('../adapters/index').adapterFunction} adapterFunction*/\n/** @typedef {string} id */\n/** @typedef {import(\"./customer\").Customer} Customer */\n/** @typedef {function(Order)} undoFunction */\n/**\n * @callback logMessageFn\n * @param {object|string} message\n * @param {logType} [type]\n */\n\n/** @typedef {'first'|'last'|'lastStateChange'|'stateChange'|'error'|'undo'} logType */\n\n/**\n * @typedef readLogType\n * @property {number} index\n * @property  {logType} type\n */\n\n/**\n * @typedef {{\n *  itemId: string,\n *  price: number,\n *  qty?: number\n * }} orderItemType\n */\n\n/**\n * @callback relationFunction\n * @property {...args}\n * @returns {Promise<Model>}\n * } relationFunction\n */\n\n/**\n *  @typedef {Object} Order The Order Service\n * @property {function(topic,eventCallback)} listen - listen for events\n * @property {import('../adapters/event-adapter').notifyType} notify\n * @property {adapterFunction} validateAddress - returns valid address or throws exception\n * @property {adapterFunction} completePayment - completes payment for an authorized charge\n * @property {adapterFunction} verifyDelivery - verify the order was received by the customer\n * @property {adapterFunction} trackShipment\n * @property {adapterFunction} refundPayment\n * @property {relationFunction} inventory - reserve inventory items\n * @property {adapterFunction} undo - undo all transactions up to this point\n * @property {function():Promise<Order>} pickOrder - pick items from warehouse and prepare for shipment\n * @property {adapterFunction} authorizePayment - verify payment, i.e. reserve the balance due\n * @property {import('../adapters/shipping-adapter').shipOrder} shipOrder -\n * calls shipping service to print label and request delivery\n * @property {function(Order):Promise<void>} save - saves order\n * @property {function():Promise<Order>} find - finds order\n * @property {string} shippingAddress\n * @property {string} orderNo = the order number\n * @property {string} trackingId - id given by tracking status for this `orderNo`\n * @property {function():Order} decrypt - decrypts sensitive properties\n * @property {function({key1:any,keyN:any}, boolean):Promise<Order>} update - update the order,\n * set the second arg to false to turn off validation.\n * @property {'PENDING'|'APPROVED'|'SHIPPING'|'CANCELED'|'COMPLETED'} orderStatus\n * @property {function(...args):Promise<import(\"../domain/index\").Model>} customer - retrieves related customer object,\n * or if args are provided, creates a new customer object, using the provided args as the input.\n * @property {function(string,Order):Promise} emit - broadcast domain event\n * @property {function():boolean} paymentAccepted - payment approved and funds reserved\n * @property {function():boolean} autoCheckout - whether or not to immediately submit the order\n * @property {boolean} saveShippingDetails save shipping and payment details in a new customer record\n * @property {{itemId:string,price:number,qty:number}[]} orderItems\n * @property {Symbol} customerId {@link Customer}\n * @property {logMessageFn} logEvent\n * @property {logMessageFn} logError\n * @property {logMessageFn} logUndo\n * @property {logMessageFn} logStateChange\n * @property {readMessageFn} readLog\n */\n\nconst orderStatus = 'orderStatus'\nconst orderTotal = 'orderTotal'\nconst orderNo = 'orderNo'\n\nexport const OrderStatus = {\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  SHIPPING: 'SHIPPING',\n  COMPLETE: 'COMPLETE',\n  CANCELED: 'CANCELED'\n}\n\n/**\n *\n * @param {orderItemType} orderItem\n * @returns {boolean} true if item is valid\n */\nexport const checkItem = function (orderItem) {\n  return (\n    typeof orderItem.itemId === 'string' && typeof orderItem.price === 'number'\n  )\n}\n\n/**\n * @param {orderItemType[]} orderItems\n */\nexport const checkItems = function (orderItems) {\n  if (!orderItems || orderItems.length < 1) {\n    throw new Error('order contains no items')\n  }\n  const items = Array.isArray(orderItems) ? orderItems : [orderItems]\n\n  if (items.length > 0 && items.every(checkItem)) {\n    return items\n  }\n  throw new Error('order items invalid')\n}\n\n/**\n * Calculate order total\n * @param {orderItemType[]} orderItems\n */\nexport const calcTotal = function (orderItems) {\n  const items = checkItems(orderItems)\n\n  return items.reduce((total, item) => {\n    const qty = item.qty || 1\n    return (total += item.price * qty)\n  }, 0)\n}\n\n/**\n * @param {orderItemType[]} orderItems\n * @returns {number} number of items\n */\nexport const itemCount = function (orderItems) {\n  return orderItems.reduce((total, item) => (total += item.qty || 1))\n}\n\n/**\n * No changes to `propKey` properties once the order is approved\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnApproval = propKey => o =>\n  o.orderStatus && o.orderStatus !== OrderStatus.PENDING ? propKey : null\n\nconst finalStatus = status =>\n  [OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(status)\n\n/**\n * No changes to `propKey` once order is complete or canceled\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnCompletion = propKey => o =>\n  finalStatus(o.orderStatus) ? null : propKey\n\n/**\n * If not a registered customer, provide shipping & payment details.\n * @param {*} o\n * @param {*} propKey\n * @returns {string | void} the key or `void`\n */\nexport const requiredForGuest = propKey => o => (o.customerId ? null : propKey)\n\n/**\n * Value required to approve order.\n * @param {*} propKey\n */\nexport const requiredForApproval = propKey => o =>\n  o.orderStatus === OrderStatus.APPROVED ? propKey : null\n\n/**\n * Value required to complete order\n * @param {object} o\n * @param {string | string[]} propKey these props are required to comlete the order\n * @returns {string | void} the key or `void`\n */\nexport const requiredForCompletion = propKey => o =>\n  o.orderStatus === OrderStatus.COMPLETE ? propKey : null\n\n/**\n *\n * @param {enum} from\n * @param {enum} to\n * @returns\n */\nconst invalidStatusChange = (from, to) => (o, propVal) =>\n  propVal === to && o[prevmodel].orderStatus === from\n\nconst invalidStatusChanges = [\n  // Can't change back to pending once approved\n  invalidStatusChange(OrderStatus.APPROVED, OrderStatus.PENDING),\n  // Can't change back to pending once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.PENDING),\n  // Can't change back to approved once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.APPROVED),\n  // Can't change directly to shipping from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.SHIPPING),\n  // Can't change directly to complete from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.COMPLETE),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.CANCELED),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.COMPLETE)\n]\n\n/**\n * Check that status changes are valid\n */\nexport const statusChangeValid = (o, propVal) => {\n  if (invalidStatusChanges.some(i => i(o, propVal))) {\n    throw new Error('invalid status change')\n  }\n  return true\n}\n\n/**\n *\n * @param {*} o\n * @param {*} propVal\n */\nexport const orderTotalValid = (o, propVal) =>\n  calcTotal(o.orderItems) === propVal\n\n/**\n * Recalculate order total\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const recalcTotal = (o, propVal) => ({\n  orderTotal: calcTotal(propVal)\n})\n\n/**\n * Updated signature requirement if `orderTotal` above certain value\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const updateSignature = (o, propVal) => ({\n  signatureRequired: calcTotal(propVal) > 999.99 || o.signatureRequired\n})\n\n/**\n * Don't delete orders before they're complete.\n */\nexport function readyToDelete (model) {\n  if (\n    ![OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(model.orderStatus)\n  ) {\n    throw new Error('order must be canceled or completed')\n  }\n  return model\n}\n\n/**\n *\n * @param {Error} error\n * @param {Order} order\n * @param {*} func\n */\nfunction handleError (error, order, func) {\n  const errMsg = { func, orderNo: order.orderNo, error }\n  if (order) order.emit('orderError', errMsg)\n\n  throw new Error(JSON.stringify(errMsg))\n}\n\n/**\n * Callback invoked by adapter when payment is complete\n * @param {{model:Order}} options\n */\nexport async function paymentCompleted (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'confirmationCode',\n    options,\n    payload,\n    paymentCompleted.name\n  )\n  return order.update({ ...changes, orderStatus: OrderStatus.COMPLETE })\n}\n\n/**\n * Callback invoked by shipping adapter when order is picked up.\n * @param {{model:Order}} options\n * @param {string} shipmentId\n */\nexport async function orderShipped (options = {}, payload = {}) {\n  const { model: order } = options\n  const shipmentPayload = checkPayload(\n    'shipmentId',\n    options,\n    payload,\n    orderShipped.name\n  )\n  return order.update({\n    shipmentId: shipmentPayload.shipmentId,\n    orderStatus: OrderStatus.SHIPPING\n  })\n}\n\n/**\n * Callback invoked when order is ready for pickup\n * @param {{ model:Order }} options\n */\nexport async function orderPicked (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'pickupAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update(changes)\n}\n\n/**\n * Callback invoked when shippingAddress is verified (and possibly corrected)\n * @param {{ model:Order }} options\n * @param {string} shippingAddress\n */\nexport async function addressValidated (options = {}, payload = {}) {\n  const { model: order } = options\n  const addressPayload = checkPayload(\n    'shippingAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update({ shippingAddress: addressPayload.shippingAddress })\n}\n\n/**\n * Called by adapter when port recevies response from payment service.\n * @param {{ model:Order }} options\n * @param {*} paymentAuthorization\n */\nexport async function paymentAuthorized (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'paymentStatus',\n    options,\n    payload,\n    paymentAuthorized.name\n  )\n  return order.update({ ...changes, paymentStatus }, false)\n}\n\n/**\n * Called to refund payment when order is canceled.\n * @param {*} options\n * @param {*} payload\n * @returns\n */\nexport async function refundPayment (order) {\n  // call port by same name.\n  order.refundPayment((options, payload) => {\n    const changes = checkPayload(\n      'refundReceipt',\n      options,\n      payload,\n      refundPayment.name\n    )\n    return order.update({ ...changes, orderStatus: OrderStatus.CANCELED })\n  })\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyAddress (order) {\n  console.debug({\n    fn: verifyAddress.name,\n    validateAddress: order.validateAddress\n  })\n  return order.validateAddress(addressValidated)\n}\n\n/**\n * Request the bank or lender to place a hold on\n * the customer account in the amount of the payment\n * due, to be withdrawn once the shipment is safely\n * in our customer's hands, or credited back if things\n * don't work out.\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyPayment (order) {\n  try {\n    /**\n     * @type {Order}\n     */\n    const authorizeOrder = await order.authorizePayment(paymentAuthorized)\n\n    if (!authorizeOrder.paymentDeclined) {\n      throw new Error('payment declined')\n    }\n\n    return authorizeOrder\n  } catch (e) {\n    handleError(e, order, verifyPayment.name)\n  }\n  return order\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n * @throws {'InsufficientInventory'}\n */\nasync function verifyInventory (order) {\n  const inventory = await order.inventory()\n  if (inventory.length < 1) throw new Error('bad inventory ID')\n\n  const insufficient = order.orderItems.filter(item => {\n    const inv = inventory.find(i => i.id === item.itemId)\n    if (!inv) return true\n    if (inv.quantity < item.qty) return true\n    return false\n  })\n\n  if (insufficient.length > 0) {\n    order.emit('lowOrOutOfStock', insufficient)\n    throw new Error(`low or out of stock: ${insufficient.map(i => i.itemId)}`)\n  }\n}\n/**\n * Copy existing customer data into the order\n * or create new customer from order details.\n *\n * @param {Order} order\n * @throws {'InvalidCustomerId'}\n */\nasync function getCustomerOrder (order) {\n  // If an id is given, try fetching the model\n  if (order.customerId) {\n    if (!order.customer) {\n      console.log({ order })\n    }\n    // Use the relation defined in the spec\n    const customer = await order.customer()\n\n    if (!customer) {\n      throw new Error('invalid customer id', order.customerId)\n    }\n\n    // Add customer data to the order\n    const custInfo = { ...customer.decrypt(), firstName: customer.firstName }\n    const update = await order.update(custInfo)\n\n    console.info('update order with data from existing customer', custInfo)\n    return update\n  }\n\n  // Create a new customer from the shipping details\n  if (order.saveShippingDetails) {\n    const custInfo = { ...order.decrypt(), firstName: order.firstName }\n    const customer = await order.customer(custInfo)\n\n    console.info('create new customer with data from order', customer)\n    return order\n  }\n\n  return order\n}\n\n/**\n * Handle a new order:\n * - fetch or save customer info\n * - check item availability\n * - authorize payment\n * - verify shipping address\n */\nconst processPendingOrder = asyncPipe(\n  getCustomerOrder,\n  verifyInventory,\n  verifyPayment,\n  verifyAddress\n)\n\n/**\n * Implements the beginging of the order service workflow.\n * The rest is implemented by the {@link ModelSpecification}.\n * See the port configuration section of {@link Order}.\n */\nconst OrderActions = {\n  /**\n   * Verifies the shipping address and authorizes payment\n   * for the order total when the order is first created,\n   * or when it is updated while still in pending status.\n   *\n   * @param {Order} order - the order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.PENDING]: async order => {\n    try {\n      /**@type {Order} */\n      const processedOrder = await processPendingOrder(order)\n\n      if (processedOrder.autoCheckout()) {\n        runOrderWorkflow(\n          processedOrder.update({ OrderStatus: OrderStatus.APPROVED }, false)\n        )\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    return order\n  },\n\n  /**\n   * If payment is authorized, check inventory.\n   * This kicks off the rest of the workflow,\n   * which is controlled by port event flow.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.APPROVED]: async order => {\n    console.log('typeof order', typeof order)\n    try {\n      if (/approved/i.test(order.paymentStatus)) {\n        return order.pickOrder(orderPicked)\n      }\n      await order.emit('PayAuthFail', 'Payment authorization problem')\n      return order\n    } catch (error) {\n      console.log({ error })\n      handleError(error, order, OrderStatus.APPROVED)\n    }\n    return order\n  },\n\n  /**\n   * Useful if we need to restart tracking.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.SHIPPING]: async order => {\n    try {\n      order.trackShipment(trackingUpdate)\n      console.debug({ func: OrderStatus.SHIPPING, order })\n      await (await order.update({ orderStatus: OrderStatus.SHIPPING })).emit(\n        'orderPicked'\n      )\n    } catch (error) {\n      handleError(error, order, OrderStatus.SHIPPING)\n    }\n    return order\n  },\n\n  /**\n   * Start cancellation process.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.CANCELED]: async order => {\n    try {\n      console.debug({\n        func: OrderStatus.CANCELED,\n        desc: 'order canceled, calling undo',\n        orderNo: order.orderNo\n      })\n      return order.undo()\n    } catch (error) {\n      handleError(error, order, OrderStatus.CANCELED)\n    }\n    return order\n  },\n  /**\n   *\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.COMPLETE]: async order => {\n    // send route to questionnaire, perform analysis, schedule follow-up\n    console.log('customer sentiment analysis, customer care, sales analysis')\n    return order\n  }\n}\n\n/**\n * Call order service workflow - controlled by status\n * @param {Order} order\n * @returns {Promise<Readonly<Order>>}\n */\nexport async function runOrderWorkflow (order) {\n  return OrderActions[order.orderStatus](order)\n}\n\n/**\n * Called on create, update, delete of model instance.\n * @param {{model:Promise<ReadOnly<Order>>}}\n */\nexport async function handleOrderEvent ({ model: order, eventType, changes }) {\n  if (changes?.orderStatus || eventType === 'CREATE') {\n    // console.debug({ fn: handleOrderEvent.name, order })\n    return runOrderWorkflow(order)\n  }\n}\n\n/**\n * Require a signature for orders $1000 and up\n * @param {*} input\n * @param {*} orderTotal\n */\nfunction needsSignature (input, orderTotal) {\n  return typeof input === 'boolean' ? input : orderTotal > 999.99\n}\n\n/** format and classify log entries */\nfunction logMessage (message, type) {\n  const msg = typeof message === 'string' ? message : JSON.stringify(message)\n\n  return {\n    desc: msg.substring(0, 140),\n    type,\n    time: Date.now(),\n    toJSON () {\n      return {\n        desc: this.desc,\n        type,\n        time: new Date(this.time).toUTCString()\n      }\n    }\n  }\n}\n\n/**\n * Returns factory function for the Order model.\n * @type {import('../domain/index.js').modelSpecFactoryFn}\n * @param {*} dependencies - inject dependencies\n */\nexport function makeOrderFactory (dependencies) {\n  return async function createOrder ({\n    orderItems,\n    email = null,\n    lastName = null,\n    firstName = null,\n    customerId = null,\n    billingAddress = null,\n    shippingAddress = null,\n    creditCardNumber = null,\n    shippingPriority = null,\n    autoCheckout = false,\n    saveShippingDetails = false,\n    requireSignature,\n    fibonacci = 10\n  }) {\n    const total = calcTotal(orderItems)\n    const signatureRequired = needsSignature(requireSignature, total)\n    const order = {\n      email,\n      lastName,\n      firstName,\n      customerId,\n      orderItems,\n      creditCardNumber,\n      billingAddress,\n      shippingAddress,\n      signatureRequired,\n      saveShippingDetails,\n      shippingPriority,\n      fibonacci,\n      result: 0,\n      time: 0,\n      estimatedArrival: null,\n      log: [logMessage('order created')],\n      [orderTotal]: total,\n      [orderStatus]: OrderStatus.PENDING,\n      [orderNo]: dependencies.uuid(),\n      desc: 'new order 25',\n      /**\n       * Has payment for the order been authorized?\n       */\n      paymentAccepted () {\n        return true\n      },\n      /**\n       * Proceed to checkout automatically or wait for approval?\n       */\n      autoCheckout () {\n        return autoCheckout\n      },\n      totalItems () {\n        return itemCount(this.orderItems)\n      },\n      total () {\n        return calcTotal(this.orderItems)\n      },\n      addItem (item) {\n        if (checkItem(item)) {\n          this.orderItems.push(item)\n          return true\n        }\n        return false\n      },\n      logEvent (message, type = 'info') {\n        this.log.push(logMessage(message, type))\n      },\n      logError (message) {\n        this.logEvent(message, 'error')\n      },\n      logUndo (message) {\n        this.logEvent(message, 'undo')\n      },\n      logStateChange (message) {\n        this.logEvent(message, 'stateChange')\n      },\n      /**\n       *\n       * @param {viewLog} options\n       * @returns {logMessageFn[]|logMessageFn}\n       */\n      readLog ({ index = null, type = null }) {\n        const indx = parseInt(index)\n        if (indx < this.log.length && indx !== NaN) return this.log[indx]\n        if (type === 'first') return this.log[0]\n        if (type === 'last') return this.log[this.log.length - 1]\n        if (type === 'lastStateChange')\n          return this.log[this.log.lastIndexOf({ type: 'stateChange' })]\n        if (type === 'stateChanges')\n          return this.log.filter(l => l.type === 'stateChange')\n        if (type === 'error') return this.log.filter(l => l.type === 'error')\n        if (type === 'undo') return this.log.filter(l => l.type === 'undo')\n        return this.log\n      }\n    }\n\n    return Object.freeze(order)\n  }\n}\n\n/**\n * Called as command to approve/submit order.\n * @param {Order} order\n */\nexport async function approve (order) {\n  console.debug({ msg: 'got order', order })\n  const approvedOrder = order.updateSync({\n    orderStatus: OrderStatus.APPROVED\n  }, false)\n  console.debug({ approvedOrder })\n  approvedOrder.logStateChange(OrderStatus.APPROVED)\n  return runOrderWorkflow(approvedOrder)\n}\n\n/**\n * Called as command to cancel order.\n * @param {Order} order\n */\nexport async function cancel (order) {\n  const canceledOrder = await order.update({\n    orderStatus: OrderStatus.CANCELED\n  })\n  canceledOrder.logStateChange(OrderStatus.CANCELED)\n  return runOrderWorkflow(canceledOrder)\n}\n\n/**\n * Alias of `approve`\n * @param {Order} order\n * @returns\n */\nexport async function checkout (order) {\n  return approve(order)\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function errorCallback ({ port, model: order, error }) {\n  const errMsg = { error, port, error }\n  console.error(errorCallback.name, errMsg)\n  order.logEvent(errMsg)\n  order.emit(errorCallback.name, errMsg)\n  return order.undo()\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function timeoutCallback ({ port, ports, adapterFn, model: order }) {\n  console.error('timeout...', port)\n  //order.logError(timeoutCallback.name, 'timeout')\n  order.emit(timeoutCallback.name, errMsg)\n}\n\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnInventory (order) {\n  console.log(returnInventory.name)\n  order.logEvent(returnInventory.name, 'timeout')\n  order.emit(returnInventory.name, errMsg)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n * Start process for the shipper to pick the items to return.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnShipment (order) {\n  console.log(returnShipment.name)\n  order.logUndo(returnShipment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\nexport function accountOrder (req, res) {}\n1\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnDelivery (order) {\n  console.log(returnDelivery.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n */\nexport async function cancelPayment (order) {\n  console.log(cancelPayment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n","'use strict'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  hashPasswords,\n  validateProperties\n} from './mixins'\n\nexport function userFactory ({ uuid }) {\n  return async ({\n    userName,\n    password,\n    customerId,\n    firstName,\n    lastName,\n    phone,\n    email,\n    fibonacci\n  } = {}) =>\n    Object.freeze({\n      userId: uuid(),\n      password,\n      userName,\n      customerId,\n      firstName,\n      lastName,\n      phone,\n      email,\n      fibonacci\n    })\n}\n\nexport const userMixins = [\n  requireProperties('userName', 'password', 'firstName'),\n  freezeProperties('userId', 'userName'),\n  hashPasswords('password'),\n  validateProperties([\n    {\n      propKey: 'email',\n      regex: 'email',\n      unique: { encrypted: true }\n    },\n    {\n      propKey: 'userName',\n      unique: { encrypted: false }\n    }\n  ])\n]\n","'use strict'\n\nimport crypto from 'crypto'\nimport { nanoid } from 'nanoid'\n\nexport function compose (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal)\n  }\n}\n\nexport function composeAsync (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    )\n  }\n}\n\n/**\n * @callback pipeFn\n * @param {object} obj - the object to compose\n * @returns {object} - the composed object\n */\n\n/**\n * @param {pipeFn} func\n */\nexport const asyncPipe = (...func) => obj =>\n  func.reduce((o, f) => o.then(f), Promise.resolve(obj))\n\nconst passwd = process.env.ENCRYPTION_PWD\nconst algo = 'aes-192-cbc'\nconst key = crypto.scryptSync(String(passwd), 'salt', 24)\nconst iv = Buffer.alloc(16, 0)\n\nexport function encrypt (text) {\n  const cipher = crypto.createCipheriv(algo, key, iv)\n  let encrypted = cipher.update(text, 'utf8', 'hex')\n  encrypted += cipher.final('hex')\n  return encrypted\n}\n\nexport function decrypt (cipherText) {\n  console.log('decrypt(%s)', cipherText)\n  const decipher = crypto.createDecipheriv(algo, key, iv)\n  let decrypted = decipher.update(cipherText, 'hex', 'utf8')\n  decrypted += decipher.final('utf8')\n  return decrypted\n}\n\nexport function hash (data) {\n  return crypto\n    .createHash('sha1')\n    .update(data)\n    .digest('hex')\n}\n\nexport function uuid () {\n  // return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n  //   (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  // );\n  return nanoid()\n}\n\nexport function makeArray (v) {\n  return Array.isArray(v) ? v : [v]\n}\n\nexport function makeObject (prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }))\n  }\n  return prop\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async (promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result)\n    }))\n    .catch(error => {\n      console.error(error)\n      return Promise.resolve({ ok: false, error })\n    })\n}\n"],"sourceRoot":""}