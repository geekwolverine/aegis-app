{"version":3,"sources":["webpack://microlib-example/./src/services/event-service.js"],"names":["brokers","process","env","KAFKA_BROKERS","topics","RegExp","KAFKA_TOPICS","groupId","KAFKA_GROUP_ID","pid","kafka","Kafka","clientId","split","consumer","producer","Event","listening","listen","topic","callback","connect","subscribe","fromBeginning","run","eachMessage","message","value","toString","error","console","notify","send","messages","disconnect","func","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAa;;;;+CACb,oJ;;;;;;AACA;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAZ,IAA6B,gBAA7C;AACA,IAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAWJ,OAAO,CAACC,GAAR,CAAYI,YAAvB,KAAwC,SAAvD;AACA,IAAMC,OAAO,GAAG,CAACN,OAAO,CAACC,GAAR,CAAYM,cAAZ,IAA8B,UAA/B,IAA6CP,OAAO,CAACQ,GAArE;AAEA,IAAMC,KAAK,GAAG,IAAIC,0CAAJ,CAAU;EACtBC,QAAQ,EAAE,UADY;EAEtBZ,OAAO,EAAEA,OAAO,CAACa,KAAR,CAAc,GAAd;AAFa,CAAV,CAAd;AAKA,IAAMC,QAAQ,GAAGJ,KAAK,CAACI,QAAN,CAAe;EAAEP,OAAO,EAAPA;AAAF,CAAf,CAAjB;AACA,IAAMQ,QAAQ,GAAGL,KAAK,CAACK,QAAN,EAAjB;AAEA;AACA;AACA;;AACO,IAAMC,KAAK,GAAG;EACnBC,SAAS,EAAE,KADQ;EAEnBb,MAAM,EAANA,MAFmB;;EAInB;AACF;AACA;AACA;AACA;EACQc,MATa,kBASNC,KATM,EASCC,QATD,EASW;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEpBN,QAAQ,CAACO,OAAT,EAFoB;;YAAA;cAAA;cAAA,OAGpBP,QAAQ,CAACQ,SAAT,CAAmB;gBAAEH,KAAK,EAALA,KAAF;gBAASI,aAAa,EAAE;cAAxB,CAAnB,CAHoB;;YAAA;cAI1B,KAAI,CAACN,SAAL,GAAiB,IAAjB;cAJ0B;cAAA,OAKpBH,QAAQ,CAACU,GAAT,CAAa;gBACjBC,WAAW;kBAAA,8EAAE;oBAAA;oBAAA;sBAAA;wBAAA;0BAAA;4BAASN,KAAT,QAASA,KAAT,EAAgBO,OAAhB,QAAgBA,OAAhB;;4BACX,IAAI;8BACFN,QAAQ,CAAC;gCACPD,KAAK,EAALA,KADO;gCAEPO,OAAO,EAAEA,OAAO,CAACC,KAAR,CAAcC,QAAd;8BAFF,CAAD,CAAR;4BAID,CALD,CAKE,OAAOC,KAAP,EAAc;8BACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;4BACD;;0BARU;0BAAA;4BAAA;wBAAA;sBAAA;oBAAA;kBAAA,CAAF;;kBAAA;oBAAA;kBAAA;;kBAAA;gBAAA;cADM,CAAb,CALoB;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAkB1BC,OAAO,CAACD,KAAR;;YAlB0B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAoB7B,CA7BkB;;EA+BnB;AACF;AACA;AACA;AACA;EACQE,MApCa,kBAoCNZ,KApCM,EAoCCO,OApCD,EAoCU;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEnBX,QAAQ,CAACM,OAAT,EAFmB;;YAAA;cAAA;cAAA,OAGnBN,QAAQ,CAACiB,IAAT,CAAc;gBAClBb,KAAK,EAAEA,KADW;gBAElBc,QAAQ,EAAE,CAAC;kBAAEN,KAAK,EAAED;gBAAT,CAAD;cAFQ,CAAd,CAHmB;;YAAA;cAAA;cAAA,OAOnBX,QAAQ,CAACmB,UAAT,EAPmB;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cASzBJ,OAAO,CAACD,KAAR,CAAc;gBAAEM,IAAI,EAAE,MAAI,CAACJ,MAAL,CAAYK,IAApB;gBAA0BP,KAAK;cAA/B,CAAd;;YATyB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAW5B;AA/CkB,CAAd,C","file":"419.js","sourcesContent":["\"use strict\";\n\nimport { Kafka } from \"kafkajs\";\n\nconst brokers = process.env.KAFKA_BROKERS || \"localhost:9092\";\nconst topics = new RegExp(process.env.KAFKA_TOPICS) || /Channel/;\nconst groupId = (process.env.KAFKA_GROUP_ID || \"MicroLib\") + process.pid;\n\nconst kafka = new Kafka({\n  clientId: \"MicroLib\",\n  brokers: brokers.split(\",\"),\n});\n\nconst consumer = kafka.consumer({ groupId });\nconst producer = kafka.producer();\n\n/**\n * @typedef {EventService}\n */\nexport const Event = {\n  listening: false,\n  topics,\n\n  /**\n   * Implements event consumer service.\n   * @param {string|RegExp} topic\n   * @param {function({message, topic})} callback\n   */\n  async listen(topic, callback) {\n    try {\n      await consumer.connect();\n      await consumer.subscribe({ topic, fromBeginning: true });\n      this.listening = true;\n      await consumer.run({\n        eachMessage: async ({ topic, message }) => {\n          try {\n            callback({\n              topic,\n              message: message.value.toString(),\n            });\n          } catch (error) {\n            console.error(error);\n          }\n        },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  /**\n   * Implemements event producer service.\n   * @param {string|RegExp} topic\n   * @param {string} message\n   */\n  async notify(topic, message) {\n    try {\n      await producer.connect();\n      await producer.send({\n        topic: topic,\n        messages: [{ value: message }],\n      });\n      await producer.disconnect();\n    } catch (error) {\n      console.error({ func: this.notify.name, error });\n    }\n  },\n};\n"],"sourceRoot":""}