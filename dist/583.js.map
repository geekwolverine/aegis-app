{"version":3,"sources":["webpack://microlib-example/./src/adapters/datasources/datasource-mongodb.js","webpack://microlib-example/./src/config/asset.js","webpack://microlib-example/./src/config/index.js","webpack://microlib-example/./src/config/inventory.js","webpack://microlib-example/./src/config/order.js","webpack://microlib-example/./src/config/user.js","webpack://microlib-example/./src/domain/asset.js","webpack://microlib-example/./src/domain/bind-adapters.js","webpack://microlib-example/./src/domain/check-payload.js","webpack://microlib-example/./src/domain/index.js","webpack://microlib-example/./src/domain/inventory.js","webpack://microlib-example/./src/domain/mixins.js","webpack://microlib-example/./src/domain/order.js","webpack://microlib-example/./src/domain/user.js","webpack://microlib-example/./src/domain/utils.js","webpack://microlib-example/./src/event-dispatcher.js","webpack://microlib-example/./src/service-registry.js","webpack://microlib-example/./test/mock/address-service.js","webpack://microlib-example/./test/mock/event-service.js","webpack://microlib-example/./test/mock/index.js","webpack://microlib-example/./test/mock/inventory-service.js","webpack://microlib-example/./test/mock/payment-service.js","webpack://microlib-example/./test/mock/shipping-service.js"],"names":["getSecret","process","env","MONGODB_CREDS","user","pass","token","archive","id","console","debug","DataSourceAdapterMongoDb","url","cacheSize","DataSourceMongoDb","DataSourceMongoDbArchive","datasource","factory","name","creds","Asset","modelName","endpoint","makeAssetFactory","Inventory","dependencies","makeInventoryFactory","mixins","requireProperties","validateProperties","propKey","maxnum","values","categories","assetTypes","isValid","_obj","prop","every","p","properties","freezeProperties","relations","orders","type","foreignKey","desc","Order","makeOrderFactory","uuid","nanoid","requiredForGuest","requiredForApproval","requiredForCompletion","freezeOnApproval","freezeOnCompletion","updateProperties","update","recalcTotal","updateSignature","Object","OrderStatus","statusChangeValid","orderTotalValid","regex","validate","validateModel","onDelete","readyToDelete","eventHandlers","handleOrderEvent","ports","listen","service","timeout","notify","save","find","validateAddress","keys","producesEvent","disabled","authorizePayment","consumesEvent","undo","cancelPayment","pickOrder","returnInventory","circuitBreaker","portTimeout_pickOrder_order","callVolume","errorRate","intervalMs","shipOrder","callback","orderShipped","returnShipment","portTimeout_shipOrder_order","portRetryFailed_order","fallbackFn","cancel","trackShipment","verifyDelivery","returnDelivery","completePayment","paymentCompleted","refundPayment","cancelShipment","customer","inventory","key","commands","decrypt","command","acl","approve","runFibonacci","model","start","Date","now","fibonacci","x","param","parseFloat","result","Number","isNaN","time","serializers","on","value","enabled","User","userFactory","userMixins","filename","baseurl","size_bytes","md5_hash","asset","freeze","createAsset","makeAdapters","adapters","services","map","port","e","warn","message","reduce","c","checkPayload","options","payload","Error","error","Array","isArray","k","then","latest","validateSpec","spec","missing","filter","length","entries","makeModel","concat","GlobalMixins","bindAdapters","models","modelSpecs","category","price","discount","sku","purchaseOrder","vendor","inStock","assetType","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","changes","JSON","parse","stringify","updates","compose","updated","updateMixins","o","cb","mixinSet","Map","has","set","eventMask","create","onload","handleUpdateEvent","event","isUpdate","decrypted","isObject","containsUpdates","changeList","util","input","v","sort","a","b","order","apply","output","enableValidation","onUpdate","enableEvent","onCreate","onCreateAndUpdate","onLoad","onAll","never","addValidation","config","some","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","preventUpdates","sideEffects","includes","requireProps","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","unknownProps","rejectUnknownProperties","RegEx","email","ipv4Address","ipv6Address","phone","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","Validator","tests","maxlen","invalid","updaters","updateProps","u","invokePort","fn","args","log","func","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","encryptPersonalInfo","orderStatus","orderTotal","orderNo","PENDING","APPROVED","SHIPPING","COMPLETE","CANCELED","checkItem","orderItem","itemId","checkItems","orderItems","items","calcTotal","total","item","qty","calcNumItems","customerId","invalidStatusChange","from","to","invalidStatusChanges","isc","signatureRequired","handleError","emit","shipmentPayload","shipmentId","orderPicked","addressValidated","addressPayload","shippingAddress","paymentAuthorized","verifyAddress","verifyPayment","authorizedOrder","paymentAccepted","verifyInventory","getCustomerOrder","custInfo","firstName","info","saveShippingDetails","processPendingOrder","asyncPipe","OrderActions","processedOrder","autoCheckout","runOrderWorkflow","eventType","needsSignature","logEntry","toJSON","toUTCString","lastName","billingAddress","creditCardNumber","shippingPriority","requireSignature","estimatedArrival","paymentAuthorization","push","createOrder","approvedOrder","canceledOrder","submit","errorCallback","timeoutCallback","adapterFn","userName","password","userId","funcs","initVal","reduceRight","composeAsync","Promise","resolve","f","passwd","ENCRYPTION_PWD","algo","crypto","String","iv","Buffer","alloc","text","cipher","cipherText","decipher","data","digest","makeArray","makeObject","async","promise","ok","object","asObject","asArray","EventDispatcher","adapter","Event","subscriptions","topic","get","method","emitEvent","forEach","bind","Registry","eventNames","sendEvent","eventData","eventSource","eventName","setTimeout","eventTime","generateShippingEventData","externalId","trackingId","proofOfDelivery","trackingStatus","generateShippingMessage","commandResp","inventoryCallbackFactory","inventoryCallback","warehouseAddress","commandArgs","replyChannel","warehouse_addr","shippingCallbackFactory","shippingCallback","_message","dispatcher","registerCallback","Address","address","shippingChannel","inventoryChannel","callbacks","responses","topics","handleEvents","req","res","body","topicName","msg","code","toString","response","send","listening","init","lineItems","pickupAddress","Payment","amount","source_id","customer_id","autocomplete","currency","idempotency_key","amount_money","location_id","reference_id","note","app_fee_money","createEventMessage","requester","eventTarget","getTime","eventUuid","createCommandEvent","commandName","Shipping","serviceName","shipTo","shipFrom","signature","respondOn","getPayload","payloads","getProperty"],"mappings":"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;AAWdC,oBAAI,EAAE,mBAXQ;AAYdC,6BAAa,EAAE;AACbV,wBAAM,EAAE,EADK;AAEbI,0BAAQ,EAAE;AAFG;AAZD,eAFhB;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxDI,+CA8DO,MA9DP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+DD,GAhFoB;;AAkFrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEQnW,iBA1Je,2BA0JCa,KA1JD,EA0JQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B5G,qBAAO,CAACoR,GAAR,CAAY,6BAAZ,EAA2CxK,KAAK,CAACmL,OAAjD;AAD2B,gDAEpB,MAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG5B,GA7JoB;AA+Jf9L,eA/Je,yBA+JDW,KA/JC,EA+JM;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB5G,qBAAO,CAACoR,GAAR,CAAY,4BAAZ,EAA0CxK,KAAK,CAACmL,OAAhD;;AADyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1B;AAjKoB,CAAhB,C;;;;;;;;;;;;;;;;;;;AC1BM;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA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","file":"583.js","sourcesContent":["\"use strict\";\n\nfunction getSecret() {\n  return process.env.MONGODB_CREDS || { user: null, pass: null, token: null };\n}\n\nfunction archive(id) {\n  console.debug(\"mock archive\", id);\n}\n\n/**\n * Datasource adapter factory.\n * @param {string} url database url\n * @param {number} [cacheSize] number of models to keep in cache\n * @param {*} DataSource base class that enables caching\n * @returns {import(\"./datasource\").default}\n */\nexport const DataSourceAdapterMongoDb = function (\n  url,\n  cacheSize,\n  DataSourceMongoDb\n) {\n  /**\n   * MongoDB adapter extends in-memory datasource to support caching.\n   * The cache is always updated first, which allows the system to run\n   * even when the database is offline.\n   */\n  class DataSourceMongoDbArchive extends DataSourceMongoDb {\n    constructor(datasource, factory, name) {\n      super(datasource, factory, name);\n      this.url = url;\n      this.cacheSize = cacheSize;\n      this.creds = getSecret();\n    }\n\n    /**\n     * @override\n     */\n    delete(id) {\n      console.debug(\"archive\", id);\n      archive(id);\n    }\n  }\n\n  return DataSourceMongoDbArchive;\n};\n","'use strict'\n\nimport { makeAssetFactory } from '../domain/asset';\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Asset = {\n  modelName: 'asset',\n  endpoint: 'assets',\n  factory: makeAssetFactory\n}","export * from './order'\nexport * from './user'\n// export * from \"./customer\";\n// export * from \"./product\";\nexport * from './inventory'\nexport * from './asset'\n","'use strict'\n\nimport {\n  makeInventoryFactory,\n  assetTypes,\n  properties,\n  categories\n} from '../domain/inventory'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  validateProperties\n} from '../domain/mixins'\n\n/**\n * @type {import(\"../domain/order\").ModelSpecification}\n */\nexport const Inventory = {\n  modelName: 'inventory',\n  endpoint: 'inventory',\n  dependencies: {},\n  factory: makeInventoryFactory,\n  mixins: [\n    requireProperties('name', 'inStock', 'category', 'price', 'purchaseOrder'),\n    validateProperties([\n      {\n        propKey: 'inStock',\n        typeof: 'number',\n        maxnum: 99999\n      },\n      {\n        propKey: 'category',\n        values: categories\n      },\n      {\n        propKey: 'assetType',\n        values: assetTypes\n      },\n      {\n        propKey: 'properties',\n        isValid: (_obj, prop) => prop.every(p => properties.includes(p))\n      },\n      {\n        propKey: 'price',\n        typeof: 'number',\n        maxnum: 999.99\n      }\n    ]),\n    freezeProperties('*')\n  ],\n  relations: {\n    orders: {\n      modelName: 'order',\n      type: 'oneToMany',\n      foreignKey: 'itemId',\n      desc: 'many items per order'\n    }\n  }\n}\n","'use strict'\n\nimport {\n  makeOrderFactory,\n  readyToDelete,\n  handleOrderEvent,\n  orderShipped,\n  paymentCompleted,\n  OrderStatus,\n  recalcTotal,\n  requiredForCompletion,\n  statusChangeValid,\n  freezeOnApproval,\n  freezeOnCompletion,\n  orderTotalValid,\n  returnInventory,\n  returnShipment,\n  refundPayment,\n  returnDelivery,\n  cancelPayment,\n  updateSignature,\n  requiredForGuest,\n  requiredForApproval,\n  approve,\n  cancel\n} from '../domain/order' \n\nimport {\n  requireProperties,\n  freezeProperties,\n  updateProperties,\n  validateProperties,\n  validateModel\n} from '../domain/mixins'\n\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport { nanoid } from 'nanoid'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Order = {\n  modelName: 'order',\n  endpoint: 'orders',\n  factory: makeOrderFactory,\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: 'mongodb://localhost:27017',\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceMongoDb'\n  // },\n  dependencies: { uuid: () => nanoid(8) },\n  mixins: [\n    requireProperties(\n      'orderItems',\n      requiredForGuest([\n        'lastName',\n        'firstName',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'email'\n      ]),\n      requiredForApproval('paymentAuthorization'),\n      requiredForCompletion('proofOfDelivery')\n    ),\n    freezeProperties(\n      'orderNo',\n      'customerId',\n      freezeOnApproval([\n        'email',\n        'lastName',\n        'firstName',\n        'orderItems',\n        'orderTotal',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'paymentAuthorization'\n      ]),\n      freezeOnCompletion('*')\n    ),\n    updateProperties([\n      {\n        propKey: 'orderItems',\n        update: recalcTotal\n      },\n      {\n        propKey: 'orderItems',\n        update: updateSignature\n      }\n    ]),\n    validateProperties([\n      {\n        propKey: 'orderStatus',\n        values: Object.values(OrderStatus),\n        isValid: statusChangeValid\n      },\n      {\n        propKey: 'orderTotal',\n        maxnum: 99999.99,\n        isValid: orderTotalValid\n      },\n      {\n        propKey: 'email',\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      },\n      {\n        propKey: 'phone',\n        regex: 'phone'\n      }\n    ])\n  ],\n  validate: validateModel,\n  onDelete: readyToDelete,\n  eventHandlers: [handleOrderEvent],\n  ports: {\n    listen: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    notify: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    save: {\n      service: 'Persistence',\n      type: 'outbound',\n      timeout: 0\n    },\n    find: {\n      service: 'Persistence',\n      type: 'outbound',\n      timeout: 0\n    },\n    validateAddress: {\n      service: 'Address',\n      type: 'outbound',\n      keys: 'shippingAddress',\n      producesEvent: 'addressValidated',\n      disabled: true\n    },\n    authorizePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      keys: 'paymentAuthorization',\n      consumesEvent: 'startWorkflow',\n      producesEvent: 'paymentAuthorized',\n      undo: cancelPayment\n    },\n    pickOrder: {\n      service: 'Inventory',\n      type: 'outbound',\n      keys: 'pickupAddress',\n      consumesEvent: 'itemsAvailable',\n      producesEvent: 'orderPicked',\n      undo: returnInventory,\n      circuitBreaker: {\n        portTimeout_pickOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    shipOrder: {\n      service: 'Shipping',\n      type: 'outbound',\n      callback: orderShipped,\n      consumesEvent: 'orderPicked',\n      producesEvent: 'orderShipped',\n      undo: returnShipment,\n      circuitBreaker: {\n        portTimeout_shipOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        },\n        portRetryFailed_order: {\n          callVolume: 3,\n          errorRate: 2,\n          intervalMs: 60000,\n          fallbackFn: cancel\n        },\n        default: {\n          callVolume: 3,\n          errorRate: 3,\n          intervalMs: 60000\n        }\n      }\n    },\n    trackShipment: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: ['trackingStatus', 'trackingId'],\n      consumesEvent: 'orderShipped',\n      producesEvent: 'orderDelivered',\n      circuitBreaker: {\n        portRetryFailed_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    verifyDelivery: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: 'proofOfDelivery',\n      consumesEvent: 'orderDelivered',\n      producesEvent: 'deliveryVerified',\n      undo: returnDelivery\n    },\n    completePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      callback: paymentCompleted,\n      consumesEvent: 'deliveryVerified',\n      producesEvent: 'orderComplete',\n      undo: refundPayment\n    },\n    cancelShipment: {\n      service: 'Shipping',\n      type: 'outbound'\n    },\n    refundPayment: {\n      service: 'Payment',\n      type: 'outbound'\n    }\n  },\n  relations: {\n    customer: {\n      modelName: 'customer',\n      foreignKey: 'customerId',\n      type: 'manyToOne',\n      desc: 'Many orders per customer, just one customer per order'\n    },\n    inventory: {\n      modelName: 'inventory',\n      foreignKey: 'itemId',\n      key: 'orderItems',\n      type: 'containsMany',\n      desc: 'An order contains a list of inventory items to ship.'\n    }\n  },\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    },\n    approve: {\n      command: approve,\n      acl: ['write', 'approve']\n    },\n    cancel: {\n      command: cancel,\n      acl: ['write', 'cancel']\n    },\n    runFibonacci: {\n      command: model => {\n        const start = Date.now()\n        function fibonacci (x) {\n          if (x === 0) {\n            return 0\n          }\n          if (x === 1) {\n            return 1\n          }\n          return fibonacci(x - 1) + fibonacci(x - 2)\n        }\n        const param = parseFloat(model.fibonacci)\n        return {\n          result: fibonacci(Number.isNaN(param) ? 10 : param),\n          time: Date.now() - start\n        }\n      },\n      acl: ['read', 'write']\n    }\n  },\n  serializers: [\n    {\n      on: 'deserialize',\n      key: 'creditCardNumber',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'shippingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'billingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    }\n  ]\n}\n","'use strict'\n\nimport { validateModel } from '../domain/mixins'\nimport { userFactory, userMixins } from '../domain/user'\nimport { uuid } from '../domain/utils'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const User = {\n  modelName: 'user',\n  endpoint: 'users',\n  dependencies: { uuid },\n  factory: userFactory,\n  mixins: userMixins,\n  validate: validateModel,\n  relations: {\n    customer: {\n      foreignKey: 'customerId',\n      type: 'oneToOne',\n      modelName: 'customer'\n    }\n  }\n}\n","\"use strict\";\n\nexport function makeAssetFactory(dependencies) {\n  return async function createAsset({\n    filename, \n    baseurl, \n    type, \n    size_bytes, \n    md5_hash\n  }) {\n    const asset = {\n      filename, \n      baseurl, \n      type, \n      size_bytes, \n      md5_hash\n    }\n\n    return Object.freeze(asset)\n  }\n}\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","\"use strict\";\n\n/**\n * Check the payload for expected properties.\n * @param {string|string[]} key name of property or properties\n * @param {*} options\n * @param {*} payload\n * @param {*} port\n */\nexport default function checkPayload(\n  key,\n  options = {},\n  payload = {},\n  port = checkPayload.name\n) {\n  const { model } = options;\n\n  if (!model || Object.keys(payload) < 1 || !key) {\n    throw new Error({\n      desc: \"model, payload, or key is missing\",\n      model,\n      port,\n      error,\n      payload,\n      key,\n    });\n  }\n\n  if (Array.isArray(key)) {\n    const keys = key.map(k => checkPayload(k, options, payload, port));\n\n    return keys.reduce((p, c) => ({ ...p, ...c }));\n  }\n\n  if (payload[key]) {\n    return { [key]: payload[key] };\n  }\n\n  if (model[key]) {\n    return { [key]: model[key] };\n  }\n\n  return model\n    .find()\n    .then(latest => ({ [key]: latest[key] }))\n    .catch(error => {\n      throw new Error({\n        desc: \"property is missing\" + key,\n        port,\n        error,\n        payload,\n        model,\n      });\n    });\n}\n","\"use strict\";\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    endpointUri: string,\n *    port:ports[p],\n *    callback: ({\n *      body:string,\n *      headers:{},\n *      params:{}}) => Promise<{\n *        body,status,headers\n *      }>\n *    })\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies \n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [endpoints] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\nimport GlobalMixins from \"./mixins\";\nimport bindAdapters from \"./bind-adapters\";\n// Service dependencies\nimport * as services from \"../../test/mock\";\nimport * as adapters from \"../adapters\";\n// Model properties\nimport * as modelSpecs from \"../config\";\n\nfunction validateSpec(spec) {\n  const missing = [\"modelName\", \"endpoint\", \"factory\"].filter(key => !spec[key]);\n  if (missing?.length > 0) {\n    throw new Error(`missing properties: ${missing}, spec: ${Object.entries(spec)}`);\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel(spec) {\n  validateSpec(spec);\n  const mixins = spec.mixins || [];\n  const dependencies = spec.dependencies || {};\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services),\n    },\n  };\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec));","'use strict'\n\nexport const assetTypes = ['rotating-asset', 'spare-part']\nexport const properties = ['height', 'length', 'width', 'weight', 'color']\nexport const categories = ['home', 'auto', 'business']\n\nexport const makeInventoryFactory = dependencies => ({\n  category,\n  properties,\n  price,\n  discount,\n  name,\n  desc,\n  sku,\n  purchaseOrder,\n  vendor,\n  inStock,\n  assetType\n}) =>\n  Object.freeze({\n    category,\n    properties,\n    price: price - (discount || 0.0),\n    name,\n    desc,\n    sku,\n    purchaseOrder,\n    vendor,\n    inStock,\n    assetType\n  })\n","\"use strict\";\n\nimport { hash, encrypt, decrypt, compose } from \"../domain/utils\";\nimport util from \"util\";\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol(\"prevModel\");\n/**\n * private key to access validation config\n */\nexport const validations = Symbol(\"validations\");\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol(\"pre\"),\n  post: Symbol(\"post\"),\n};\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol(\"preUpdateMixins\"),\n  [mixinType.post]: Symbol(\"postUpdateMixins\"),\n};\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre];\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post];\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate(model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)); // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes;\n\n  const updated = { ...model, ...updates };\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated;\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins(type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error(\"invalid mixin type\");\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map();\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb());\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet,\n    };\n  }\n  return o;\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2, //  0100 Load\n};\n\nfunction handleUpdateEvent(model, updates, event) {\n  const isUpdate = eventMask.update & event;\n  const decrypted = isUpdate ? model.decrypt() : {};\n  return {\n    ...model,\n    ...updates,\n    ...decrypted,\n  };\n}\n\nfunction isObject(p) {\n  return p != null && typeof p === \"object\";\n}\n\nfunction containsUpdates(model, changes, event) {\n  if (eventMask.update & event) {\n    const changeList = Object.keys(changes);\n    if (changeList.length < 1) return false;\n\n    if (\n      changeList.every(\n        k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n      )\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see `eventMask`.\n */\nexport function validateModel(model, changes, event) {\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model;\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) };\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input);\n\n  const updated = { ...model, ...updates };\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated);\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  const onUpdate = enableEvent(true, false, false);\n  const onCreate = enableEvent(false, true, false);\n  const onCreateAndUpdate = enableEvent(true, true, false);\n  const onLoad = enableEvent(false, false, true);\n  const onAll = enableEvent(true, true, true);\n  const never = enableEvent(false, false, false);\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate,\n    /**\n     * Validation runs on create.\n     */\n    onCreate,\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate,\n    /**\n     * Validation runs on load.\n     */\n    onLoad,\n    /**\n     * Validation runs on all events.\n     */\n    onAll,\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never,\n  };\n})();\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent(onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0;\n\n  if (onUpdate) {\n    enabled |= eventMask.update;\n  }\n  if (onCreate) {\n    enabled |= eventMask.create;\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload;\n  }\n  return enabled;\n}\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || [];\n\n  if (config.some(v => v.name === name)) {\n    return model;\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }],\n  };\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys(o, ...propKeys) {\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === \"function\") return k(o);\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key));\n    if (k === \"*\") return Object.keys(o);\n    return k;\n  });\n  return keys.flat();\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties =\n  (...propKeys) =>\n  o => {\n    const keys = parseKeys(o, ...propKeys);\n\n    const encryptProps = obj => {\n      return keys\n        .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }));\n    };\n\n    return {\n      encryptProperties() {\n        return encryptProps(this);\n      },\n\n      ...addValidation({\n        model: o,\n        name: encryptProperties.name,\n        input: enableValidation.onUpdate,\n        output: enableValidation.onCreate,\n        order: 99,\n      }),\n\n      decrypt() {\n        return keys\n          .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n          .reduce((p, c) => ({ ...p, ...c }));\n      },\n    };\n  };\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties =\n  (...propKeys) =>\n  o => {\n    const preventUpdates = obj => {\n      const keys = parseKeys(obj, ...propKeys);\n\n      const sideEffects = Object.keys(obj).filter(key => keys.includes(key));\n      if (sideEffects?.length > 0) {\n        throw new Error(`cannot update readonly properties: ${sideEffects}`);\n      }\n    };\n\n    return {\n      freezeProperties() {\n        preventUpdates(this);\n      },\n\n      ...addValidation({\n        model: o,\n        name: freezeProperties.name,\n        input: enableValidation.onUpdate,\n        order: 20,\n      }),\n    };\n  };\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties =\n  (...propKeys) =>\n  o => {\n    const keys = parseKeys(o, ...propKeys);\n\n    function requireProps(obj) {\n      const missing = keys.filter(key => key && !obj[key]);\n      if (missing?.length > 0) {\n        throw new Error(`missing required properties: ${missing}`);\n      }\n    }\n    return {\n      requireProperties() {\n        requireProps(this);\n      },\n\n      ...addValidation({\n        model: o,\n        name: requireProperties.name,\n        output: enableValidation.onCreateAndUpdate,\n        order: 75,\n      }),\n    };\n  };\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords =\n  (...propKeys) =>\n  o => {\n    const keys = parseKeys(o, ...propKeys);\n\n    function hashPwds(obj) {\n      return keys\n        .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }));\n    }\n\n    return {\n      hashPasswords() {\n        return hashPwds(this);\n      },\n\n      ...addValidation({\n        model: o,\n        name: hashPasswords.name,\n        input: enableValidation.onUpdate,\n        output: enableValidation.onCreate,\n        order: 80,\n      }),\n    };\n  };\n\nconst internalPropList = [];\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties =\n  (...propKeys) =>\n  o => {\n    function rejectUnknownProps() {\n      const keys = parseKeys(o, ...propKeys);\n\n      const allowList = keys.concat(internalPropList);\n      const unknownProps = Object.keys(o).filter(\n        key => !allowList.includes(key)\n      );\n\n      if (unknownProps?.length > 0) {\n        throw new Error(`invalid properties: ${unknownProps}`);\n      }\n    }\n\n    return {\n      rejectUnknownProperties() {\n        return rejectUnknownProps(this);\n      },\n\n      ...addValidation({\n        model: o,\n        name: \"rejectUnknownProperties\",\n        input: enableValidation.onUpdate,\n        order: 15,\n      }),\n    };\n  };\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address:\n    /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address:\n    /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard:\n    /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test(expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr;\n    return _expr.test(val);\n  },\n};\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:number\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness(v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal;\n  return o.listSync({ [v.propKey]: compareVal }).length < 1;\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal),\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid(v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal);\n      }\n      return true;\n    });\n  },\n};\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate(obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey];\n\n      if (!propVal) {\n        return false;\n      }\n      return !Validator.isValid(v, obj, propVal);\n    });\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`);\n    }\n  }\n\n  return {\n    validateProperties() {\n      validate(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 90,\n    }),\n  };\n};\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps(obj) {\n    const updates = updaters.filter(u => obj[u.propKey]);\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }));\n    }\n  }\n\n  return {\n    updateProperties() {\n      return updateProps(this);\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 35,\n    }),\n  };\n};\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort =\n  (fn, onCreate, onUpdate, ...args) =>\n  async o => {\n    return {\n      ...o,\n      invokePort() {\n        console.log({ func: \"invokePort\", fn, args });\n        return this[fn](...args).then(o => o);\n      },\n\n      ...addValidation({\n        model: o,\n        name: \"invokePort\",\n        output: enableValidation.onUpdate,\n        order: 85,\n      }),\n    };\n  };\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod =\n  (fn, onCreate, onUpdate, ...args) =>\n  async o => {\n    const functionType = {\n      function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n      string: (fn, obj, ...args) => obj[fn](...args).then(o => o),\n    };\n\n    return {\n      ...o,\n      async execMethod() {\n        const model = await functionType[typeof fn](fn, this, ...args);\n        return model;\n      },\n\n      ...addValidation({\n        model: o,\n        name: \"execMethod\",\n        output: enableValidation.onUpdate,\n        order: 40,\n      }),\n    };\n  };\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod =\n  (fn, ...args) =>\n  o => {\n    return {\n      ...o,\n      [fn.name]: () => fn(...args),\n    };\n  };\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`);\n  }\n  return propKey;\n};\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr;\n    throw new Error(`${x} invalid`);\n  }\n};\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n);\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo];\n\nexport default GlobalMixins;\n","'use strict'\n\nimport { prevmodel } from './mixins'\nimport checkPayload from './check-payload'\nimport { asyncPipe } from '../domain/utils'\n\n/** @typedef { import('../domain/index.js').ModelSpecification} ModelSpecification */\n/** @typedef {string|RegExp} topic*/\n/** @typedef {function(string)} eventCallback*/\n/** @typedef {import('../adapters/index').adapterFunction} adapterFunction*/\n/** @typedef {string} id */\n/** @typedef {import(\"./customer\").Customer} Customer */\n/** @typedef {function(Order)} undoFunction */\n\n/**\n * @typedef {Object} Order The Order Service\n * @property {function(topic,eventCallback)} listen - listen for events\n * @property {import('../adapters/event-adapter').notifyType} notify\n * @property {adapterFunction} validateAddress - returns valid address or throws exception\n * @property {adapterFunction} completePayment - completes payment for an authorized charge\n * @property {adapterFunction} verifyDelivery - verify the order was received by the customer\n * @property {adapterFunction} trackShipment\n * @property {adapterFunction} refundPayment\n * @property {function()} inventory - inventory relation - fetch inventory items\n * @property {adapterFunction} undo - undo all transactions up to this point\n * @property {function():Promise<Order>} pickOrder - pick the items and get them ready for shipment\n * @property {adapterFunction} authorizePayment - verify payment info, credit avail\n * @property {import('../adapters/shipping-adapter').shipOrder} shipOrder -\n * calls shipping service to request delivery\n * @property {function(Order):Promise<void>} save - saves order\n * @property {function():Promise<Order>} find - finds order\n * @property {string} shippingAddress\n * @property {string} orderNo = the order number\n * @property {string} trackingId - id given by tracking status for this `orderNo`\n * @property {function():Order} decrypt - decrypts encypted properties\n * @property {function({key1:any,keyN:any}, boolean):Promise<Order>} update - update the order,\n * set the second arg to false to turn off validation.\n * @property {'PENDING'|'APPROVED'|'SHIPPING'|'CANCELED'|'COMPLETED'} orderStatus\n * @property {function(...args):Promise<import(\"../domain/index\").Model>} customer - retrieves related customer object,\n * or if args are provided, creates a new customer object, using the provided args as the input.\n * @property {function(string,Order):Promise} emit - broadcast domain event\n * @property {function():boolean} paymentAccepted - payment approved and funds reserved\n * @property {function():boolean} autoCheckout - whether or not to immediately submit the order\n * @property {boolean} saveShippingDetails save customer shipping and payment details as a customer record\n * @property {{itemId:string,price:number,qty:number}[]} orderItems\n * @property {Symbol} customerId {@link Customer}\n * @property {{event:string,time:number}[]} log\n */\n\nconst orderStatus = 'orderStatus'\nconst orderTotal = 'orderTotal'\nconst orderNo = 'orderNo'\n\nexport const OrderStatus = {\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  SHIPPING: 'SHIPPING',\n  COMPLETE: 'COMPLETE',\n  CANCELED: 'CANCELED'\n}\n\nexport const checkItem = function (orderItem) {\n  return (\n    typeof orderItem.itemId === 'string' && typeof orderItem.price === 'number'\n  )\n}\n/**\n *\n * @param {*} items\n */\nexport const checkItems = function (orderItems) {\n  if (!orderItems) {\n    throw new Error('order contains no items')\n  }\n  const items = Array.isArray(orderItems) ? orderItems : [orderItems]\n\n  if (items.length > 0 && items.every(checkItem)) {\n    return items\n  }\n  throw new Error('order items invalid')\n}\n\n/**\n * Calculate order total\n * @param {*} items\n */\nexport const calcTotal = function (orderItems) {\n  const items = checkItems(orderItems)\n\n  return items.reduce((total, item) => {\n    const qty = item.qty || 1\n    return (total += item.price * qty)\n  }, 0)\n}\n\nexport const calcNumItems = function (orderItems) {\n  return orderItems.reduce((total, item) => (total += item.qty || 1))\n}\n\n/**\n * No changes to `propKey` properties once the order is approved\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnApproval = propKey => o => {\n  return o[prevmodel].orderStatus !== OrderStatus.PENDING ? propKey : null\n}\n\n/**\n * No changes to `propKey` once order is complete or canceled\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnCompletion = propKey => o => {\n  return [OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(\n    o[prevmodel].orderStatus\n  )\n    ? propKey\n    : null\n}\n\n/**\n * If not a registered customer, provide shipping & payment details.\n * @param {*} o\n * @param {*} propKey\n * @returns {string | void} the key or `void`\n */\nexport const requiredForGuest = propKey => o => {\n  return o.customerId ? null : propKey\n}\n\n/**\n * Value required to approve orde1r.\n * @param {*} propKey\n */\nexport const requiredForApproval = propKey => o => {\n  if (!o.orderStatus) return\n  return o.orderStatus === OrderStatus.APPROVED ? propKey : void 0\n}\n\n/**\n * Value required to complete order\n * @param {*} o\n * @param {*} propKey\n * @returns {string | void} the key or `void`\n */\nexport const requiredForCompletion = propKey => o => {\n  if (!o.orderStatus) return\n  return o.orderStatus === OrderStatus.COMPLETE ? propKey : void 0\n}\n\nconst invalidStatusChange = (from, to) => (o, propVal) => {\n  return propVal === to && o[prevmodel].orderStatus === from\n}\n\nconst invalidStatusChanges = [\n  // Can't change back to pending once approved\n  invalidStatusChange(OrderStatus.APPROVED, OrderStatus.PENDING),\n  // Can't change back to pending once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.PENDING),\n  // Can't change back to approved once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.APPROVED),\n  // Can't change directly to shipping from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.SHIPPING),\n  // Can't change directly to complete from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.COMPLETE),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.CANCELED),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.COMPLETE)\n]\n\n/**\n * Check that status changes are valid\n */\nexport const statusChangeValid = (o, propVal) => {\n  if (invalidStatusChanges.some(isc => isc(o, propVal))) {\n    throw new Error('invalid status change')\n  }\n  return true\n}\n\n/**\n *\n * @param {*} o\n * @param {*} propVal\n */\nexport const orderTotalValid = (o, propVal) => {\n  return calcTotal(o.orderItems) === propVal\n}\n\n/**\n * Recalculate order total\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const recalcTotal = (o, propVal) => ({\n  orderTotal: calcTotal(propVal)\n})\n\n/**\n * Updated signature requirement if `orderTotal` above certain value\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const updateSignature = (o, propVal) => ({\n  signatureRequired: calcTotal(propVal) > 999.99 || o.signatureRequired\n})\n\n/**\n * Don't delete orders before they're complete.\n */\nexport function readyToDelete(model) {\n  if (\n    ![OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(model.orderStatus)\n  ) {\n    throw new Error('order must be canceled or completed')\n  }\n  return model\n}\n\n/**\n *\n * @param {*} error\n * @param {*} func\n */\nfunction handleError(error, order, func) {\n  try {\n    if (order) order.emit('orderError', { func, error })\n  } catch (error) {\n    console.error('order.emit', error)\n  }\n  console.error({ func, error })\n  2\n  throw new Error(error)\n}\n\n/**\n * Callback invoked by adapter when payment is complete\n * @param {{model:Order}} options\n */\nexport async function paymentCompleted(options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'confirmationCode',\n    options,\n    payload,\n    paymentCompleted.name\n  )\n  return order.update({ ...changes, orderStatus: OrderStatus.COMPLETE })\n}\n\n/**\n * Callback invoked by shipping adapter when order is picked up.\n * @param {{model:Order}} options\n * @param {string} shipmentId\n */\nexport async function orderShipped(options = {}, payload = {}) {\n  const { model: order } = options\n  const shipmentPayload = checkPayload(\n    'shipmentId',\n    options,\n    payload,\n    orderShipped.name\n  )\n  return order.update({\n    shipmentId: shipmentPayload.shipmentId,\n    orderStatus: OrderStatus.SHIPPING\n  })\n}\n\n/**\n * Callback invoked when order is ready for pickup\n * @param {{ model:Order }} options\n */\nexport async function orderPicked(options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'pickupAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update(changes)\n}\n\n/**\n * Callback invoked when shippingAddress is verified (and possibly corrected)\n * @param {{ model:Order }} options\n * @param {string} shippingAddress\n */\nexport async function addressValidated(options = {}, payload = {}) {\n  const { model: order } = options\n  const addressPayload = checkPayload(\n    'shippingAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update({ shippingAddress: addressPayload.shippingAddress })\n}\n\n/**\n * Called by adapter when port recevies response from payment service.\n * @param {{ model:Order }} options\n * @param {*} paymentAuthorization\n */\nexport async function paymentAuthorized(options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'paymentAuthorization',\n    options,\n    payload,\n    paymentAuthorized.name\n  )\n  return order.update(changes)\n}\n\n/**\n * Called to refund payment when order is canceled.\n * @param {*} options\n * @param {*} payload\n * @returns\n */\nexport async function refundPayment(order) {\n  // call port by same name.\n  order.refundPayment((options, payload) => {\n    const changes = checkPayload(\n      'refundReceipt',\n      options,\n      payload,\n      refundPayment.name\n    )\n    return order.update({ ...changes, orderStatus: OrderStatus.CANCELED })\n  })\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyAddress(order) {\n  return order.validateAddress(addressValidated)\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyPayment(order) {\n  try {\n    // Authorize payment for the current total.\n    /**@type {Order} */\n    const authorizedOrder = await order.authorizePayment(paymentAuthorized)\n\n    if (!authorizedOrder) {\n      throw new Error('payment auth problem')\n    }\n\n    if (!authorizedOrder.paymentAccepted()) {\n      throw new Error('payment authorization declined')\n    }\n\n    return authorizedOrder\n  } catch (e) {\n    handleError(e, order, verifyPayment.name)\n  }\n  return order\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n * @throws {'InsufficientInventory'}\n */\nasync function verifyInventory(order) {\n  const inventory = await order.inventory()\n  console.debug('inventory', inventory)\n\n  // if (inventory?.length !== order.totalItems()) {\n  //   throw new Error('insufficient inventory available', order)\n  // }\n\n  return order\n}\n\n/**\n * Copy existing customer data into the order\n * or create new customer from order details.\n *\n * @param {Order} order\n * @throws {'InvalidCustomerId'}\n */\nasync function getCustomerOrder(order) {\n  // If an id is given, try fetching the model\n  if (order.customerId) {\n    // Use the relation defined in the spec\n    const customer = await order.customer()\n\n    if (!customer) {\n      throw new Error('invalid customer id', order.customerId)\n    }\n\n    // Add customer data to the order\n    const custInfo = { ...customer.decrypt(), firstName: customer.firstName }\n    const update = await order.update(custInfo)\n\n    console.info('update order with data from existing customer', custInfo)\n    return update\n  }\n\n  // Create a new customer from the shipping details\n  if (order.saveShippingDetails) {\n    const custInfo = { ...order.decrypt(), firstName: order.firstName }\n    const customer = await order.customer(custInfo)\n\n    console.info('create new customer with data from order', customer)\n    return order\n  }\n\n  return order\n}\n\n/**\n * Handle a new order:\n * - fetch or save customer info\n * - check item availability\n * - authorize payment\n * - verify shipping address\n */\nconst processPendingOrder = asyncPipe(\n  getCustomerOrder,\n  verifyInventory,\n  verifyPayment,\n  verifyAddress\n)\n\n/**\n * Implements the beginging of the order service workflow.\n * The rest is implemented by the {@link ModelSpecification}.\n * See the port configuration section of {@link Order}.\n */\nconst OrderActions = {\n  /**\n   * Verifies the shipping address and authorizes payment\n   * for the order total when the order is first created,\n   * or when it is updated while still in pending status.\n   *\n   * @param {Order} order - the order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.PENDING]: async order => {\n    try {\n      /**@type {Order} */\n      const processedOrder = await processPendingOrder(order)\n\n      if (processedOrder.autoCheckout()) {\n        return runOrderWorkflow(\n          await processedOrder.update(\n            {\n              orderStatus: OrderStatus.APPROVED\n            },\n            false\n          )\n        )\n      }\n      return processedOrder\n    } catch (e) {\n      console.error(e)\n    }\n    return order\n  },\n\n  /**\n   * If payment is authorized, notify inventory.\n   * This kicks off the rest of the workflow,\n   * which is controlled through port config.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.APPROVED]: async order => {\n    try {\n      if (order.paymentAccepted()) {\n        // Don't `await` the async result, which will block the API caller\n        // if we being executed that way. Return control back to caller now.\n        return order.pickOrder(orderPicked)\n      }\n      await order.emit('PayAuthFail', 'Payment authorization problem')\n    } catch (error) {\n      handleError(error, order, OrderStatus.APPROVED)\n    }\n    return order\n  },\n\n  /**\n   * Useful if we need to restart tracking.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.SHIPPING]: async order => {\n    try {\n      // order.trackShipment(trackingUpdate);\n      console.debug({ func: OrderStatus.SHIPPING, order })\n      await (await order.update({ orderStatus: OrderStatus.SHIPPING })).emit(\n        'orderPicked'\n      )\n    } catch (error) {\n      handleError(error, order, OrderStatus.SHIPPING)\n    }\n    return order\n  },\n\n  /**\n   * Start cancellation process.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.CANCELED]: async order => {\n    try {\n      console.debug({\n        func: OrderStatus.CANCELED,\n        desc: 'order canceled, calling undo',\n        orderNo: order.orderNo\n      })\n      return order.undo()\n    } catch (error) {\n      handleError(error, order, OrderStatus.CANCELED)\n    }\n    return order\n  },\n  /**\n   *\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.COMPLETE]: async order => {\n    // send route to questionnaire, perform analysis, schedule follow-up\n    console.log('customer sentiment analysis, customer care, sales analysis')\n    return order\n  }\n}\n\n/**\n * Call order service workflow - controlled by status\n * @param {Order} order\n * @returns {Promise<Readonly<Order>>}\n */\nexport async function runOrderWorkflow(order) {\n  return OrderActions[order.orderStatus](order)\n}\n\n/**\n * Called on create, update, delete of model instance.\n * @param {{model:Promise<ReadOnly<Order>>}}\n */\nexport async function handleOrderEvent({ model: order, eventType, changes }) {\n  if (changes?.orderStatus || eventType === 'CREATE') {\n    return runOrderWorkflow(order)\n  }\n}\n\n/**\n * Require a signature for orders $1000 and up\n * @param {*} input\n * @param {*} orderTotal\n */\nfunction needsSignature(input, orderTotal) {\n  return typeof input === 'boolean' ? input : orderTotal > 999.99\n}\n\nfunction logEntry(message) {\n  return {\n    event: message,\n    time: Date.now(),\n    toJSON() {\n      return { event: this.event, time: new Date(this.time).toUTCString() }\n    }\n  }\n}\n\n/**\n * Returns factory function for the Order model.\n * @type {import('../domain/index.js').modelSpecFactoryFn} \n * @param {*} dependencies - inject dependencies\n */\nexport function makeOrderFactory(dependencies) {\n  return async function createOrder({\n    orderItems,\n    email = null,\n    lastName = null,\n    firstName = null,\n    customerId = null,\n    billingAddress = null,\n    shippingAddress = null,\n    creditCardNumber = null,\n    shippingPriority = null,\n    autoCheckout = false,\n    saveShippingDetails = false,\n    requireSignature,\n    fibonacci = 10\n  }) {\n    const total = calcTotal(orderItems)\n    const signatureRequired = needsSignature(requireSignature, total)\n    const order = {\n      email,\n      lastName,\n      firstName,\n      customerId,\n      orderItems,\n      creditCardNumber,\n      billingAddress,\n      shippingAddress,\n      signatureRequired,\n      saveShippingDetails,\n      shippingPriority,\n      fibonacci,\n      result: 0,\n      time: 0,\n      estimatedArrival: null,\n      log: [logEntry('order created')],\n      [orderTotal]: total,\n      [orderStatus]: OrderStatus.PENDING,\n      [orderNo]: dependencies.uuid(),\n      /**\n       * Has payment for the order been authorized?\n       */\n      paymentAccepted() {\n        return this.paymentAuthorization ? true : false\n      },\n      /**\n       * Proceed to checkout automatically or wait for approval?\n       */\n      autoCheckout() {\n        return autoCheckout\n      },\n      totalItems() {\n        return calcNumItems(this.orderItems)\n      },\n      total() {\n        return calcTotal(this.orderItems)\n      },\n      addItem(item) {\n        if (checkItem(item)) {\n          this.orderItems.push(item)\n          return true\n        }\n        return false\n      },\n      logMessage(message) {\n        this.log = [...this.log, logEntry(message)]\n      },\n      latestLogEntry() {\n        return this.log[this.log.length - 1]\n      }\n    }\n\n    return Object.freeze(order)\n  }\n}\n\n/**\n * Called as command to approve/submit order.\n * @param {Order} order\n */\nexport async function approve(order) {\n  const approvedOrder = await order.update({\n    orderStatus: OrderStatus.APPROVED\n  })\n  return runOrderWorkflow(approvedOrder)\n}\n\n/**\n * Called as command to cancel order.\n * @param {Order} order\n */\nexport async function cancel(order) {\n  const canceledOrder = await order.update({\n    orderStatus: OrderStatus.CANCELED\n  })\n  return runOrderWorkflow(canceledOrder)\n}\n\n/**\n * Alias of `approve`\n * @param {Order} order\n * @returns\n */\nexport async function submit(order) {\n  return approve(order)\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function errorCallback({ port, model: order, error }) {\n  console.error('error...', port, error)\n  return order.undo()\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function timeoutCallback({ port, ports, adapterFn, model: order }) {\n  console.error('timeout...', port)\n}\n\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnInventory(order) {\n  console.log(returnInventory.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n * Start process for the shipper to pick the items to return.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnShipment(order) {\n  console.log(returnShipment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnDelivery(order) {\n  console.log(returnDelivery.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n */\nexport async function cancelPayment(order) {\n  console.log(cancelPayment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n","'use strict'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  hashPasswords,\n  validateProperties\n} from './mixins'\n\nexport function userFactory ({ uuid }) {\n  return async ({\n    userName,\n    password,\n    customerId,\n    firstName,\n    lastName,\n    phone,\n    email,\n    fibonacci\n  } = {}) =>\n    Object.freeze({\n      userId: uuid(),\n      password,\n      userName,\n      customerId,\n      firstName,\n      lastName,\n      phone,\n      email,\n      fibonacci\n    })\n}\n\nexport const userMixins = [\n  requireProperties('userName', 'password', 'firstName'),\n  freezeProperties('userId', 'userName'),\n  hashPasswords('password'),\n  validateProperties([\n    {\n      propKey: 'email',\n      regex: 'email',\n      unique: { encrypted: true }\n    },\n    {\n      propKey: 'userName',\n      unique: { encrypted: false }\n    }\n  ])\n]\n","'use strict'\n\nimport crypto from 'crypto'\nimport { nanoid } from 'nanoid'\n\nexport function compose (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal)\n  }\n}\n\nexport function composeAsync (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    )\n  }\n}\n\n/**\n * @callback pipeFn\n * @param {object} obj - the object to compose\n * @returns {object} - the composed object\n */\n\n/**\n * @param {pipeFn} func\n */\nexport const asyncPipe = (...func) => obj =>\n  func.reduce((o, f) => o.then(f), Promise.resolve(obj))\n\nconst passwd = process.env.ENCRYPTION_PWD\nconst algo = 'aes-192-cbc'\nconst key = crypto.scryptSync(String(passwd), 'salt', 24)\nconst iv = Buffer.alloc(16, 0)\n\nexport function encrypt (text) {\n  const cipher = crypto.createCipheriv(algo, key, iv)\n  let encrypted = cipher.update(text, 'utf8', 'hex')\n  encrypted += cipher.final('hex')\n  return encrypted\n}\n\nexport function decrypt (cipherText) {\n  console.log('decrypt(%s)', cipherText)\n  const decipher = crypto.createDecipheriv(algo, key, iv)\n  let decrypted = decipher.update(cipherText, 'hex', 'utf8')\n  decrypted += decipher.final('utf8')\n  return decrypted\n}\n\nexport function hash (data) {\n  return crypto\n    .createHash('sha1')\n    .update(data)\n    .digest('hex')\n}\n\nexport function uuid () {\n  // return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n  //   (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  // );\n  return nanoid()\n}\n\nexport function makeArray (v) {\n  return Array.isArray(v) ? v : [v]\n}\n\nexport function makeObject (prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }))\n  }\n  return prop\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async (promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result)\n    }))\n    .catch(error => {\n      console.error(error)\n      return Promise.resolve({ ok: false, error })\n    })\n}\n","\"use strict\";\n\nimport { Event } from \"./services/event-service\";\n\nexport class EventDispatcher {\n  constructor(adapter = Event) {\n    this.adapter = adapter;\n    this.subscriptions = new Map();\n  }\n\n  registerCallback(topic, callback) {\n    if (this.subscriptions.has(topic)) {\n      this.subscriptions.get(topic).push(callback);\n      return;\n    }\n    this.subscriptions.set(topic, [callback]);\n  }\n\n  async emitEvent(topic, message, method = \"notify\") {\n    await this.adapter[method](topic, message);\n  }\n\n  async init(method = \"listen\") {\n    function emitEvent(topic, message) {\n      this.emitEvent(topic, message);\n    }\n\n    // this.emitEvent(/Channel/, \"remoteRestart\");\n    await this.adapter[method](\n      /Channel/,\n      function ({ topic, message }) {\n        if (this.subscriptions.has(topic)) {\n          this.subscriptions\n            .get(topic)\n            .forEach(callback =>\n              callback({ message, emitEvent: emitEvent.bind(this) })\n            );\n        }\n      }.bind(this)\n    );\n  }\n}\n","\"use strict\";\n\nimport { EventDispatcher } from \"./event-dispatcher\";\nimport { uuid } from \"./domain/utils\";\n\nexport const Registry = {\n  eventNames: {\n    shipOrder: \"orderShipped\",\n    trackShipment: \"outForDelivery\",\n    verifyDelivery: \"deliveryVerified\",\n  },\n\n  sendEvent({ emitEvent, topic, eventData, eventSource, eventName }) {\n    console.log(\"Sending event...\");\n    console.log({ emitEvent, topic, eventData, eventSource, eventName });\n    setTimeout(async () => {\n      await emitEvent(\n        topic,\n        JSON.stringify({\n          eventData,\n          eventName,\n          eventTime: new Date().toUTCString(),\n          eventType: \"commandResponse\",\n          eventSource: eventSource,\n        })\n      );\n    }, 5000);\n  },\n\n  generateShippingEventData(event, externalId) {\n    const trackingId = uuid();\n    const shipmentId = trackingId;\n    const proofOfDelivery = `http://shipping.service.com?proof=${trackingId}`;\n    const eventData = { externalId };\n    if (event.eventName === \"shipOrder\") {\n      return { ...eventData, shipmentId };\n    }\n    if (event.eventName === \"trackShipment\") {\n      return { ...eventData, trackingId, trackingStatus: \"outForDelivery\" };\n    }\n    if (event.eventName === \"verifyDelivery\") {\n      return { ...eventData, proofOfDelivery };\n    }\n  },\n\n  generateShippingMessage(emitEvent, event, externalId) {\n    return {\n      emitEvent,\n      topic: event.eventData.commandResp,\n      eventData: this.generateShippingEventData(event, externalId),\n      eventName: this.eventNames[event.eventName],\n      eventSource: \"shippingService\",\n    };\n  },\n\n  inventoryCallbackFactory() {\n    function inventoryCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const warehouseAddress = /*null;*/ \"1234 warehouse dr, dock 2\";\n      const externalId = event.eventData.commandArgs.externalId;\n      const eventName = /*'outOfStock';*/ \"orderPicked\";\n      this.sendEvent({\n        emitEvent,\n        topic: event.eventData.replyChannel,\n        eventName,\n        eventData: { warehouse_addr: warehouseAddress, externalId },\n        eventSource: \"inventoryService\",\n      });\n    }\n    return inventoryCallback.bind(this);\n  },\n\n  shippingCallbackFactory() {\n    function shippingCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const externalId = event.eventData.commandArgs.externalId;\n      const _message = this.generateShippingMessage(\n        emitEvent,\n        event,\n        externalId\n      );\n      this.sendEvent(_message);\n\n      if (event.eventName === \"trackShipment\") {\n        const eventData = {\n          ..._message.eventData,\n          trackingStatus: \"orderDelivered\",\n        };\n        setTimeout(\n          () =>\n            this.sendEvent({\n              ..._message,\n              eventData,\n              eventName: \"orderDelivered\",\n            }),\n          7000\n        );\n      }\n    }\n    return shippingCallback.bind(this);\n  },\n};\n\nconst dispatcher = new EventDispatcher();\n\ndispatcher.registerCallback(\n  \"inventoryChannel\",\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  \"shippingChannel\",\n  Registry.shippingCallbackFactory()\n);\n\nexport default dispatcher;\n","\"use strict\";\n\nexport const Address = {\n  /**\n   *\n   * @param {string} address US street address\n   */\n  async validateAddress(address) {\n    console.log(\"test validating address...\");\n\n    if (!address) {\n      throw new Error(\"no address provided\");\n    }\n\n    return address;\n  },\n\n};\n","\"use strict\";\n\nimport { EventDispatcher } from \"../../src/event-dispatcher\";\nimport { Registry } from \"../../src/service-registry\";\n\nconst shippingChannel = \"shippingChannel\";\nconst inventoryChannel = \"inventoryChannel\";\n\nconst callbacks = [];\nconst responses = [];\nconst topics = {\n  [shippingChannel]: /shipping/,\n  [inventoryChannel]: /inventory/,\n};\n\nexport function handleEvents(req, res) {\n  const message = JSON.stringify(req.body);\n  const topicName = Object.keys(topics).find(k => topics[k].test(message));\n  if (topicName) {\n    console.log({\n      func: handleEvents.name,\n      msg: \"found topic\",\n      topicName,\n      message,\n      cb: callbacks,\n    });\n\n    callbacks.forEach(callback => {\n      console.log({ name: callback.name, code: callback.toString() });\n      callback({ topicName, message });\n    });\n    console.log(responses);\n    responses.reduceRight(response => res.send(response), \"response\");\n  }\n}\n\nconst Event = {\n  topics: /Channel/,\n  listening: false,\n\n  listen(topic, callback) {\n    callbacks.push(callback);\n  },\n\n  notify(topic, message) {\n    responses.push(message);\n  },\n};\n\nconst dispatcher = new EventDispatcher(Event);\n\ndispatcher.registerCallback(\n  inventoryChannel,\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  shippingChannel,\n  Registry.shippingCallbackFactory()\n);\n\ndispatcher.init();\n","export * from \"./address-service\";\nexport * from \"./payment-service\";\nexport * from \"./shipping-service\";\nexport * from \"./event-service\";\nexport * from \"./inventory-service\";\n","\"use strict\";\n\nimport { Event } from \"../../src/services/event-service\";\n\nfunction sendEvent({ eventData, eventName }) {\n  setTimeout(async () => {\n    await Event.notify(\n      \"orderChannel\",\n      JSON.stringify({\n        eventData,\n        eventName,\n        eventType: \"CommandResponse\",\n        eventTime: new Date().toUTCString(),\n        eventSource: \"Inventory\",\n      })\n    );\n  }, 5000);\n}\n\nexport const Inventory = {\n  async pickOrder({ externalId, lineItems }) {\n    console.log(\"inventory items\");\n    console.log(lineItems);\n    const pickupAddress = \"1234 warehouse dr, dock2\";\n    sendEvent({\n      eventName: \"orderPicked\",\n      eventData: { pickupAddress, externalId },\n    });\n  },\n};\n","\"use strict\";\n\n/**\n * @callback authorizePaymentType\n * @param {string} id\n * @param {number} amount\n * @param {string} source_id\n * @param {string} customer_id\n * @param {boolean} [autocomplete]\n * @returns {Promise<string>}\n */\n\n/**\n * @typedef PaymentService\n * @property {authorizePaymentType} authorizePayment\n * @property {function()} completePayment\n * @property {function()} refundPayment\n */\n\n// import { Client, Environment, ApiError } from \"square\";\n\n// const client = new Client({\n//   environment: Environment.Sandbox,\n//   accessToken: process.env.SQUARE_ACCESS_TOKEN,\n// });\n\nexport const Payment = {\n  /**\n   * @type {authorizePaymentType}\n   * @param {*} id\n   * @param {*} amount\n   * @param {*} source_id\n   * @param {*} customer_id\n   * @param {*} autocomplete\n   * @param {*} currency\n   */\n  async authorizePayment(\n    id,\n    amount,\n    source_id,\n    customer_id,\n    autocomplete = false,\n    currency = \"USD\"\n  ) {\n    console.log(\"mock payment service called\");\n    const payload = {\n      idempotency_key: id,\n      amount_money: {\n        amount,\n        currency,\n      },\n      source_id,\n      autocomplete,\n      customer_id,\n      location_id: \"XK3DBG77NJBFX\",\n      reference_id: \"123456\",\n      note: \"Brief description\",\n      app_fee_money: {\n        amount: 10,\n        currency: \"USD\",\n      },\n    };\n    /*\n    const bodyAmountMoney = {};\n    bodyAmountMoney.amount = 200;\n    bodyAmountMoney.currency = \"USD\";\n\n    const bodyTipMoney = {};\n    bodyTipMoney.amount = 198;\n    bodyTipMoney.currency = \"CHF\";\n\n    const bodyAppFeeMoney = {};\n    bodyAppFeeMoney.amount = 10;\n    bodyAppFeeMoney.currency = \"USD\";\n\n    const body = {\n      sourceId: \"ccof:uIbfJXhXETSP197M3GB\",\n      idempotencyKey: \"4935a656-a929-4792-b97c-8848be85c27c\",\n      amountMoney: bodyAmountMoney,\n    };\n\n    body.tipMoney = bodyTipMoney;\n    body.appFeeMoney = bodyAppFeeMoney;\n    body.delayDuration = \"delay_duration6\";\n    body.autocomplete = true;\n    body.orderId = \"order_id0\";\n    body.customerId = \"VDKXEEKPJN48QDG3BGGFAK05P8\";\n    body.locationId = \"XK3DBG77NJBFX\";\n    body.referenceId = \"123456\";\n    body.note = \"Brief description\";\n\n    // try {\n    //   const {\n    //     result,\n    //     ...httpResponse\n    //   } = await client.paymentsApi.createPayment(body);\n    //   // Get more response info...\n    //   // const { statusCode, headers } = httpResponse;\n    // } catch (error) {\n    //   if (error instanceof ApiError) {\n    //     const errors = error.result;\n    //     // const { statusCode, headers } = error;\n    //   }\n    // }\n    */\n    return \"1234\";\n  },\n\n  /*\n  const response ={\n  \"payment\": {\n    \"id\": \"GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\",\n    \"created_at\": \"2019-07-10T13:23:49.154Z\",\n    \"updated_at\": \"2019-07-10T13:23:49.446Z\",\n    \"amount_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"app_fee_money\": {\n      \"amount\": 10,\n      \"currency\": \"USD\"\n    },\n    \"total_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"status\": \"COMPLETED\",\n    \"source_type\": \"CARD\",\n    \"card_details\": {\n      \"status\": \"CAPTURED\",\n      \"card\": {\n        \"card_brand\": \"VISA\",\n        \"last_4\": \"1111\",\n        \"exp_month\": 7,\n        \"exp_year\": 2026,\n        \"fingerprint\": \"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw\",\n        \"card_type\": \"DEBIT\",\n        \"prepaid_type\": \"PREPAID\",\n        \"bin\": \"411111\"\n      },\n      \"entry_method\": \"ON_FILE\",\n      \"cvv_status\": \"CVV_ACCEPTED\",\n      \"avs_status\": \"AVS_ACCEPTED\",\n      \"auth_result_code\": \"nsAyY2\",\n      \"statement_description\": \"SQ *MY MERCHANT\"\n    },\n    \"location_id\": \"XTI0H92143A39\",\n    \"order_id\": \"m2Hr8Hk8A3CTyQQ1k4ynExg92tO3\",\n    \"reference_id\": \"123456\",\n    \"note\": \"Brief description\",\n    \"customer_id\": \"RDX9Z4XTIZR7MRZJUXNY9HUK6I\",\n    \"receipt_number\": \"GQTF\",\n    \"receipt_url\": \"https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\"\n  }\n}\n  /*\n{\n  \"errors\": [\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"source_id\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"idempotency_key\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"MISSING_REQUIRED_PARAMETER\",\n      \"detail\": \"Field must be set\",\n      \"field\": \"amount_money\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    }\n  ]\n}\n  */\n\n  async completePayment(model) {\n    console.log(\"REAL completing payment: %s\", model.orderNo);\n    return \"1234\";\n  },\n\n  async refundPayment(model) {\n    console.log(\"REAL refunding payment: %s\", model.orderNo);\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('../adapters/event-adapter').EventMessage} EventMessage\n */\n\n/**\n * @typedef {import('../adapters/event-adapter').CommandEvent} CommandEvent\n */\n\n/**\n * @callback shipOrder\n * @param {string} shipTo\n * @param {string} shipFrom\n * @param {string} lineItems\n * @param {string} signature\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @callback trackShipment\n * @param {string} shipmentId\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @typedef {string} functionName\n */\n\n/**\n * @typedef {Object} shippingService formats and parses shipping event messages\n * @property {string} serviceName - programmatic service name in eventSource/Target\n * @property {string} topic - event topic \"shippingChannel\" when sending messasges\n * @property {shipOrder} shipOrder - format event message requesting shipping label and pickup of order\n * @property {trackShipment} trackShipment - report on location/status of parcel\n * @property {function():EventMessage} verifyDelivery - ensure customer recieved parcel\n * @property {function():EventMessage} returnShipment - return to sender if refunding\n * @property {function(functionName,EventMessage):{[key]:string}} getPayload - extract payload\n */\n\nfunction createEventMessage({ requester, service, type, name, id, data }) {\n  return {\n    eventSource: requester,\n    eventTarget: service,\n    eventType: type,\n    eventName: name,\n    eventTime: new Date().getTime(),\n    eventUuid: id,\n    eventData: data,\n  };\n}\n\nfunction createCommandEvent(name, topic, args) {\n  return {\n    commandName: name,\n    commandResp: topic,\n    commandArgs: { ...args },\n  };\n}\n\n/**\n * Shipping service events\n * @type {shippingService}\n */\nexport const Shipping = {\n  serviceName: \"shippingService\",\n  topic: \"shippingChannel\",\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {shipMessage}\n   */\n  shipOrder({\n    shipTo,\n    shipFrom,\n    lineItems,\n    signature,\n    externalId,\n    requester,\n    respondOn,\n  }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.shipOrder.name,\n      id: externalId,\n      data: createCommandEvent(this.shipOrder.name, respondOn, {\n        shipTo,\n        shipFrom,\n        lineItems,\n        signature,\n        externalId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  trackShipment({ externalId, shipmentId, trackingId, requester, respondOn }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.trackShipment.name,\n      id: externalId,\n      data: createCommandEvent(this.trackShipment.name, respondOn, {\n        externalId,\n        shipmentId,\n        trackingId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  verifyDelivery({ requester, respondOn, trackingId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.verifyDelivery.name,\n      id: externalId,\n      data: createCommandEvent(this.verifyDelivery.name, respondOn, {\n        externalId,\n        trackingId,\n      }),\n    });\n  },\n\n  returnShipment({ requester, respondOn, shipmentId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      id: externalId,\n      name: this.returnShipment.name,\n      data: createCommandEvent(this.returnShipment, respondOn, {\n        shipmentId,\n        externalId,\n      }),\n    });\n  },\n\n  getPayload(func, event) {\n    const payloads = {\n      [this.shipOrder.name]: {\n        shipmentId: event.eventData.shipmentId,\n      },\n      [this.trackShipment.name]: {\n        trackingId: event.eventData.trackingId,\n        trackingStatus: event.eventData.trackingStatus,\n      },\n      [this.verifyDelivery.name]: {\n        proofOfDelivery: event.eventData.proofOfDelivery,\n      },\n    };\n    return payloads[func];\n  },\n\n  getProperty(event, key) {\n    return event.eventData[key];\n  },\n};\n"],"sourceRoot":""}