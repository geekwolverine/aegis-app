{"version":3,"sources":["webpack://aegis-app/./src/adapters/datasources/datasource-mongodb.js","webpack://aegis-app/./src/config/customer.js","webpack://aegis-app/./src/config/index.js","webpack://aegis-app/./src/config/inventory.js","webpack://aegis-app/./src/config/order.js","webpack://aegis-app/./src/config/webswitch.js","webpack://aegis-app/./src/domain/bind-adapters.js","webpack://aegis-app/./src/domain/check-payload.js","webpack://aegis-app/./src/domain/customer.js","webpack://aegis-app/./src/domain/index.js","webpack://aegis-app/./src/domain/inventory.js","webpack://aegis-app/./src/domain/mixins.js","webpack://aegis-app/./src/domain/order.js","webpack://aegis-app/./src/domain/webswitch.js"],"names":["getSecret","process","env","MONGODB_CREDS","user","pass","token","archive","id","console","debug","DataSourceAdapterMongoDb","url","cacheSize","DataSourceMongoDb","DataSourceMongoDbArchive","datasource","factory","name","creds","Customer","modelName","endpoint","dependencies","uuid","nanoid","makeCustomerFactory","validate","validateModel","onDelete","okToDelete","mixins","freezeProperties","requireProperties","validateProperties","propKey","regex","relations","orders","type","foreignKey","commands","decrypt","command","acl","accessControlList","customer","allow","desc","Inventory","makeInventoryFactory","maxnum","values","categories","assetTypes","isValid","_obj","prop","every","p","properties","Order","makeOrderFactory","domain","baseClass","requiredForGuest","requiredForApproval","requiredForCompletion","freezeOnApproval","freezeOnCompletion","updateProperties","update","recalcTotal","updateSignature","Object","OrderStatus","statusChangeValid","orderTotalValid","readyToDelete","eventHandlers","handleOrderEvent","ports","listen","service","timeout","notify","validateAddress","keys","producesEvent","disabled","authorizePayment","consumesEvent","undo","cancelPayment","pickOrder","callback","orderPicked","returnInventory","circuitBreaker","portTimeout_pickOrder_order","callVolume","errorRate","intervalMs","shipOrder","orderShipped","returnShipment","portTimeout_shipOrder_order","portRetryFailed_order","fallbackFn","cancel","trackShipment","verifyDelivery","returnDelivery","completePayment","paymentCompleted","refundPayment","cancelShipment","cancelOrders","methods","approveOrders","trackAsyncContext","customHttpStatus","testContainsMany","runFibonacciJs","inventory","arrayKey","chat","routes","path","get","req","res","listModels","writable","serialize","query","post","log","addModel","body","result","status","json","message","ctx","context","OrderError","patch","editModel","params","changes","approve","runFibonacci","model","start","Date","now","fibonacci","x","param","parseFloat","Number","isNaN","time","serializers","on","key","value","enabled","WebSwitch","makeClient","internal","serviceLocatorInit","serviceLocatorAsk","serviceLocatorAnswer","websocketConnect","websocketPing","websocketSend","websocketClose","websocketStatus","websocketTerminate","websocketOnClose","websocketOnOpen","websocketOnMessage","websocketOnError","websocketOnPong","makeAdapters","adapters","services","map","port","e","warn","reduce","c","checkPayload","options","payload","Error","error","Array","isArray","k","find","then","latest","createCustomer","firstName","lastName","shippingAddress","creditCardNumber","billingAddress","phone","email","userId","freeze","customerId","length","func","validateSpec","spec","missing","filter","entries","makeModel","concat","GlobalMixins","bindAdapters","models","modelSpecs","category","price","discount","sku","purchaseOrder","vendor","inStock","assetType","quantity","prevmodel","Symbol","validations","mixinType","pre","mixinSets","premixins","postmixins","processUpdate","JSON","parse","stringify","updates","compose","updated","updateMixins","o","cb","mixinSet","Map","has","set","eventMask","create","onload","handleUpdateEvent","event","isUpdate","decrypted","isObject","containsUpdates","changeList","util","fn","input","v","sort","a","b","order","apply","output","enableEvent","onUpdate","onCreate","onLoad","enableValidation","onCreateAndUpdate","onLoadAndCreate","onLoadAndUpdate","onAll","addValidation","config","some","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","preventUpdates","mutations","includes","requireProps","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","unknownProps","rejectUnknownProperties","RegEx","ipv4Address","ipv6Address","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","Validator","tests","maxlen","invalid","updaters","updateProps","u","invokePort","args","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","encryptPersonalInfo","orderStatus","orderTotal","orderNo","PENDING","APPROVED","SHIPPING","COMPLETE","CANCELED","checkItem","orderItem","itemId","checkItems","orderItems","items","calcTotal","total","item","qty","itemCount","finalStatus","invalidStatusChange","from","to","invalidStatusChanges","i","signatureRequired","handleError","errMsg","emit","shipmentPayload","shipmentId","addressValidated","addressPayload","paymentAuthorized","paymentStatus","verifyAddress","verifyPayment","authorizeOrder","paymentDeclined","verifyInventory","insufficient","inv","getCustomerOrder","custInfo","info","saveShippingDetails","processPendingOrder","asyncPipe","OrderActions","autoCheckout","runOrderWorkflow","updateSync","trackingUpdate","eventType","needsSignature","logMessage","msg","substring","toJSON","toISOString","createOrder","shippingPriority","requireSignature","estimatedArrival","push","logEvent","index","indx","parseInt","NaN","lastIndexOf","l","approvedOrder","logStateChange","canceledOrder","checkout","errorCallback","timeoutCallback","adapterFn","logUndo","accountOrder","code","data","cancelOrdersTransform","Transform","objectMode","transform","chunk","_encoding","done","_id","list","createWriteStream","approveOrdersTransform","getContext","dur","startTime","Promise","resolve","setTimeout","metric","requestId","duration","HOSTNAME","SERVICENAME","HBEATTIMEOUT","WSOCKETERROR","isPrimary","SWITCH","isBackup","BACKUP","DEBUG","heartbeatMs","sslEnabled","SSL_ENABLED","clearPort","PORT","cipherPort","SSL_PORT","activePort","activeProto","activeHost","DOMAIN","os","proto","SWITCH_PROTO","SWITCH_PORT","host","SWITCH_HOST","override","SWITCH_OVERRIDE","apiProto","apiUrl","serviceUrl","ServiceMeshClient","mesh","pong","heartbeatTimer","headers","pid","eventName","hostname","role","telemetry","memoryUsage","cpuUsage","performance","nodeTiming","listServices","socketState","primary","backup","binary","resolveUrl","agent","protocol","useBinary","send","heartbeat","sendQueuedMsgs","missingEventName","listeners","forEach","listener","connect","reason","toString","clearTimeout","once","sent","enqueue","queueDepth","dequeue","save","removeAllListeners","EventEmitter","client","sendQueue","sendQueueMax","shift","getClient","publish","subscribe","handler","close"],"mappings":";;;;;;;;;;;;;;;;;;;AAAY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ,SAASA,SAAS,GAAI;EACpB,OAAOC,OAAO,CAACC,GAAG,CAACC,aAAa,IAAI;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC;AAC7E;AAEA,SAASC,OAAO,CAAEC,EAAE,EAAE;EACpBC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,EAAE,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMG,wBAAwB,GAAG,SAA3BA,wBAAwB,CACnCC,GAAG,EACHC,SAAS,EACTC,iBAAiB,EACjB;EACA;AACF;AACA;AACA;AACA;EAJE,IAKMC,wBAAwB;IAAA;IAAA;IAC5B,kCAAaC,UAAU,EAAEC,OAAO,EAAEC,IAAI,EAAE;MAAA;MAAA;MACtC,0BAAMF,UAAU,EAAEC,OAAO,EAAEC,IAAI;MAC/B,MAAKN,GAAG,GAAGA,GAAG;MACd,MAAKC,SAAS,GAAGA,SAAS;MAC1B,MAAKM,KAAK,GAAGnB,SAAS,EAAE;MAAA;IAC1B;;IAEA;AACJ;AACA;IAFI;MAAA;MAAA,OAGA,iBAAQQ,EAAE,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEF,EAAE,CAAC;QAC5BD,OAAO,CAACC,EAAE,CAAC;MACb;IAAC;IAAA;EAAA,EAdoCM,iBAAiB;EAiBxD,OAAOC,wBAAwB;AACjC,CAAC,C;;;;;;;;;;;;;;;;;;;;;;;;AC7CW;;AAOa;AAC2C;AACiB;AACtD;;AAE/B;AACA;AACA;AACO,IAAMK,QAAQ,GAAG;EACtBC,SAAS,EAAE,UAAU;EACrBC,QAAQ,EAAE,WAAW;EACrBC,YAAY,EAAE;IAAEC,IAAI,EAAE;MAAA,OAAMC,8CAAM,CAAC,CAAC,CAAC;IAAA;EAAC,CAAC;EACvCR,OAAO,EAAES,iEAAmB;EAC5BC,QAAQ,EAAEC,yDAAa;EACvBC,QAAQ,EAAEC,wDAAU;EACpBC,MAAM,EAAE,CACNC,gEAAgB,CAAC,YAAY,CAAC,EAC9BC,iEAAiB,CACf,WAAW,EACX,UAAU,EACV,OAAO,EACP,iBAAiB,EACjB,gBAAgB,EAChB,kBAAkB,CACnB,EACDC,kEAAkB,CAAC,CACjB;IACEC,OAAO,EAAE,OAAO;IAChB;IACAC,KAAK,EAAE;EACT,CAAC,EACD;IACED,OAAO,EAAE,kBAAkB;IAC3BC,KAAK,EAAE;EACT,CAAC,CACF,CAAC,CACH;EACDC,SAAS,EAAE;IACTC,MAAM,EAAE;MACNjB,SAAS,EAAE,OAAO;MAClBkB,IAAI,EAAE,WAAW;MACjBC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAE;MACPC,OAAO,EAAE,SAAS;MAClBC,GAAG,EAAE,CAAC,MAAM,EAAE,SAAS;IACzB;EACF,CAAC;EACDC,iBAAiB,EAAE;IACjBC,QAAQ,EAAE;MACRC,KAAK,EAAE,MAAM;MACbR,IAAI,EAAE,UAAU;MAChBS,IAAI,EAAE;IACR;EACF;AACF,CAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChE0B,CAAC;AACL;AACI;AACD;;AAE1B;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;;;;;;;;;;ACTY;;AAEyE;AAMzD;AAMH;;AAEzB;AACA;AACA;AACO,IAAMC,SAAS,GAAG;EACvB5B,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE,WAAW;EACrBC,YAAY,EAAE,CAAC,CAAC;EAChBN,OAAO,EAAEiC,mEAAoB;EAC7B;EACA;EACA;EACA;EACA;EACA;EACAnB,MAAM,EAAE,CACNE,iEAAiB,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,eAAe,CAAC,EAC1EC,kEAAkB,CAAC,CACjB;IACEC,OAAO,EAAE,SAAS;IAClB,UAAQ,QAAQ;IAChBgB,MAAM,EAAE;EACV,CAAC,EACD;IACEhB,OAAO,EAAE,UAAU;IACnBiB,MAAM,EAAEC,yDAAUA;EACpB,CAAC,EACD;IACElB,OAAO,EAAE,WAAW;IACpBiB,MAAM,EAAEE,yDAAUA;EACpB,CAAC,EACD;IACEnB,OAAO,EAAE,YAAY;IACrBoB,OAAO,EAAE,iBAACC,IAAI,EAAEC,IAAI;MAAA,OAAKA,IAAI,CAACC,KAAK,CAAC,UAAAC,CAAC;QAAA,OAAIC,kEAAmB,CAACD,CAAC,CAAC;MAAA,EAAC;IAAA;EAClE,CAAC,EACD;IACExB,OAAO,EAAE,OAAO;IAChB,UAAQ,QAAQ;IAChBgB,MAAM,EAAE;EACV,CAAC,CACF,CAAC,EACFnB,gEAAgB,CAAC,GAAG,CAAC,CACtB;EACDK,SAAS,EAAE;IACTC,MAAM,EAAE;MACNjB,SAAS,EAAE,OAAO;MAClBkB,IAAI,EAAE,WAAW;MACjBC,UAAU,EAAE,QAAQ;MACpBQ,IAAI,EAAE;IACR;EACF;AACF,CAAC,C;;;;;;;;;;;;;;;;;;;;;;;;AClEW;;AAAA;AAAA,+CACZ;AAAA;AAAA;AA2BwB;AASC;AACM;AACsD;;AAErF;AACA;AACA;AACO,IAAMa,KAAK,GAAG;EACnBxC,SAAS,EAAE,OAAO;EAClBC,QAAQ,EAAE,QAAQ;EAClBL,OAAO,EAAE6C,2DAAgB;EACzBC,MAAM,EAAE,OAAO;EACf/C,UAAU,EAAE;IACVC,OAAO,EAAEN,8FAAwB;IACjCC,GAAG,EAAE,2BAA2B;IAChCC,SAAS,EAAE,IAAI;IACfmD,SAAS,EAAE;EACb,CAAC;EACDzC,YAAY,EAAE;IAAEC,IAAI,EAAE;MAAA,OAAMC,8CAAM,CAAC,CAAC,CAAC;IAAA;EAAC,CAAC;EACvCM,MAAM,EAAE,CACNE,iEAAiB,CACf,YAAY,EACZgC,+DAAgB,CAAC,CACf,UAAU,EACV,WAAW,EACX,gBAAgB,EAChB,iBAAiB,EACjB,kBAAkB,EAClB,OAAO,CACR,CAAC,EACFC,kEAAmB,CAAC,eAAe,CAAC,EACpCC,oEAAqB,CAAC,iBAAiB,CAAC,CACzC,EACDnC,gEAAgB,CACd,SAAS,EACT,YAAY,EACZoC,+DAAgB,CAAC,CACf,OAAO,EACP,UAAU,EACV,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,gBAAgB,EAChB,iBAAiB,EACjB,kBAAkB,EAClB,eAAe,CAChB,CAAC,EACFC,iEAAkB,CAAC,GAAG,CAAC,CACxB,EACDC,gEAAgB,CAAC,CACf;IACEnC,OAAO,EAAE,YAAY;IACrBoC,MAAM,EAAEC,sDAAWA;EACrB,CAAC,EACD;IACErC,OAAO,EAAE,YAAY;IACrBoC,MAAM,EAAEE,0DAAeA;EACzB,CAAC,CACF,CAAC,EACFvC,kEAAkB,CAAC,CACjB;IACEC,OAAO,EAAE,aAAa;IACtBiB,MAAM,EAAEsB,MAAM,CAACtB,MAAM,CAACuB,sDAAW,CAAC;IAClCpB,OAAO,EAAEqB,4DAAiBA;EAC5B,CAAC,EACD;IACEzC,OAAO,EAAE,YAAY;IACrBgB,MAAM,EAAE,QAAQ;IAChBI,OAAO,EAAEsB,0DAAeA;EAC1B,CAAC,EACD;IACE1C,OAAO,EAAE,OAAO;IAChBC,KAAK,EAAE;EACT,CAAC,EACD;IACED,OAAO,EAAE,kBAAkB;IAC3BC,KAAK,EAAE;EACT,CAAC,EACD;IACED,OAAO,EAAE,OAAO;IAChBC,KAAK,EAAE;EACT,CAAC,CACF;EACD;EAAA,CACD;;EACDT,QAAQ,EAAEC,yDAAa;EACvBC,QAAQ,EAAEiD,wDAAa;EACvBC,aAAa,EAAE,CAACC,2DAAgB,CAAC;EACjCC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,OAAO,EAAE,OAAO;MAChB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACDC,MAAM,EAAE;MACNF,OAAO,EAAE,OAAO;MAChB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACDE,eAAe,EAAE;MACfH,OAAO,EAAE,SAAS;MAClB5C,IAAI,EAAE,UAAU;MAChBgD,IAAI,EAAE,iBAAiB;MACvBC,aAAa,EAAE,kBAAkB;MACjCC,QAAQ,EAAE;IACZ,CAAC;IACDC,gBAAgB,EAAE;MAChBP,OAAO,EAAE,SAAS;MAClB5C,IAAI,EAAE,UAAU;MAChBgD,IAAI,EAAE,eAAe;MACrBI,aAAa,EAAE,eAAe;MAC9BH,aAAa,EAAE,mBAAmB;MAClCI,IAAI,EAAEC,wDAAa;MACnBJ,QAAQ,EAAE;IACZ,CAAC;IACDK,SAAS,EAAE;MACTX,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChBgD,IAAI,EAAE,eAAe;MACrBQ,QAAQ,EAAEC,sDAAW;MACrBL,aAAa,EAAE,gBAAgB;MAC/BH,aAAa,EAAE,aAAa;MAC5BI,IAAI,EAAEK,0DAAe;MACrBC,cAAc,EAAE;QACdC,2BAA2B,EAAE;UAC3BC,UAAU,EAAE,CAAC;UACbC,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE;QACd;MACF;IACF,CAAC;IACDC,SAAS,EAAE;MACTpB,OAAO,EAAE,UAAU;MACnB5C,IAAI,EAAE,UAAU;MAChBwD,QAAQ,EAAES,uDAAY;MACtBb,aAAa,EAAE,aAAa;MAC5BH,aAAa,EAAE,cAAc;MAC7BI,IAAI,EAAEa,yDAAc;MACpBP,cAAc,EAAE;QACdQ,2BAA2B,EAAE;UAC3BN,UAAU,EAAE,CAAC;UACbC,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE;QACd,CAAC;QACDK,qBAAqB,EAAE;UACrBP,UAAU,EAAE,CAAC;UACbC,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE,KAAK;UACjBM,UAAU,EAAEC,iDAAMA;QACpB,CAAC;QACD,WAAS;UACPT,UAAU,EAAE,CAAC;UACbC,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE;QACd;MACF;IACF,CAAC;IACDQ,aAAa,EAAE;MACb3B,OAAO,EAAE,UAAU;MACnB5C,IAAI,EAAE,UAAU;MAChBgD,IAAI,EAAE,CAAC,gBAAgB,EAAE,YAAY,CAAC;MACtCI,aAAa,EAAE,cAAc;MAC7BH,aAAa,EAAE,gBAAgB;MAC/BU,cAAc,EAAE;QACdS,qBAAqB,EAAE;UACrBP,UAAU,EAAE,CAAC;UACbC,SAAS,EAAE,CAAC;UACZC,UAAU,EAAE;QACd;MACF;IACF,CAAC;IACDS,cAAc,EAAE;MACd5B,OAAO,EAAE,UAAU;MACnB5C,IAAI,EAAE,UAAU;MAChBgD,IAAI,EAAE,iBAAiB;MACvBI,aAAa,EAAE,gBAAgB;MAC/BH,aAAa,EAAE,kBAAkB;MACjCI,IAAI,EAAEoB,yDAAcA;IACtB,CAAC;IACDC,eAAe,EAAE;MACf9B,OAAO,EAAE,SAAS;MAClB5C,IAAI,EAAE,UAAU;MAChBwD,QAAQ,EAAEmB,2DAAgB;MAC1BvB,aAAa,EAAE,kBAAkB;MACjCH,aAAa,EAAE,eAAe;MAC9BI,IAAI,EAAEuB,wDAAaA;IACrB,CAAC;IACDC,cAAc,EAAE;MACdjC,OAAO,EAAE,UAAU;MACnB5C,IAAI,EAAE;IACR,CAAC;IACD4E,aAAa,EAAE;MACbhC,OAAO,EAAE,SAAS;MAClB5C,IAAI,EAAE;IACR,CAAC;IACD8E,YAAY,EAAE;MACZlC,OAAO,EAAE,OAAO;MAChB5C,IAAI,EAAE,SAAS;MACf6C,OAAO,EAAE,CAAC;MACVkC,OAAO,EAAE,CAAC,MAAM;IAClB,CAAC;IACDC,aAAa,EAAE;MACbpC,OAAO,EAAE,OAAO;MAChB5C,IAAI,EAAE,SAAS;MACf6C,OAAO,EAAE,CAAC;MACVkC,OAAO,EAAE,CAAC,OAAO;IACnB,CAAC;IACDE,iBAAiB,EAAE;MACjBrC,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,SAAS;MACf6C,OAAO,EAAE;IACX,CAAC;IACDqC,gBAAgB,EAAE;MAChBtC,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,SAAS;MACf6C,OAAO,EAAE;IACX,CAAC;IACDsC,gBAAgB,EAAE;MAChBvC,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,SAAS;MACf6C,OAAO,EAAE;IACX,CAAC;IACDuC,cAAc,EAAE;MACdxC,OAAO,EAAE,MAAM;MACf5C,IAAI,EAAE,SAAS;MACf6C,OAAO,EAAE;IACX;EACF,CAAC;EACD/C,SAAS,EAAE;IACTS,QAAQ,EAAE;MACRzB,SAAS,EAAE,UAAU;MACrBkB,IAAI,EAAE,WAAW;MACjBC,UAAU,EAAE,YAAY;MACxBQ,IAAI,EAAE;IACR,CAAC;IACD4E,SAAS,EAAE;MACTvG,SAAS,EAAE,WAAW;MACtBkB,IAAI,EAAE,cAAc;MACpBC,UAAU,EAAE,QAAQ;MACpBqF,QAAQ,EAAE,YAAY;MACtB7E,IAAI,EAAE;IACR,CAAC;IACD8E,IAAI,EAAE;MACJzG,SAAS,EAAE,MAAM;MACjBkB,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE,QAAQ;MACpBQ,IAAI,EAAE;IACR;EACF,CAAC;EACD+E,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,SAAS;IACfC,GAAG;MAAA,sEAAE,iBAAOC,GAAG,EAAEC,GAAG,EAAElD,KAAK;QAAA;UAAA;YAAA;cAAA;gBAAA,iCACzBA,KAAK,CAACmD,UAAU,CAAC;kBACfC,QAAQ,EAAEF,GAAG;kBACbG,SAAS,EAAE,IAAI;kBACfC,KAAK,EAAEL,GAAG,CAACK;gBACb,CAAC,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAEJC,IAAI;MAAA,uEAAE,kBAAON,GAAG,EAAEC,GAAG,EAAElD,KAAK;QAAA;QAAA;UAAA;YAAA;cAAA;gBAC1BxE,OAAO,CAACgI,GAAG,CAAC,SAAS,CAAC;gBAAA;gBAAA;gBAAA,OAECxD,KAAK,CAACyD,QAAQ,CAACR,GAAG,CAACS,IAAI,CAAC;cAAA;gBAAvCC,MAAM;gBACZT,GAAG,CACAU,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;kBAAEC,OAAO,EAAE,IAAI;kBAAEC,GAAG,EAAEJ,MAAM,CAACK,OAAO;kBAAEzI,EAAE,EAAEoI,MAAM,CAACpI;gBAAG,CAAC,CAAC;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAAA,MAExD,IAAI0I,qDAAU,eAAQ,GAAG,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAEnC;MAAA;QAAA;MAAA;MAAA;IAAA;EACH,CAAC,EACD;IACElB,IAAI,EAAE,aAAa;IACnBC,GAAG;MAAA,uEAAE,kBAAOC,GAAG,EAAEC,GAAG,EAAElD,KAAK;QAAA;UAAA;YAAA;cAAA;gBAAA,kCACzBA,KAAK,CAACmD,UAAU,CAAC;kBACfC,QAAQ,EAAEF,GAAG;kBACbG,SAAS,EAAE,IAAI;kBACfC,KAAK,EAAEL,GAAG,CAACK;gBACb,CAAC,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAEJY,KAAK;MAAA,wEAAE,kBAAOjB,GAAG,EAAEC,GAAG,EAAElD,KAAK;QAAA;QAAA;UAAA;YAAA;cAAA;gBAC3BxE,OAAO,CAACgI,GAAG,CAAC,aAAa,CAAC;gBAAA;gBAAA;gBAAA,OAEHxD,KAAK,CAACmE,SAAS,CAAC;kBACnC5I,EAAE,EAAE0H,GAAG,CAACmB,MAAM,CAAC7I,EAAE;kBACjB8I,OAAO,EAAEpB,GAAG,CAACS;gBACf,CAAC,CAAC;cAAA;gBAHIC,MAAM;gBAIZT,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;kBAAEC,OAAO,EAAE,IAAI;kBAAEC,GAAG,EAAEJ,MAAM,CAACK;gBAAQ,CAAC,CAAC;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAAA,MAEtD,IAAIC,qDAAU,eAAQ,GAAG,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAEnC;MAAA;QAAA;MAAA;MAAA;IAAA;EACH,CAAC,CACF;EACDzG,QAAQ,EAAE;IACRC,OAAO,EAAE;MACPC,OAAO,EAAE,SAAS;MAClBC,GAAG,EAAE,CAAC,MAAM,EAAE,SAAS;IACzB,CAAC;IACD2G,OAAO,EAAE;MACP5G,OAAO,EAAE4G,kDAAO;MAChB3G,GAAG,EAAE,CAAC,OAAO,EAAE,SAAS;IAC1B,CAAC;IACDiE,MAAM,EAAE;MACNlE,OAAO,EAAEkE,iDAAM;MACfjE,GAAG,EAAE,CAAC,OAAO,EAAE,QAAQ;IACzB,CAAC;IACD4G,YAAY,EAAE;MACZ7G,OAAO,EAAE,iBAAA8G,KAAK,EAAI;QAChB,IAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,EAAE;QACxB,SAASC,SAAS,CAAEC,CAAC,EAAE;UACrB,IAAIA,CAAC,KAAK,CAAC,EAAE;YACX,OAAO,CAAC;UACV;UACA,IAAIA,CAAC,KAAK,CAAC,EAAE;YACX,OAAO,CAAC;UACV;UACA,OAAOD,SAAS,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGD,SAAS,CAACC,CAAC,GAAG,CAAC,CAAC;QAC5C;QACA,IAAMC,KAAK,GAAGC,UAAU,CAACP,KAAK,CAACI,SAAS,CAAC;QACzC,OAAO;UACLjB,MAAM,EAAEiB,SAAS,CAACI,MAAM,CAACC,KAAK,CAACH,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK,CAAC;UACnDI,IAAI,EAAER,IAAI,CAACC,GAAG,EAAE,GAAGF;QACrB,CAAC;MACH,CAAC;MACD9G,GAAG,EAAE,CAAC,MAAM,EAAE,OAAO;IACvB;EACF,CAAC;EACDwH,WAAW,EAAE,CACX;IACEC,EAAE,EAAE,aAAa;IACjBC,GAAG,EAAE,kBAAkB;IACvB/H,IAAI,EAAE,QAAQ;IACdgI,KAAK,EAAE,eAACD,GAAG,EAAEC,MAAK;MAAA,OAAK7H,OAAO,CAAC6H,MAAK,CAAC;IAAA;IACrCC,OAAO,EAAE;EACX,CAAC,EACD;IACEH,EAAE,EAAE,aAAa;IACjBC,GAAG,EAAE,iBAAiB;IACtB/H,IAAI,EAAE,QAAQ;IACdgI,KAAK,EAAE,eAACD,GAAG,EAAEC,OAAK;MAAA,OAAK7H,OAAO,CAAC6H,OAAK,CAAC;IAAA;IACrCC,OAAO,EAAE;EACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC,C;;;;;;;;;;;;;;;;;;;;ACpYW;;AAEoC;;AAEhD;AACA;AACA;AACO,IAAMC,SAAS,GAAG;EACvBpJ,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE,cAAc;EACxBL,OAAO,EAAEyJ,yDAAU;EACnBC,QAAQ,EAAE,IAAI;EACd1F,KAAK,EAAE;IACL2F,kBAAkB,EAAE;MAClBzF,OAAO,EAAE,gBAAgB;MACzB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACDyF,iBAAiB,EAAE;MACjB1F,OAAO,EAAE,gBAAgB;MACzB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACD0F,oBAAoB,EAAE;MACpB3F,OAAO,EAAE,gBAAgB;MACzB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACD2F,gBAAgB,EAAE;MAChB5F,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACD4F,aAAa,EAAE;MACb7F,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACD6F,aAAa,EAAE;MACb9F,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACD8F,cAAc,EAAE;MACd/F,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACD+F,eAAe,EAAE;MACfhG,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACDgG,kBAAkB,EAAE;MAClBjG,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACDiG,gBAAgB,EAAE;MAChBlG,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACDkG,eAAe,EAAE;MACfnG,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACDmG,kBAAkB,EAAE;MAClBpG,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACDoG,gBAAgB,EAAE;MAChBrG,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX,CAAC;IACDqG,eAAe,EAAE;MACftG,OAAO,EAAE,WAAW;MACpB5C,IAAI,EAAE,UAAU;MAChB6C,OAAO,EAAE;IACX;EACF;AACF,CAAC,C;;;;;;;;;;;;;;;;;;;ACpFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEG,SAASsG,YAAY,CAAEzG,KAAK,EAAE0G,QAAQ,EAAEC,QAAQ,EAAE;EAC/D,IAAI,CAAC3G,KAAK,IAAI,CAAC0G,QAAQ,EAAE;IACvB;EACF;EACA,OAAOjH,MAAM,CAACa,IAAI,CAACN,KAAK,CAAC,CACtB4G,GAAG,CAAC,UAAAC,IAAI,EAAI;IACX,IAAI,CAACH,QAAQ,CAACG,IAAI,CAAC,EAAE;MACnB;IACF;IAEA,IAAI;MACF,2BACGA,IAAI,EAAGH,QAAQ,CAACG,IAAI,CAAC,CAACF,QAAQ,CAAC3G,KAAK,CAAC6G,IAAI,CAAC,CAAC3G,OAAO,CAAC,CAAC;IAEzD,CAAC,CAAC,OAAO4G,CAAC,EAAE;MACVtL,OAAO,CAACuL,IAAI,CAACD,CAAC,CAAChD,OAAO,CAAC;IACzB;EACF,CAAC,CAAC,CACDkD,MAAM,CAAC,UAACtI,CAAC,EAAEuI,CAAC;IAAA,uCAAWvI,CAAC,GAAKuI,CAAC;EAAA,CAAG,CAAC;AACvC,C;;;;;;;;;;;;;;;;;;;ACrBY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOe,SAASC,YAAY,CAClC7B,GAAG,EAIH;EAAA,IAHA8B,OAAO,uEAAG,CAAC,CAAC;EAAA,IACZC,OAAO,uEAAG,CAAC,CAAC;EAAA,IACZP,IAAI,uEAAGK,YAAY,CAACjL,IAAI;EAExB,IAAQuI,KAAK,GAAK2C,OAAO,CAAjB3C,KAAK;EAEb,IAAI,CAACA,KAAK,IAAI/E,MAAM,CAACa,IAAI,CAAC8G,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC/B,GAAG,EAAE;IAC9C,MAAM,IAAIgC,KAAK,CAAC;MACdtJ,IAAI,EAAE,mCAAmC;MACzCyG,KAAK,EAALA,KAAK;MACLqC,IAAI,EAAJA,IAAI;MACJS,KAAK,EAALA,KAAK;MACLF,OAAO,EAAPA,OAAO;MACP/B,GAAG,EAAHA;IACF,CAAC,CAAC;EACJ;EAEA,IAAIkC,KAAK,CAACC,OAAO,CAACnC,GAAG,CAAC,EAAE;IACtB,IAAM/E,IAAI,GAAG+E,GAAG,CAACuB,GAAG,CAAC,UAAAa,CAAC;MAAA,OAAIP,YAAY,CAACO,CAAC,EAAEN,OAAO,EAAEC,OAAO,EAAEP,IAAI,CAAC;IAAA,EAAC;IAElE,OAAOvG,IAAI,CAAC0G,MAAM,CAAC,UAACtI,CAAC,EAAEuI,CAAC;MAAA,uCAAWvI,CAAC,GAAKuI,CAAC;IAAA,CAAG,CAAC;EAChD;EAEA,IAAIG,OAAO,CAAC/B,GAAG,CAAC,EAAE;IAChB,2BAAUA,GAAG,EAAG+B,OAAO,CAAC/B,GAAG,CAAC;EAC9B;EAEA,IAAIb,KAAK,CAACa,GAAG,CAAC,EAAE;IACd,2BAAUA,GAAG,EAAGb,KAAK,CAACa,GAAG,CAAC;EAC5B;EAEA,OAAOb,KAAK,CACTkD,IAAI,EAAE,CACNC,IAAI,CAAC,UAAAC,MAAM;IAAA,2BAAQvC,GAAG,EAAGuC,MAAM,CAACvC,GAAG,CAAC;EAAA,CAAG,CAAC,SACnC,CAAC,UAAAiC,KAAK,EAAI;IACd,MAAM,IAAID,KAAK,CAAC,qBAAqB,GAAGhC,GAAG,EAAEwB,IAAI,EAAES,KAAK,EAAEF,OAAO,EAAE5C,KAAK,CAAC;EAC3E,CAAC,CAAC;AACN,C;;;;;;;;;;;;;;;;;;;;;AChDa;;AAAA;AAAA,+CACb;AAAA;AAAA;AACO,SAAS/H,mBAAmB,CAACH,YAAY,EAAE;EAChD,OAAO,SAASuL,cAAc,GAStB;IAAA,+EAAJ,CAAC,CAAC;MARJC,SAAS,QAATA,SAAS;MACTC,QAAQ,QAARA,QAAQ;MACRC,eAAe,QAAfA,eAAe;MACfC,gBAAgB,QAAhBA,gBAAgB;MAAA,2BAChBC,cAAc;MAAdA,cAAc,oCAAGF,eAAe;MAChCG,KAAK,QAALA,KAAK;MACLC,KAAK,QAALA,KAAK;MACLC,MAAM,QAANA,MAAM;IAEN,OAAO5I,MAAM,CAAC6I,MAAM,CAAC;MACnBC,UAAU,EAAEjM,YAAY,CAACC,IAAI,EAAE;MAC/BuL,SAAS,EAATA,SAAS;MACTC,QAAQ,EAARA,QAAQ;MACRE,gBAAgB,EAAhBA,gBAAgB;MAChBD,eAAe,EAAfA,eAAe;MACfE,cAAc,EAAdA,cAAc;MACdC,KAAK,EAALA,KAAK;MACLC,KAAK,EAALA,KAAK;MACLC,MAAM,EAANA;IACF,CAAC,CAAC;EACJ,CAAC;AACH;AAEO,SAAexL,UAAU;EAAA;AAAA;AAQ/B;EAAA,yEARM,iBAA0BgB,QAAQ;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEhBA,QAAQ,CAACR,MAAM,EAAE;UAAA;YAAhCA,MAAM;YAAA,iCACLA,MAAM,CAACmL,MAAM,GAAG,CAAC;UAAA;YAAA;YAAA;YAExBhN,OAAO,CAAC8L,KAAK,CAAC;cAAEmB,IAAI,EAAE5L,UAAU,CAACZ,IAAI;cAAEqL,KAAK;YAAC,CAAC,CAAC;YAAC,iCACzC,IAAI;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAEd;EAAA;AAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;ACnmC;AACO;;AAE1C;AACuC;AACA;AACC;AACxC;AACuC;;AAEvC;AACA;AACA;AACA;AACA,SAASoB,YAAY,CAAEC,IAAI,EAAE;EAC3B,IAAMC,OAAO,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,CAACC,MAAM,CAAC,UAAAxD,GAAG;IAAA,OAAI,CAACsD,IAAI,CAACtD,GAAG,CAAC;EAAA,EAAC;EAC9E,IAAI,CAAAuD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEJ,MAAM,IAAG,CAAC,EAAE;IACvB,MAAM,IAAInB,KAAK,+BACUuB,OAAO,qBAAWnJ,MAAM,CAACqJ,OAAO,CAACH,IAAI,CAAC,EAC9D;EACH;AACF;;AAEA;AACA;AACA;AACA;AACA,SAASI,SAAS,CAAEJ,IAAI,EAAE;EACxBD,YAAY,CAACC,IAAI,CAAC;EAClB,IAAM7L,MAAM,GAAG6L,IAAI,CAAC7L,MAAM,IAAI,EAAE;EAChC,IAAMR,YAAY,GAAGqM,IAAI,CAACrM,YAAY,IAAI,CAAC,CAAC;EAC5C,uCACKqM,IAAI;IACP7L,MAAM,EAAEA,MAAM,CAACkM,MAAM,CAACC,4CAAY,CAAC;IACnC3M,YAAY,kCACPA,YAAY,GACZ4M,uDAAY,CAACP,IAAI,CAAC3I,KAAK,EAAE0G,sCAAQ,EAAEC,sCAAQ,CAAC;EAChD;AAEL;AAEO,IAAMwC,MAAM,GAAG1J,MAAM,CAACtB,MAAM,CAACiL,oCAAU,CAAC,CAACxC,GAAG,CAAC,UAAA+B,IAAI;EAAA,OAAII,SAAS,CAACJ,IAAI,CAAC;AAAA,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;ACrRhE;;AAEL,IAAMtK,UAAU,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC;AACnD,IAAMM,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;AACnE,IAAMP,UAAU,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC;AAE/C,IAAMH,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAG3B,YAAY;EAAA,OAAI;IAAA,IAClD+M,QAAQ,QAARA,QAAQ;MACR1K,UAAU,QAAVA,UAAU;MACV2K,KAAK,QAALA,KAAK;MACLC,QAAQ,QAARA,QAAQ;MACRtN,IAAI,QAAJA,IAAI;MACJ8B,IAAI,QAAJA,IAAI;MACJyL,GAAG,QAAHA,GAAG;MACHC,aAAa,QAAbA,aAAa;MACbC,MAAM,QAANA,MAAM;MACNC,OAAO,QAAPA,OAAO;MACPC,SAAS,QAATA,SAAS;MACTC,QAAQ,QAARA,QAAQ;IAAA,OAERpK,MAAM,CAAC6I,MAAM,CAAC;MACZe,QAAQ,EAARA,QAAQ;MACR1K,UAAU,EAAVA,UAAU;MACV2K,KAAK,EAAEA,KAAK,IAAIC,QAAQ,IAAI,GAAG,CAAC;MAChCtN,IAAI,EAAJA,IAAI;MACJ8B,IAAI,EAAJA,IAAI;MACJyL,GAAG,EAAHA,GAAG;MACHC,aAAa,EAAbA,aAAa;MACbC,MAAM,EAANA,MAAM;MACNC,OAAO,EAAPA,OAAO;MACPC,SAAS,EAATA,SAAS;MACTC,QAAQ,EAARA;IACF,CAAC,CAAC;EAAA;AAAA,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCQ;;AAAA;AAAA,+CACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACiE;AAC1C;;AAEvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACO,IAAMC,SAAS,GAAGC,MAAM,CAAC,WAAW,CAAC;AAC5C;AACA;AACA;AACO,IAAMC,WAAW,GAAGD,MAAM,CAAC,aAAa,CAAC;AAChD;AACA;AACA;AACO,IAAME,SAAS,GAAG;EACvBC,GAAG,EAAEH,MAAM,CAAC,KAAK,CAAC;EAClBxG,IAAI,EAAEwG,MAAM,CAAC,MAAM;AACrB,CAAC;;AAED;AACA;AACA;AACO,IAAMI,SAAS,iDACnBF,SAAS,CAACC,GAAG,EAAGH,MAAM,CAAC,iBAAiB,CAAC,+BACzCE,SAAS,CAAC1G,IAAI,EAAGwG,MAAM,CAAC,kBAAkB,CAAC,cAC7C;;AAED;AACA;AACA;AACA,IAAMK,SAAS,GAAGD,SAAS,CAACF,SAAS,CAACC,GAAG,CAAC;AAC1C;AACA;AACA;AACA,IAAMG,UAAU,GAAGF,SAAS,CAACF,SAAS,CAAC1G,IAAI,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+G,aAAa,CAAE9F,KAAK,EAAEH,OAAO,EAAE;EAC7CA,OAAO,CAACyF,SAAS,CAAC,GAAGS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACjG,KAAK,CAAC,CAAC,EAAC;;EAEvD,IAAMkG,OAAO,GAAGlG,KAAK,CAAC4F,SAAS,CAAC,GAC5BO,wDAAO,4BAAInG,KAAK,CAAC4F,SAAS,CAAC,CAACjM,MAAM,EAAE,EAAC,CAACkG,OAAO,CAAC,GAC9CA,OAAO;EAEX,IAAMuG,OAAO,mCAAQpG,KAAK,GAAKkG,OAAO,CAAE;EAExC,OAAOlG,KAAK,CAAC6F,UAAU,CAAC,GACpBM,wDAAO,4BAAInG,KAAK,CAAC6F,UAAU,CAAC,CAAClM,MAAM,EAAE,EAAC,CAACyM,OAAO,CAAC,GAC/CA,OAAO;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,YAAY,CAAEvN,IAAI,EAAEwN,CAAC,EAAE7O,IAAI,EAAE8O,EAAE,EAAE;EAC/C,IAAI,CAACZ,SAAS,CAAC7M,IAAI,CAAC,EAAE;IACpB,MAAM,IAAI+J,KAAK,CAAC,oBAAoB,CAAC;EACvC;EAEA,IAAM2D,QAAQ,GAAGF,CAAC,CAACX,SAAS,CAAC7M,IAAI,CAAC,CAAC,IAAI,IAAI2N,GAAG,EAAE;EAEhD,IAAI,CAACD,QAAQ,CAACE,GAAG,CAACjP,IAAI,CAAC,EAAE;IACvB+O,QAAQ,CAACG,GAAG,CAAClP,IAAI,EAAE8O,EAAE,EAAE,CAAC;IAExB,uCACKD,CAAC,2BACHX,SAAS,CAAC7M,IAAI,CAAC,EAAG0N,QAAQ;EAE/B;EACA,OAAOF,CAAC;AACV;;AAEA;AACA;AACA;AACA,IAAMM,SAAS,GAAG;EAChB9L,MAAM,EAAE,CAAC;EAAE;EACX+L,MAAM,EAAE,CAAC,IAAI,CAAC;EAAE;EAChBC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,CAAC;;AAED,SAASC,iBAAiB,CAAE/G,KAAK,EAAEkG,OAAO,EAAEc,KAAK,EAAE;EACjD,IAAMC,QAAQ,GAAGL,SAAS,CAAC9L,MAAM,GAAGkM,KAAK;EACzC,IAAME,SAAS,GAAGD,QAAQ,GAAGjH,KAAK,CAAC/G,OAAO,EAAE,GAAG,CAAC,CAAC;EACjD,qDACK+G,KAAK,GACLkG,OAAO,GACPgB,SAAS;AAEhB;AAEA,SAASC,QAAQ,CAAEjN,CAAC,EAAE;EACpB,OAAOA,CAAC,IAAI,IAAI,IAAI,QAAOA,CAAC,MAAK,QAAQ;AAC3C;AAEA,SAASkN,eAAe,CAAEpH,KAAK,EAAEH,OAAO,EAAEmH,KAAK,EAAE;EAC/C,IAAI;IACF,IAAI,CAACnH,OAAO,EAAE,OAAO,KAAK;IAC1B,IAAI+G,SAAS,CAAC9L,MAAM,GAAGkM,KAAK,EAAE;MAC5B,IAAMK,UAAU,GAAGpM,MAAM,CAACa,IAAI,CAAC+D,OAAO,CAAC;MACvC,IAAIwH,UAAU,CAACrD,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK;MAEvC,IACEqD,UAAU,CAACpN,KAAK,CACd,UAAAgJ,CAAC;QAAA,OAAIjD,KAAK,CAACiD,CAAC,CAAC,IAAIqE,6DAAsB,CAACzH,OAAO,CAACoD,CAAC,CAAC,EAAEjD,KAAK,CAACiD,CAAC,CAAC,CAAC;MAAA,EAC9D,EACD;QACA,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd9L,OAAO,CAAC8L,KAAK,CAAC;MAAEyE,EAAE,EAAEH,eAAe,CAAC3P,IAAI;MAAEqL,KAAK,EAALA;IAAM,CAAC,CAAC;EACpD;EACA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS3K,aAAa,CAAE6H,KAAK,EAAEH,OAAO,EAAEmH,KAAK,EAAE;EACpD,IAAI,CAAChH,KAAK,IAAI,CAACH,OAAO,IAAI,CAACmH,KAAK,EAAE,OAAO,CAAC,CAAC;EAC3C;EACA,IAAI,CAACI,eAAe,CAACpH,KAAK,EAAEH,OAAO,EAAEmH,KAAK,CAAC,EAAE;IAC3C,OAAOhH,KAAK;EACd;;EAEA;EACA,IAAMwH,KAAK,mCACN3H,OAAO,2BACTyF,SAAS,EAAGS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACjG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,EACrD;;EAED;EACA,IAAMkG,OAAO,GAAGlG,KAAK,CAACwF,WAAW,CAAC,CAC/BnB,MAAM,CAAC,UAAAoD,CAAC;IAAA,OAAIA,CAAC,CAACD,KAAK,GAAGR,KAAK;EAAA,EAAC,CAC5BU,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK;EAAA,EAAC,CACjCzF,GAAG,CAAC,UAAAqF,CAAC;IAAA,OAAIzH,KAAK,CAACyH,CAAC,CAAChQ,IAAI,CAAC,CAACqQ,KAAK,CAACN,KAAK,CAAC;EAAA,EAAC,CACpChF,MAAM,CAAC,UAACtI,CAAC,EAAEuI,CAAC;IAAA,uCAAWvI,CAAC,GAAKuI,CAAC;EAAA,CAAG,EAAE+E,KAAK,CAAC;EAE5C,IAAMpB,OAAO,mCAAQpG,KAAK,GAAKkG,OAAO,CAAE;;EAExC;EACA,OAAOE,OAAO,CAACZ,WAAW,CAAC,CACxBnB,MAAM,CAAC,UAAAoD,CAAC;IAAA,OAAIA,CAAC,CAACM,MAAM,GAAGf,KAAK;EAAA,EAAC,CAC7BU,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK;EAAA,EAAC,CACjCzF,GAAG,CAAC,UAAAqF,CAAC;IAAA,OAAIrB,OAAO,CAACqB,CAAC,CAAChQ,IAAI,CAAC,EAAE;EAAA,EAAC,CAC3B+K,MAAM,CAAC,UAACtI,CAAC,EAAEuI,CAAC;IAAA,uCAAWvI,CAAC,GAAKuI,CAAC;EAAA,CAAG,EAAE2D,OAAO,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS4B,WAAW,OAAwD;EAAA,yBAApDC,QAAQ;IAARA,QAAQ,8BAAG,IAAI;IAAA,qBAAEC,QAAQ;IAARA,QAAQ,8BAAG,IAAI;IAAA,mBAAEC,MAAM;IAANA,MAAM,4BAAG,KAAK;EACtE,IAAIpH,OAAO,GAAG,CAAC;EAEf,IAAIkH,QAAQ,EAAE;IACZlH,OAAO,IAAI6F,SAAS,CAAC9L,MAAM;EAC7B;EACA,IAAIoN,QAAQ,EAAE;IACZnH,OAAO,IAAI6F,SAAS,CAACC,MAAM;EAC7B;EACA,IAAIsB,MAAM,EAAE;IACVpH,OAAO,IAAI6F,SAAS,CAACE,MAAM;EAC7B;EACA,OAAO/F,OAAO;AAChB;;AAEA;AACA;AACA;AACA,IAAMqH,gBAAgB,GAAI,YAAM;EAC9B,OAAO;IACL;AACJ;AACA;IACIH,QAAQ,EAAED,WAAW,CAAC;MACpBC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,KAAK;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;IACF;AACJ;AACA;IACID,QAAQ,EAAEF,WAAW,CAAC;MACpBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;IACV,CAAC,CAAC;IACF;AACJ;AACA;IACIE,iBAAiB,EAAEL,WAAW,CAAC;MAC7BC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;IACV,CAAC,CAAC;IACF;AACJ;AACA;IACIA,MAAM,EAAEH,WAAW,CAAC;MAClBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,KAAK;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;IACF;AACJ;AACA;IACIG,eAAe,EAAEN,WAAW,CAAC;MAC3BC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;IACV,CAAC,CAAC;IACF;AACJ;AACA;IACII,eAAe,EAAEP,WAAW,CAAC;MAC3BC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,KAAK;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;IACF;AACJ;AACA;IACIK,KAAK,EAAER,WAAW,CAAC;MACjBC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;AACH,CAAC,EAAG;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,aAAa,QAAsD;EAAA,IAAlDzI,KAAK,SAALA,KAAK;IAAEvI,IAAI,SAAJA,IAAI;IAAA,oBAAE+P,KAAK;IAALA,KAAK,4BAAG,CAAC;IAAA,qBAAEO,MAAM;IAANA,MAAM,6BAAG,CAAC;IAAA,oBAAEF,KAAK;IAALA,KAAK,4BAAG,EAAE;EACtE,IAAMa,MAAM,GAAG1I,KAAK,CAACwF,WAAW,CAAC,IAAI,EAAE;EAEvC,IAAIkD,MAAM,CAACC,IAAI,CAAC,UAAAlB,CAAC;IAAA,OAAIA,CAAC,CAAChQ,IAAI,KAAKA,IAAI;EAAA,EAAC,EAAE;IACrCT,OAAO,CAACuL,IAAI,CAAC,2BAA2B,EAAE9K,IAAI,CAAC;IAC/C,OAAOuI,KAAK;EACd;EAEA,uCACKA,KAAK;IACR7H,aAAa,EAAbA;EAAa,GACZqN,WAAW,+BAAOkD,MAAM,IAAE;IAAEjR,IAAI,EAAJA,IAAI;IAAE+P,KAAK,EAALA,KAAK;IAAEO,MAAM,EAANA,MAAM;IAAEF,KAAK,EAALA;EAAM,CAAC;AAE7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASe,SAAS,CAAEtC,CAAC,EAAe;EAAA,kCAAVuC,QAAQ;IAARA,QAAQ;EAAA;EAChC,IAAI,CAACA,QAAQ,IAAI,CAACvC,CAAC,EAAE,OAAO,IAAI;EAChC,IAAMxK,IAAI,GAAG+M,QAAQ,CAACC,IAAI,EAAE,CAAC1G,GAAG,CAAC,UAAUa,CAAC,EAAE;IAC5C,IAAI,OAAOA,CAAC,KAAK,UAAU,EAAE,OAAOA,CAAC,CAACqD,CAAC,CAAC;IACxC,IAAIrD,CAAC,YAAY8F,MAAM,EAAE,OAAO9N,MAAM,CAACa,IAAI,CAACwK,CAAC,CAAC,CAACjC,MAAM,CAAC,UAAAxD,GAAG;MAAA,OAAIoC,CAAC,CAAC+F,IAAI,CAACnI,GAAG,CAAC;IAAA,EAAC;IACzE,IAAIoC,CAAC,KAAK,GAAG,EAAE,OAAOhI,MAAM,CAACa,IAAI,CAACwK,CAAC,CAAC;IACpC,OAAOrD,CAAC;EACV,CAAC,CAAC;EACF,OAAOnH,IAAI,CAACgN,IAAI,EAAE;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiB;EAAA,mCAAOJ,QAAQ;IAARA,QAAQ;EAAA;EAAA,OAAK,UAAAvC,CAAC,EAAI;IACrD,IAAMxK,IAAI,GAAG8M,SAAS,gBAACtC,CAAC,SAAKuC,QAAQ,EAAC;IAEtC,IAAMK,YAAY,GAAG,SAAfA,YAAY,CAAGC,GAAG,EAAI;MAC1B,OAAOrN,IAAI,CACRsG,GAAG,CAAC,UAAAvB,GAAG;QAAA,OAAKsI,GAAG,CAACtI,GAAG,CAAC,uBAAMA,GAAG,EAAGuI,sDAAO,CAACD,GAAG,CAACtI,GAAG,CAAC,CAAC,IAAK,CAAC,CAAC;MAAA,CAAC,CAAC,CAC1D2B,MAAM,CAAC,UAACtI,CAAC,EAAEuI,CAAC;QAAA,uCAAWvI,CAAC,GAAKuI,CAAC;MAAA,CAAG,CAAC;IACvC,CAAC;IAED;MACEwG,iBAAiB,+BAAI;QACnB,OAAOC,YAAY,CAAC,IAAI,CAAC;MAC3B;IAAC,GAEET,aAAa,CAAC;MACfzI,KAAK,EAAEsG,CAAC;MACR7O,IAAI,EAAEwR,iBAAiB,CAACxR,IAAI;MAC5B+P,KAAK,EAAEY,gBAAgB,CAACH,QAAQ;MAChCF,MAAM,EAAEK,gBAAgB,CAACF,QAAQ;MACjCL,KAAK,EAAE;IACT,CAAC,CAAC;MAEF5O,OAAO,qBAAI;QAAA;QACT,OAAO6C,IAAI,CACRsG,GAAG,CAAC,UAAAvB,GAAG;UAAA,OAAK,KAAI,CAACA,GAAG,CAAC,uBAAMA,GAAG,EAAG5H,sDAAO,CAAC,KAAI,CAAC4H,GAAG,CAAC,CAAC,IAAK,CAAC,CAAC;QAAA,CAAC,CAAC,CAC5D2B,MAAM,CAAC,UAACtI,CAAC,EAAEuI,CAAC;UAAA,uCAAWvI,CAAC,GAAKuI,CAAC;QAAA,CAAG,EAAE,CAAC,CAAC,CAAC;MAC3C;IAAC;EAEL,CAAC;AAAA;;AAED;AACA;AACA;AACA;AACA;AACO,IAAMlK,gBAAgB,GAAG,SAAnBA,gBAAgB;EAAA,mCAAOsQ,QAAQ;IAARA,QAAQ;EAAA;EAAA,OAAK,UAAAvC,CAAC,EAAI;IACpD,IAAM+C,cAAc,GAAG,SAAjBA,cAAc,CAAGF,GAAG,EAAI;MAC5B,IAAMrN,IAAI,GAAG8M,SAAS,gBAACO,GAAG,SAAKN,QAAQ,EAAC;MAExC,IAAMS,SAAS,GAAGrO,MAAM,CAACa,IAAI,CAACqN,GAAG,CAAC,CAAC9E,MAAM,CAAC,UAAAxD,GAAG;QAAA,OAAI/E,IAAI,CAACyN,QAAQ,CAAC1I,GAAG,CAAC;MAAA,EAAC;MACpE,IAAI,CAAAyI,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEtF,MAAM,IAAG,CAAC,EAAE;QACzB,MAAM,IAAInB,KAAK,8CAAuCyG,SAAS,EAAG;MACpE;IACF,CAAC;IAED;MACE/Q,gBAAgB,8BAAI;QAClB8Q,cAAc,CAAC,IAAI,CAAC;MACtB;IAAC,GAEEZ,aAAa,CAAC;MACfzI,KAAK,EAAEsG,CAAC;MACR7O,IAAI,EAAEc,gBAAgB,CAACd,IAAI;MAC3B+P,KAAK,EAAEY,gBAAgB,CAACH,QAAQ;MAChCJ,KAAK,EAAE;IACT,CAAC,CAAC;EAEN,CAAC;AAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,IAAMrP,iBAAiB,GAAG,SAApBA,iBAAiB;EAAA,mCAAOqQ,QAAQ;IAARA,QAAQ;EAAA;EAAA,OAAK,UAAAvC,CAAC,EAAI;IACrD,IAAMxK,IAAI,GAAG8M,SAAS,gBAACtC,CAAC,SAAKuC,QAAQ,EAAC;IAEtC,SAASW,YAAY,CAAEL,GAAG,EAAE;MAC1B,IAAM/E,OAAO,GAAGtI,IAAI,CAACuI,MAAM,CAAC,UAAAxD,GAAG;QAAA,OAAIA,GAAG,IAAI,CAACsI,GAAG,CAACtI,GAAG,CAAC;MAAA,EAAC;MACpD,IAAI,CAAAuD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEJ,MAAM,IAAG,CAAC,EAAE;QACvB,MAAM,IAAInB,KAAK,wCAAiCuB,OAAO,EAAG;MAC5D;IACF;IACA;MACE5L,iBAAiB,+BAAI;QACnBgR,YAAY,CAAC,IAAI,CAAC;MACpB;IAAC,GAEEf,aAAa,CAAC;MACfzI,KAAK,EAAEsG,CAAC;MACR7O,IAAI,EAAEe,iBAAiB,CAACf,IAAI;MAC5BsQ,MAAM,EAAEK,gBAAgB,CAACC,iBAAiB;MAC1CR,KAAK,EAAE;IACT,CAAC,CAAC;EAEN,CAAC;AAAA;;AAED;AACA;AACA;AACA;AACA;AACO,IAAM4B,aAAa,GAAG,SAAhBA,aAAa;EAAA,mCAAOZ,QAAQ;IAARA,QAAQ;EAAA;EAAA,OAAK,UAAAvC,CAAC,EAAI;IACjD,IAAMxK,IAAI,GAAG8M,SAAS,gBAACtC,CAAC,SAAKuC,QAAQ,EAAC;IAEtC,SAASa,QAAQ,CAAEP,GAAG,EAAE;MACtB,OAAOrN,IAAI,CACRsG,GAAG,CAAC,UAAAvB,GAAG;QAAA,OAAKsI,GAAG,CAACtI,GAAG,CAAC,uBAAMA,GAAG,EAAG8I,mDAAI,CAACR,GAAG,CAACtI,GAAG,CAAC,CAAC,IAAK,CAAC,CAAC;MAAA,CAAC,CAAC,CACvD2B,MAAM,CAAC,UAACtI,CAAC,EAAEuI,CAAC;QAAA,uCAAWvI,CAAC,GAAKuI,CAAC;MAAA,CAAG,CAAC;IACvC;IAEA;MACEgH,aAAa,2BAAI;QACf,OAAOC,QAAQ,CAAC,IAAI,CAAC;MACvB;IAAC,GAEEjB,aAAa,CAAC;MACfzI,KAAK,EAAEsG,CAAC;MACR7O,IAAI,EAAEgS,aAAa,CAAChS,IAAI;MACxB+P,KAAK,EAAEY,gBAAgB,CAACH,QAAQ;MAChCF,MAAM,EAAEK,gBAAgB,CAACF,QAAQ;MACjCL,KAAK,EAAE;IACT,CAAC,CAAC;EAEN,CAAC;AAAA;AAED,IAAM+B,gBAAgB,GAAG,EAAE;;AAE3B;AACA;AACA;AACA;AACO,IAAMC,eAAe,GAAG,SAAlBA,eAAe;EAAA,mCAAOhB,QAAQ;IAARA,QAAQ;EAAA;EAAA,OAAK,UAAAvC,CAAC,EAAI;IACnD,SAASwD,kBAAkB,GAAI;MAC7B,IAAMhO,IAAI,GAAG8M,SAAS,gBAACtC,CAAC,SAAKuC,QAAQ,EAAC;MACtC,IAAMkB,SAAS,GAAGjO,IAAI,CAAC0I,MAAM,CAACoF,gBAAgB,CAAC;MAE/C,IAAMI,YAAY,GAAG/O,MAAM,CAACa,IAAI,CAACwK,CAAC,CAAC,CAACjC,MAAM,CAAC,UAAAxD,GAAG;QAAA,OAAI,CAACkJ,SAAS,CAACR,QAAQ,CAAC1I,GAAG,CAAC;MAAA,EAAC;MAE3E,IAAI,CAAAmJ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEhG,MAAM,IAAG,CAAC,EAAE;QAC5B,MAAM,IAAInB,KAAK,+BAAwBmH,YAAY,EAAG;MACxD;IACF;IAEA;MACEC,uBAAuB,qCAAI;QACzB,OAAOH,kBAAkB,CAAC,IAAI,CAAC;MACjC;IAAC,GAEErB,aAAa,CAAC;MACfzI,KAAK,EAAEsG,CAAC;MACR7O,IAAI,EAAEqS,kBAAkB,CAACrS,IAAI;MAC7B+P,KAAK,EAAEY,gBAAgB,CAACH,QAAQ;MAChCJ,KAAK,EAAE;IACT,CAAC,CAAC;EAEN,CAAC;AAAA;;AAED;AACA;AACA;AACO,IAAMqC,KAAK,GAAG;EACnBtG,KAAK,EAAE,2BAA2B;EAClCuG,WAAW,EAAE,qKAAqK;EAClLC,WAAW,EAAE,mJAAmJ;EAChKzG,KAAK,EAAE,yBAAyB;EAChC0G,UAAU,EAAE,0JAA0J;EACtKC,GAAG,EAAE,yDAAyD;EAC9D;AACF;AACA;AACA;AACA;EACEtB,IAAI,gBAAEuB,IAAI,EAAEC,GAAG,EAAE;IACf,IAAMC,KAAK,GACTxP,MAAM,CAACa,IAAI,CAAC,IAAI,CAAC,CAACyN,QAAQ,CAACgB,IAAI,CAAC,IAAI,IAAI,CAACA,IAAI,CAAC,YAAYxB,MAAM,GAC5D,IAAI,CAACwB,IAAI,CAAC,GACVA,IAAI;IACV,OAAOE,KAAK,CAACzB,IAAI,CAACwB,GAAG,CAAC;EACxB;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASE,kBAAkB,CAAEjD,CAAC,EAAEnB,CAAC,EAAEqE,OAAO,EAAE;EAC1C,IAAMC,UAAU,GAAGnD,CAAC,CAACoD,MAAM,CAACC,SAAS,GAAG1B,sDAAO,CAACuB,OAAO,CAAC,GAAGA,OAAO;EAClE,OAAOrE,CAAC,CAACyE,QAAQ,qBAAItD,CAAC,CAAC/O,OAAO,EAAGkS,UAAU,EAAG,CAAC5G,MAAM,GAAG,CAAC;AAC3D;;AAEA;AACA;AACA;AACA,IAAMgH,SAAS,GAAG;EAChBC,KAAK,EAAE;IACLnR,OAAO,EAAE,iBAAC2N,CAAC,EAAEnB,CAAC,EAAEqE,OAAO;MAAA,OAAKlD,CAAC,CAAC3N,OAAO,CAACwM,CAAC,EAAEqE,OAAO,CAAC;IAAA;IACjDhR,MAAM,EAAE,gBAAC8N,CAAC,EAAEnB,CAAC,EAAEqE,OAAO;MAAA,OAAKlD,CAAC,CAAC9N,MAAM,CAAC4P,QAAQ,CAACoB,OAAO,CAAC;IAAA;IACrDhS,KAAK,EAAE,eAAC8O,CAAC,EAAEnB,CAAC,EAAEqE,OAAO;MAAA,OAAKT,KAAK,CAAClB,IAAI,CAACvB,CAAC,CAAC9O,KAAK,EAAEgS,OAAO,CAAC;IAAA;IACtD,UAAQ,iBAAClD,CAAC,EAAEnB,CAAC,EAAEqE,OAAO;MAAA,OAAKlD,CAAC,UAAO,aAAYkD,OAAO;IAAA;IACtDjR,MAAM,EAAE,gBAAC+N,CAAC,EAAEnB,CAAC,EAAEqE,OAAO;MAAA,OAAKlD,CAAC,CAAC/N,MAAM,GAAG,CAAC,GAAGiR,OAAO;IAAA;IACjDO,MAAM,EAAE,gBAACzD,CAAC,EAAEnB,CAAC,EAAEqE,OAAO;MAAA,OAAKlD,CAAC,CAACyD,MAAM,GAAG,CAAC,GAAGP,OAAO,CAAC3G,MAAM;IAAA;IACxD6G,MAAM,EAAE,gBAACpD,CAAC,EAAEnB,CAAC,EAAEqE,OAAO;MAAA,OAAKD,kBAAkB,CAACjD,CAAC,EAAEnB,CAAC,EAAEqE,OAAO,CAAC;IAAA;EAC9D,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;EACE7Q,OAAO,mBAAE2N,CAAC,EAAEnB,CAAC,EAAEqE,OAAO,EAAE;IAAA;IACtB,OAAO1P,MAAM,CAACa,IAAI,CAAC,IAAI,CAACmP,KAAK,CAAC,CAAChR,KAAK,CAAC,UAAA4G,GAAG,EAAI;MAC1C,IAAI4G,CAAC,CAAC5G,GAAG,CAAC,EAAE;QACV;QACA,OAAO,MAAI,CAACoK,KAAK,CAACpK,GAAG,CAAC,CAAC4G,CAAC,EAAEnB,CAAC,EAAEqE,OAAO,CAAC;MACvC;MACA,OAAO,IAAI;IACb,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMlS,kBAAkB,GAAG,SAArBA,kBAAkB,CAAG+M,WAAW;EAAA,OAAI,UAAAc,CAAC,EAAI;IACpD,SAASpO,QAAQ,CAAEiR,GAAG,EAAE;MACtB,IAAMgC,OAAO,GAAG3F,WAAW,CAACnB,MAAM,CAAC,UAAAoD,CAAC,EAAI;QACtC,IAAMkD,OAAO,GAAGxB,GAAG,CAAC1B,CAAC,CAAC/O,OAAO,CAAC;QAE9B,IAAI,CAACiS,OAAO,EAAE;UACZ,OAAO,KAAK;QACd;QACA,OAAO,CAACK,SAAS,CAAClR,OAAO,CAAC2N,CAAC,EAAE0B,GAAG,EAAEwB,OAAO,CAAC;MAC5C,CAAC,CAAC;MAEF,IAAI,CAAAQ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEnH,MAAM,IAAG,CAAC,EAAE;QACvB,MAAM,IAAInB,KAAK,gDAA0BsI,OAAO,CAAC/I,GAAG,CAAC,UAAAqF,CAAC;UAAA,OAAIA,CAAC,CAAC/O,OAAO;QAAA,EAAC,GAAI;MAC1E;IACF;IAEA;MACED,kBAAkB,gCAAI;QACpBP,QAAQ,CAAC,IAAI,CAAC;MAChB;IAAC,GAEEuQ,aAAa,CAAC;MACfzI,KAAK,EAAEsG,CAAC;MACR7O,IAAI,EAAEgB,kBAAkB,CAAChB,IAAI;MAC7B+P,KAAK,EAAEY,gBAAgB,CAACH,QAAQ;MAChCF,MAAM,EAAEK,gBAAgB,CAACF,QAAQ;MACjCL,KAAK,EAAE;IACT,CAAC,CAAC;EAEN,CAAC;AAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO,IAAMhN,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAGuQ,QAAQ;EAAA,OAAI,UAAA9E,CAAC,EAAI;IAC/C,SAAS+E,WAAW,CAAElC,GAAG,EAAE;MACzB,IAAMjD,OAAO,GAAGkF,QAAQ,CAAC/G,MAAM,CAAC,UAAAiH,CAAC;QAAA,OAAInC,GAAG,CAACmC,CAAC,CAAC5S,OAAO,CAAC;MAAA,EAAC;MAEpD,IAAI,CAAAwN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAElC,MAAM,IAAG,CAAC,EAAE;QACvB,OAAOkC,OAAO,CACX9D,GAAG,CAAC,UAAAkJ,CAAC;UAAA,OAAIA,CAAC,CAACxQ,MAAM,CAACwL,CAAC,EAAE6C,GAAG,CAACmC,CAAC,CAAC5S,OAAO,CAAC,CAAC;QAAA,EAAC,CACrC8J,MAAM,CAAC,UAACtI,CAAC,EAAEuI,CAAC;UAAA,uCAAWvI,CAAC,GAAKuI,CAAC;QAAA,CAAG,CAAC;MACvC;IACF;IAEA;MACE5H,gBAAgB,8BAAI;QAClB,OAAOwQ,WAAW,CAAC,IAAI,CAAC;MAC1B;IAAC,GAEE5C,aAAa,CAAC;MACfzI,KAAK,EAAEsG,CAAC;MACR7O,IAAI,EAAEoD,gBAAgB,CAACpD,IAAI;MAC3BsQ,MAAM,EAAEK,gBAAgB,CAACH,QAAQ;MACjCJ,KAAK,EAAE;IACT,CAAC,CAAC;EAEN,CAAC;AAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAM0D,UAAU,GAAG,SAAbA,UAAU,CAAIhE,EAAE,EAAEW,QAAQ,EAAED,QAAQ;EAAA,mCAAKuD,IAAI;IAAJA,IAAI;EAAA;EAAA;IAAA,uEAAK,iBAAMlF,CAAC;MAAA;QAAA;UAAA;YAAA;cAAA,iEAE/DA,CAAC;gBACJiF,UAAU,wBAAI;kBACZvU,OAAO,CAACgI,GAAG,CAAC;oBAAEiF,IAAI,EAAE,YAAY;oBAAEsD,EAAE,EAAFA,EAAE;oBAAEiE,IAAI,EAAJA;kBAAK,CAAC,CAAC;kBAC7C,OAAO,IAAI,CAACjE,EAAE,CAAC,OAAR,IAAI,EAAQiE,IAAI,CAAC,CAACrI,IAAI,CAAC,UAAAmD,CAAC;oBAAA,OAAIA,CAAC;kBAAA,EAAC;gBACvC;cAAC,GAEEmC,aAAa,CAAC;gBACfzI,KAAK,EAAEsG,CAAC;gBACR7O,IAAI,EAAE,YAAY;gBAClBsQ,MAAM,EAAEK,gBAAgB,CAACH,QAAQ;gBACjCJ,KAAK,EAAE;cACT,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAEL;IAAA;MAAA;IAAA;EAAA;AAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAM4D,UAAU,GAAG,SAAbA,UAAU,CAAIlE,EAAE,EAAEW,QAAQ,EAAED,QAAQ;EAAA,mCAAKuD,IAAI;IAAJA,IAAI;EAAA;EAAA;IAAA,uEAAK,kBAAMlF,CAAC;MAAA;MAAA;QAAA;UAAA;YAAA;cAC9DoF,YAAY,GAAG;gBACnB,YAAU,mBAACnE,EAAE,EAAE4B,GAAG;kBAAA,mCAAKqC,IAAI;oBAAJA,IAAI;kBAAA;kBAAA,OAAKjE,EAAE,gBAAC4B,GAAG,SAAKqC,IAAI,EAAC,CAACrI,IAAI,CAAC,UAAAmD,CAAC;oBAAA,OAAIA,CAAC;kBAAA,EAAC;gBAAA;gBAC7DqF,MAAM,EAAE,gBAACpE,EAAE,EAAE4B,GAAG;kBAAA,oCAAKqC,IAAI;oBAAJA,IAAI;kBAAA;kBAAA,OAAKrC,GAAG,CAAC5B,EAAE,CAAC,OAAP4B,GAAG,EAAQqC,IAAI,CAAC,CAACrI,IAAI,CAAC,UAAAmD,CAAC;oBAAA,OAAIA,CAAC;kBAAA,EAAC;gBAAA;cAC7D,CAAC;cAAA,kEAGIA,CAAC;gBACEmF,UAAU,wBAAI;kBAAA;kBAAA;oBAAA;oBAAA;sBAAA;wBAAA;0BAAA;4BAAA;4BAAA,OACEC,YAAY,SAAQnE,EAAE,EAAC,OAAvBmE,YAAY,GAAYnE,EAAE,EAAE,MAAI,SAAKiE,IAAI,EAAC;0BAAA;4BAAxDxL,KAAK;4BAAA,kCACJA,KAAK;0BAAA;0BAAA;4BAAA;wBAAA;sBAAA;oBAAA;kBAAA;gBACd;cAAC,GAEEyI,aAAa,CAAC;gBACfzI,KAAK,EAAEsG,CAAC;gBACR7O,IAAI,EAAE,YAAY;gBAClBsQ,MAAM,EAAEK,gBAAgB,CAACH,QAAQ;gBACjCJ,KAAK,EAAE;cACT,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAEL;IAAA;MAAA;IAAA;EAAA;AAAA;;AAED;AACA;AACA;AACA;AACA;AACO,IAAM+D,YAAY,GAAG,SAAfA,YAAY,CAAIrE,EAAE;EAAA,oCAAKiE,IAAI;IAAJA,IAAI;EAAA;EAAA,OAAK,UAAAlF,CAAC,EAAI;IAChD,uCACKA,CAAC,2BACHiB,EAAE,CAAC9P,IAAI,EAAG;MAAA,OAAM8P,EAAE,eAAIiE,IAAI,CAAC;IAAA;EAEhC,CAAC;AAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,IAAMK,eAAe,GAAG,SAAlBA,eAAe,CAAInT,OAAO,EAAE6R,IAAI;EAAA,OAAK,UAAAjE,CAAC,EAAI;IACrD,IAAIA,CAAC,CAAC5N,OAAO,CAAC,IAAI,CAACwR,KAAK,CAAClB,IAAI,CAACuB,IAAI,EAAEjE,CAAC,CAAC5N,OAAO,CAAC,CAAC,EAAE;MAC/C,MAAM,IAAImK,KAAK,mBAAYnK,OAAO,EAAG;IACvC;IACA,OAAOA,OAAO;EAChB,CAAC;AAAA;;AAED;AACA;AACA;AACA;AACA;AACO,IAAMoT,WAAW,GAAG,SAAdA,WAAW,CAAIhL,KAAK,EAAEyJ,IAAI,EAAK;EAC1C,IAAIzJ,KAAK,IAAI,CAACoJ,KAAK,CAAClB,IAAI,CAACuB,IAAI,EAAEzJ,KAAK,CAAC,EAAE;IACrC,IAAMT,CAAC,GAAGkK,IAAI,YAAYxB,MAAM,GAAGjI,KAAK,GAAGyJ,IAAI;IAC/C,MAAM,IAAI1H,KAAK,WAAIxC,CAAC,cAAW;EACjC;AACF,CAAC;;AAED;AACA;AACA;AACO,IAAM0L,mBAAmB,GAAG9C,iBAAiB,CAClD,wCAAwC,EACxC,sBAAsB,EACtB,qBAAqB,EACrB,kBAAkB,EAClB,eAAe,EACf,wBAAwB,EACxB,2CAA2C,EAC3C,gBAAgB,EAChB,QAAQ,EACR,wBAAwB,EACxB,aAAa,CACd;;AAED;AACA;AACA;AACA,IAAMxE,YAAY,GAAG,CAACsH,mBAAmB,CAAC;AAE1C,iEAAetH,YAAY,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxvBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACZ;AAAA;AAAA;AACoC;AACO;AACD;AACR;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMuH,WAAW,GAAG,aAAa;AACjC,IAAMC,UAAU,GAAG,YAAY;AAC/B,IAAMC,OAAO,GAAG,SAAS;AAElB,IAAMhR,WAAW,GAAG;EACzBiR,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACO,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAaC,SAAS,EAAE;EAC5C,OACE,OAAOA,SAAS,CAACC,MAAM,KAAK,QAAQ,IAAI,OAAOD,SAAS,CAAC3H,KAAK,KAAK,QAAQ;AAE/E,CAAC;;AAED;AACA;AACA;AACO,IAAM6H,UAAU,GAAG,SAAbA,UAAU,CAAaC,UAAU,EAAE;EAC9C,IAAI,CAACA,UAAU,IAAIA,UAAU,CAAC5I,MAAM,GAAG,CAAC,EAAE;IACxC,MAAM,IAAInB,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACA,IAAMgK,KAAK,GAAG9J,KAAK,CAACC,OAAO,CAAC4J,UAAU,CAAC,GAAGA,UAAU,GAAG,CAACA,UAAU,CAAC;EAEnE,IAAIC,KAAK,CAAC7I,MAAM,GAAG,CAAC,IAAI6I,KAAK,CAAC5S,KAAK,CAACuS,SAAS,CAAC,EAAE;IAC9C,OAAOK,KAAK;EACd;EACA,MAAM,IAAIhK,KAAK,CAAC,qBAAqB,EAAE;IAAEgK,KAAK,EAALA;EAAM,CAAC,CAAC;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACO,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAaF,UAAU,EAAE;EAC7C,IAAMC,KAAK,GAAGF,UAAU,CAACC,UAAU,CAAC;EAEpC,OAAOC,KAAK,CAACrK,MAAM,CAAC,UAACuK,KAAK,EAAEC,IAAI,EAAK;IACnC,IAAMC,GAAG,GAAGD,IAAI,CAACC,GAAG,IAAI,CAAC;IACzB,OAAQF,KAAK,IAAIC,IAAI,CAAClI,KAAK,GAAGmI,GAAG;EACnC,CAAC,EAAE,CAAC,CAAC;AACP,CAAC;;AAED;AACA;AACA;AACA;AACO,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAaN,UAAU,EAAE;EAC7C,OAAOA,UAAU,CAACpK,MAAM,CAAC,UAACuK,KAAK,EAAEC,IAAI;IAAA,OAAMD,KAAK,IAAIC,IAAI,CAACC,GAAG,IAAI,CAAC;EAAA,CAAC,CAAC;AACrE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,IAAMtS,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAGjC,OAAO;EAAA,OAAI,UAAA4N,CAAC;IAAA,OAC1CA,CAAC,CAAC0F,WAAW,IAAI1F,CAAC,CAAC0F,WAAW,KAAK9Q,WAAW,CAACiR,OAAO,GAAGzT,OAAO,GAAG,IAAI;EAAA;AAAA;AAEzE,IAAMyU,WAAW,GAAG,SAAdA,WAAW,CAAG/N,MAAM;EAAA,OACxB,CAAClE,WAAW,CAACoR,QAAQ,EAAEpR,WAAW,CAACqR,QAAQ,CAAC,CAAChD,QAAQ,CAACnK,MAAM,CAAC;AAAA;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACO,IAAMxE,kBAAkB,GAAG,SAArBA,kBAAkB,CAAGlC,OAAO;EAAA,OAAI,UAAA4N,CAAC;IAAA,OAC5C6G,WAAW,CAAC7G,CAAC,CAAC0F,WAAW,CAAC,GAAG,IAAI,GAAGtT,OAAO;EAAA;AAAA;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACO,IAAM8B,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAG9B,OAAO;EAAA,OAAI,UAAA4N,CAAC;IAAA,OAAKA,CAAC,CAACvC,UAAU,GAAG,IAAI,GAAGrL,OAAO;EAAA,CAAC;AAAA;;AAE/E;AACA;AACA;AACA;AACO,IAAM+B,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAG/B,OAAO;EAAA,OAAI,UAAA4N,CAAC;IAAA,OAC7CA,CAAC,CAAC0F,WAAW,KAAK9Q,WAAW,CAACkR,QAAQ,GAAG1T,OAAO,GAAG,IAAI;EAAA;AAAA;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACO,IAAMgC,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAGhC,OAAO;EAAA,OAAI,UAAA4N,CAAC;IAAA,OAC/CA,CAAC,CAAC0F,WAAW,KAAK9Q,WAAW,CAACoR,QAAQ,GAAG5T,OAAO,GAAG,IAAI;EAAA;AAAA;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,IAAM0U,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,IAAI,EAAEC,EAAE;EAAA,OAAK,UAAChH,CAAC,EAAEqE,OAAO;IAAA,OACnDA,OAAO,KAAK2C,EAAE,IAAIhH,CAAC,CAAChB,8CAAS,CAAC,CAAC0G,WAAW,KAAKqB,IAAI;EAAA;AAAA;AAErD,IAAME,oBAAoB,GAAG;AAC3B;AACAH,mBAAmB,CAAClS,WAAW,CAACkR,QAAQ,EAAElR,WAAW,CAACiR,OAAO,CAAC;AAC9D;AACAiB,mBAAmB,CAAClS,WAAW,CAACmR,QAAQ,EAAEnR,WAAW,CAACiR,OAAO,CAAC;AAC9D;AACAiB,mBAAmB,CAAClS,WAAW,CAACmR,QAAQ,EAAEnR,WAAW,CAACkR,QAAQ,CAAC;AAC/D;AACAgB,mBAAmB,CAAClS,WAAW,CAACiR,OAAO,EAAEjR,WAAW,CAACmR,QAAQ,CAAC;AAC9D;AACAe,mBAAmB,CAAClS,WAAW,CAACiR,OAAO,EAAEjR,WAAW,CAACoR,QAAQ,CAAC;AAC9D;AACAc,mBAAmB,CAAClS,WAAW,CAACoR,QAAQ,EAAEpR,WAAW,CAACiR,OAAO,CAAC,EAC9DiB,mBAAmB,CAAClS,WAAW,CAACoR,QAAQ,EAAEpR,WAAW,CAACmR,QAAQ,CAAC,EAC/De,mBAAmB,CAAClS,WAAW,CAACoR,QAAQ,EAAEpR,WAAW,CAACkR,QAAQ,CAAC,EAC/DgB,mBAAmB,CAAClS,WAAW,CAACoR,QAAQ,EAAEpR,WAAW,CAACqR,QAAQ,CAAC;AAC/D;AACAa,mBAAmB,CAAClS,WAAW,CAACqR,QAAQ,EAAErR,WAAW,CAACiR,OAAO,CAAC,EAC9DiB,mBAAmB,CAAClS,WAAW,CAACqR,QAAQ,EAAErR,WAAW,CAACmR,QAAQ,CAAC,EAC/De,mBAAmB,CAAClS,WAAW,CAACqR,QAAQ,EAAErR,WAAW,CAACkR,QAAQ,CAAC,EAC/DgB,mBAAmB,CAAClS,WAAW,CAACqR,QAAQ,EAAErR,WAAW,CAACoR,QAAQ,CAAC,CAChE;;AAED;AACA;AACA;AACO,IAAMnR,iBAAiB,GAAG,SAApBA,iBAAiB,CAAImL,CAAC,EAAEqE,OAAO,EAAK;EAC/C,IAAI4C,oBAAoB,CAAC5E,IAAI,CAAC,UAAA6E,CAAC;IAAA,OAAIA,CAAC,CAAClH,CAAC,EAAEqE,OAAO,CAAC;EAAA,EAAC,EAAE;IACjD,MAAM,IAAI9H,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACO,IAAMzH,eAAe,GAAG,SAAlBA,eAAe,CAAIkL,CAAC,EAAEqE,OAAO;EAAA,OACxCmC,SAAS,CAACxG,CAAC,CAACsG,UAAU,CAAC,KAAKjC,OAAO;AAAA;;AAErC;AACA;AACA;AACA;AACA;AACO,IAAM5P,WAAW,GAAG,SAAdA,WAAW,CAAIuL,CAAC,EAAEqE,OAAO;EAAA,OAAM;IAC1CsB,UAAU,EAAEa,SAAS,CAACnC,OAAO;EAC/B,CAAC;AAAA,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACO,IAAM3P,eAAe,GAAG,SAAlBA,eAAe,CAAIsL,CAAC,EAAEqE,OAAO;EAAA,OAAM;IAC9C8C,iBAAiB,EAAEX,SAAS,CAACnC,OAAO,CAAC,GAAG,MAAM,IAAIrE,CAAC,CAACmH;EACtD,CAAC;AAAA,CAAC;;AAEF;AACA;AACA;AACO,SAASpS,aAAa,CAAE2E,KAAK,EAAE;EACpC,IACE,CAAC,CAAC9E,WAAW,CAACoR,QAAQ,EAAEpR,WAAW,CAACqR,QAAQ,CAAC,CAAChD,QAAQ,CAACvJ,KAAK,CAACgM,WAAW,CAAC,EACzE;IACA,MAAM,IAAInJ,KAAK,CAAC,qCAAqC,CAAC;EACxD;EACA,OAAO7C,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS0N,WAAW,CAAE5K,KAAK,EAAE+E,KAAK,EAAE5D,IAAI,EAAE;EACxC,IAAM0J,MAAM,GAAG;IAAE1J,IAAI,EAAJA,IAAI;IAAEiI,OAAO,EAAErE,KAAK,CAACqE,OAAO;IAAEpJ,KAAK,EAALA;EAAM,CAAC;EACtD,IAAI+E,KAAK,EAAEA,KAAK,CAAC+F,IAAI,CAAC,YAAY,EAAED,MAAM,CAAC;EAE3C,MAAM,IAAI9K,KAAK,CAACkD,IAAI,CAACE,SAAS,CAAC0H,MAAM,CAAC,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACO,SAAelQ,gBAAgB;EAAA;AAAA;;AAWtC;AACA;AACA;AACA;AACA;AAJA;EAAA,+EAXO;IAAA;MAAA;MAAA;MAAA;MAAA;IAAA;MAAA;QAAA;UAAA;YAAiCkF,OAAO,8DAAG,CAAC,CAAC;YAAEC,OAAO,8DAAG,CAAC,CAAC;YACjDiF,KAAK,GAAKlF,OAAO,CAAxB3C,KAAK;YACPH,OAAO,GAAG6C,uDAAY,CAC1B,kBAAkB,EAClBC,OAAO,EACPC,OAAO,EACPnF,gBAAgB,CAAChG,IAAI,CACtB;YAAA,kCACMoQ,KAAK,CAAC/M,MAAM,iCAAM+E,OAAO;cAAEmM,WAAW,EAAE9Q,WAAW,CAACoR;YAAQ,GAAG;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACvE;EAAA;AAAA;AAOM,SAAevP,YAAY;EAAA;AAAA;;AAclC;AACA;AACA;AACA;AAHA;EAAA,2EAdO;IAAA;MAAA;MAAA;MAAA;MAAA;IAAA;MAAA;QAAA;UAAA;YAA6B4F,OAAO,8DAAG,CAAC,CAAC;YAAEC,OAAO,8DAAG,CAAC,CAAC;YAC7CiF,KAAK,GAAKlF,OAAO,CAAxB3C,KAAK;YACP6N,eAAe,GAAGnL,uDAAY,CAClC,YAAY,EACZC,OAAO,EACPC,OAAO,EACP7F,YAAY,CAACtF,IAAI,CAClB;YAAA,kCACMoQ,KAAK,CAAC/M,MAAM,CAAC;cAClBgT,UAAU,EAAED,eAAe,CAACC,UAAU;cACtC9B,WAAW,EAAE9Q,WAAW,CAACmR;YAC3B,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACH;EAAA;AAAA;AAMM,SAAe9P,WAAW;EAAA;AAAA;;AAWjC;AACA;AACA;AACA;AACA;AAJA;EAAA,0EAXO;IAAA;MAAA;MAAA;MAAA;MAAA;IAAA;MAAA;QAAA;UAAA;YAA4BoG,OAAO,8DAAG,CAAC,CAAC;YAAEC,OAAO,8DAAG,CAAC,CAAC;YAC5CiF,KAAK,GAAKlF,OAAO,CAAxB3C,KAAK;YACPH,OAAO,GAAG6C,uDAAY,CAC1B,eAAe,EACfC,OAAO,EACPC,OAAO,EACPmL,gBAAgB,CAACtW,IAAI,CACtB;YAAA,kCACMoQ,KAAK,CAAC/M,MAAM,CAAC+E,OAAO,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC7B;EAAA;AAAA;AAOM,SAAekO,gBAAgB;EAAA;AAAA;;AAWtC;AACA;AACA;AACA;AACA;AAJA;EAAA,+EAXO;IAAA;MAAA;MAAA;MAAA;MAAA;IAAA;MAAA;QAAA;UAAA;YAAiCpL,OAAO,8DAAG,CAAC,CAAC;YAAEC,OAAO,8DAAG,CAAC,CAAC;YACjDiF,KAAK,GAAKlF,OAAO,CAAxB3C,KAAK;YACPgO,cAAc,GAAGtL,uDAAY,CACjC,iBAAiB,EACjBC,OAAO,EACPC,OAAO,EACPmL,gBAAgB,CAACtW,IAAI,CACtB;YAAA,kCACMoQ,KAAK,CAAC/M,MAAM,CAAC;cAAE0I,eAAe,EAAEwK,cAAc,CAACxK;YAAgB,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACzE;EAAA;AAAA;AAOM,SAAeyK,iBAAiB;EAAA;AAAA;;AAWvC;AACA;AACA;AACA;AACA;AACA;AALA;EAAA,gFAXO;IAAA;MAAA;MAAA;MAAA;MAAA;IAAA;MAAA;QAAA;UAAA;YAAkCtL,OAAO,8DAAG,CAAC,CAAC;YAAEC,OAAO,8DAAG,CAAC,CAAC;YAClDiF,KAAK,GAAKlF,OAAO,CAAxB3C,KAAK;YACPH,OAAO,GAAG6C,uDAAY,CAC1B,eAAe,EACfC,OAAO,EACPC,OAAO,EACPqL,iBAAiB,CAACxW,IAAI,CACvB;YAAA,kCACMoQ,KAAK,CAAC/M,MAAM,iCAAM+E,OAAO;cAAEqO,aAAa,EAAbA;YAAa,IAAI,KAAK,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC1D;EAAA;AAAA;AAQM,SAAexQ,aAAa;EAAA;AAAA;;AAanC;AACA;AACA;AACA;AACA;AAJA;EAAA,4EAbO,kBAA8BmK,KAAK;IAAA;MAAA;QAAA;UAAA;YACxC;YACAA,KAAK,CAACnK,aAAa,CAAC,UAACiF,OAAO,EAAEC,OAAO,EAAK;cACxC,IAAM/C,OAAO,GAAG6C,uDAAY,CAC1B,eAAe,EACfC,OAAO,EACPC,OAAO,EACPlF,aAAa,CAACjG,IAAI,CACnB;cACD,OAAOoQ,KAAK,CAAC/M,MAAM,iCAAM+E,OAAO;gBAAEmM,WAAW,EAAE9Q,WAAW,CAACqR;cAAQ,GAAG;YACxE,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACH;EAAA;AAAA;AAAA,SAOc4B,aAAa;EAAA;AAAA;AAQ5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;EAAA,4EARA,mBAA8BtG,KAAK;IAAA;MAAA;QAAA;UAAA;YACjC7Q,OAAO,CAACC,KAAK,CAAC;cACZsQ,EAAE,EAAE4G,aAAa,CAAC1W,IAAI;cACtBoE,eAAe,EAAEgM,KAAK,CAAChM;YACzB,CAAC,CAAC;YAAA,mCACKgM,KAAK,CAAChM,eAAe,CAACkS,gBAAgB,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC/C;EAAA;AAAA;AAAA,SAYcK,aAAa;EAAA;AAAA;AAkB5B;AACA;AACA;AACA;AACA;AACA;AALA;EAAA,4EAlBA,mBAA8BvG,KAAK;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAKFA,KAAK,CAAC5L,gBAAgB,CAACgS,iBAAiB,CAAC;UAAA;YAAhEI,cAAc;YAAA,IAEfA,cAAc,CAACC,eAAe;cAAA;cAAA;YAAA;YAAA,MAC3B,IAAIzL,KAAK,CAAC,kBAAkB,CAAC;UAAA;YAAA,mCAG9BwL,cAAc;UAAA;YAAA;YAAA;YAErBX,WAAW,gBAAI7F,KAAK,EAAEuG,aAAa,CAAC3W,IAAI,CAAC;UAAA;YAAA,mCAEpCoQ,KAAK;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACb;EAAA;AAAA;AAAA,SAQc0G,eAAe;EAAA;AAAA;AAgB9B;AACA;AACA;AACA;AACA;AACA;AACA;AANA;EAAA,8EAhBA,mBAAgC1G,KAAK;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACXA,KAAK,CAAC1J,SAAS,EAAE;UAAA;YAAnCA,SAAS;YAAA,MACXA,SAAS,CAAC6F,MAAM,GAAG,CAAC;cAAA;cAAA;YAAA;YAAA,MAAQ,IAAInB,KAAK,CAAC,kBAAkB,CAAC;UAAA;YAEvD2L,YAAY,GAAG3G,KAAK,CAAC+E,UAAU,CAACvI,MAAM,CAAC,UAAA2I,IAAI,EAAI;cACnD,IAAMyB,GAAG,GAAGtQ,SAAS,CAAC+E,IAAI,CAAC,UAAAsK,CAAC;gBAAA,OAAIA,CAAC,CAACzW,EAAE,KAAKiW,IAAI,CAACN,MAAM;cAAA,EAAC;cACrD,IAAI,CAAC+B,GAAG,EAAE,OAAO,IAAI;cACrB,IAAIA,GAAG,CAACpJ,QAAQ,GAAG2H,IAAI,CAACC,GAAG,EAAE,OAAO,IAAI;cACxC,OAAO,KAAK;YACd,CAAC,CAAC;YAAA,MAEEuB,YAAY,CAACxK,MAAM,GAAG,CAAC;cAAA;cAAA;YAAA;YACzB6D,KAAK,CAAC+F,IAAI,CAAC,iBAAiB,EAAEY,YAAY,CAAC;YAAA,MACrC,IAAI3L,KAAK,gCAAyB2L,YAAY,CAACpM,GAAG,CAAC,UAAAoL,CAAC;cAAA,OAAIA,CAAC,CAACd,MAAM;YAAA,EAAC,EAAG;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAE7E;EAAA;AAAA;AAAA,SAQcgC,gBAAgB;EAAA;AAAA;AAiC/B;AACA;AACA;AACA;AACA;AACA;AACA;AANA;EAAA,+EAjCA,mBAAiC7G,KAAK;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,KAEhCA,KAAK,CAAC9D,UAAU;cAAA;cAAA;YAAA;YAClB,IAAI,CAAC8D,KAAK,CAACxO,QAAQ,EAAE;cACnBrC,OAAO,CAACgI,GAAG,CAAC;gBAAE6I,KAAK,EAALA;cAAM,CAAC,CAAC;YACxB;YACA;YAAA;YAAA,OACuBA,KAAK,CAACxO,QAAQ,EAAE;UAAA;YAAjCA,QAAQ;YAAA,IAETA,QAAQ;cAAA;cAAA;YAAA;YAAA,MACL,IAAIwJ,KAAK,CAAC,qBAAqB,EAAEgF,KAAK,CAAC9D,UAAU,CAAC;UAAA;YAG1D;YACM4K,QAAQ,mCAAQtV,QAAQ,CAACJ,OAAO,EAAE;cAAEqK,SAAS,EAAEjK,QAAQ,CAACiK;YAAS;YAAA;YAAA,OAClDuE,KAAK,CAAC/M,MAAM,CAAC6T,QAAQ,CAAC;UAAA;YAArC7T,MAAM;YAEZ9D,OAAO,CAAC4X,IAAI,CAAC,+CAA+C,EAAED,QAAQ,CAAC;YAAA,mCAChE7T,MAAM;UAAA;YAAA,KAIX+M,KAAK,CAACgH,mBAAmB;cAAA;cAAA;YAAA;YACrBF,SAAQ,mCAAQ9G,KAAK,CAAC5O,OAAO,EAAE;cAAEqK,SAAS,EAAEuE,KAAK,CAACvE;YAAS;YAAA;YAAA,OAC1CuE,KAAK,CAACxO,QAAQ,CAACsV,SAAQ,CAAC;UAAA;YAAzCtV,SAAQ;YAEdrC,OAAO,CAAC4X,IAAI,CAAC,0CAA0C,EAAEvV,SAAQ,CAAC;YAAA,mCAC3DwO,KAAK;UAAA;YAAA,mCAGPA,KAAK;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACb;EAAA;AAAA;AASD,IAAMiH,mBAAmB,GAAGC,wDAAS,CACnCL,gBAAgB,EAChBH,eAAe,EACfH,aAAa,EACbD,aAAa,CACd;;AAED;AACA;AACA;AACA;AACA;AACA,IAAMa,YAAY,uDASf9T,WAAW,CAACiR,OAAO,EAAG,UAAAtE,KAAK,EAAI;EAC9B;;EAEA,IAAIA,KAAK,CAACoH,YAAY,EACpB;IACAP,gBAAgB,CAAC7G,KAAK,CAAC,CAAC1E,IAAI,CAAC,UAAA0E,KAAK;MAAA,OAChCqH,gBAAgB,CACdrH,KAAK,CAACsH,UAAU,CAAC;QAAEnD,WAAW,EAAE9Q,WAAW,CAACkR;MAAS,CAAC,CAAC,CACxD;IAAA,EACF;AACL,CAAC,kCASAlR,WAAW,CAACkR,QAAQ,EAAG,UAAAvE,KAAK,EAAI;EAC/B,IAAI;IACF;IACA,OAAOA,KAAK,CAACxL,SAAS,CAACE,WAAW,CAAC;;IAEnC;IACA;EACF,CAAC,CAAC,OAAOuG,KAAK,EAAE;IACd9L,OAAO,CAACgI,GAAG,CAAC;MAAE8D,KAAK,EAALA;IAAM,CAAC,CAAC;IACtB4K,WAAW,CAAC5K,KAAK,EAAE+E,KAAK,EAAE3M,WAAW,CAACkR,QAAQ,CAAC;EACjD;EACA,OAAOvE,KAAK;AACd,CAAC,kCAOA3M,WAAW,CAACmR,QAAQ;EAAA,sEAAG,iBAAMxE,KAAK;IAAA;MAAA;QAAA;UAAA;YAAA;YAE/BA,KAAK,CAACxK,aAAa,CAAC+R,cAAc,CAAC;YACnCpY,OAAO,CAACC,KAAK,CAAC;cAAEgN,IAAI,EAAE/I,WAAW,CAACmR,QAAQ;cAAExE,KAAK,EAALA;YAAM,CAAC,CAAC;YAAA;YAAA,OACvCA,KAAK,CAAC/M,MAAM,CAAC;cAAEkR,WAAW,EAAE9Q,WAAW,CAACmR;YAAS,CAAC,CAAC;UAAA;YAAA;YAAA,qBAAEuB,IAAI,CACpE,aAAa;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAGfF,WAAW,cAAQ7F,KAAK,EAAE3M,WAAW,CAACmR,QAAQ,CAAC;UAAA;YAAA,iCAE1CxE,KAAK;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACb;EAAA;IAAA;EAAA;AAAA,qCAOA3M,WAAW,CAACqR,QAAQ;EAAA,uEAAG,kBAAM1E,KAAK;IAAA;MAAA;QAAA;UAAA;YAAA;YAE/B7Q,OAAO,CAACC,KAAK,CAAC;cACZgN,IAAI,EAAE/I,WAAW,CAACqR,QAAQ;cAC1BhT,IAAI,EAAE,8BAA8B;cACpC2S,OAAO,EAAErE,KAAK,CAACqE;YACjB,CAAC,CAAC;YAAA,kCACKrE,KAAK,CAAC1L,IAAI,EAAE;UAAA;YAAA;YAAA;YAEnBuR,WAAW,eAAQ7F,KAAK,EAAE3M,WAAW,CAACqR,QAAQ,CAAC;UAAA;YAAA,kCAE1C1E,KAAK;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACb;EAAA;IAAA;EAAA;AAAA,qCAMA3M,WAAW,CAACoR,QAAQ;EAAA,uEAAG,kBAAMzE,KAAK;IAAA;MAAA;QAAA;UAAA;YACjC;YACA7Q,OAAO,CAACgI,GAAG,CAAC,4DAA4D,CAAC;YAAA,kCAClE6I,KAAK;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACb;EAAA;IAAA;EAAA;AAAA,oBACF;;AAED;AACA;AACA;AACA;AACA;AACO,SAASqH,gBAAgB,CAAErH,KAAK,EAAE;EACvC7Q,OAAO,CAACgI,GAAG,CAAC;IAAEgN,WAAW,EAAEnE,KAAK,CAACmE;EAAY,CAAC,CAAC;EAC/CgD,YAAY,CAACnH,KAAK,CAACmE,WAAW,CAAC,CAACnE,KAAK,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACO,SAAStM,gBAAgB,QAAwC;EAAA,IAA7BsM,KAAK,SAAZ7H,KAAK;IAASqP,SAAS,SAATA,SAAS;IAAExP,OAAO,SAAPA,OAAO;EAClE,IAAIA,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEmM,WAAW,IAAIqD,SAAS,KAAK,QAAQ,EAAE;IAClD;IACAH,gBAAgB,CAACrH,KAAK,CAAC;EACzB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASyH,cAAc,CAAE9H,KAAK,EAAEyE,UAAU,EAAE;EAC1C,OAAO,OAAOzE,KAAK,KAAK,SAAS,GAAGA,KAAK,GAAGyE,UAAU,GAAG,MAAM;AACjE;;AAEA;AACA,SAASsD,UAAU,CAAEjQ,OAAO,EAAExG,IAAI,EAAE;EAClC,IAAM0W,GAAG,GAAG,OAAOlQ,OAAO,KAAK,QAAQ,GAAGA,OAAO,GAAGyG,IAAI,CAACE,SAAS,CAAC3G,OAAO,CAAC;EAE3E,OAAO;IACL/F,IAAI,EAAEiW,GAAG,CAACC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;IAC3B3W,IAAI,EAAJA,IAAI;IACJ4H,IAAI,EAAER,IAAI,CAACC,GAAG,EAAE;IAChBuP,MAAM,oBAAI;MACR,OAAO;QACLnW,IAAI,EAAE,IAAI,CAACA,IAAI;QACfT,IAAI,EAAJA,IAAI;QACJ4H,IAAI,EAAE,IAAIR,IAAI,CAAC,IAAI,CAACQ,IAAI,CAAC,CAACiP,WAAW;MACvC,CAAC;IACH;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAStV,gBAAgB,CAAEvC,YAAY,EAAE;EAC9C,OAAO,SAAS8X,WAAW,QAcxB;IAAA;IAAA,IAbDhD,UAAU,SAAVA,UAAU;MAAA,oBACVhJ,KAAK;MAALA,KAAK,4BAAG,IAAI;MAAA,uBACZL,QAAQ;MAARA,QAAQ,+BAAG,IAAI;MAAA,wBACfD,SAAS;MAATA,SAAS,gCAAG,IAAI;MAAA,yBAChBS,UAAU;MAAVA,UAAU,iCAAG,IAAI;MAAA,6BACjBL,cAAc;MAAdA,cAAc,qCAAG,IAAI;MAAA,8BACrBF,eAAe;MAAfA,eAAe,sCAAG,IAAI;MAAA,8BACtBC,gBAAgB;MAAhBA,gBAAgB,sCAAG,IAAI;MAAA,8BACvBoM,gBAAgB;MAAhBA,gBAAgB,sCAAG,IAAI;MAAA,2BACvBZ,YAAY;MAAZA,aAAY,mCAAG,KAAK;MAAA,8BACpBJ,mBAAmB;MAAnBA,mBAAmB,sCAAG,KAAK;MAC3BiB,gBAAgB,SAAhBA,gBAAgB;MAAA,wBAChB1P,SAAS;MAATA,SAAS,gCAAG,EAAE;IAEd;IACA,IAAMyH,KAAK;MACTjE,KAAK,EAALA,KAAK;MACLL,QAAQ,EAARA,QAAQ;MACRD,SAAS,EAATA,SAAS;MACTS,UAAU,EAAVA,UAAU;MACV6I,UAAU,EAAVA,UAAU;MACVnJ,gBAAgB,EAAhBA,gBAAgB;MAChBC,cAAc,EAAdA,cAAc;MACdF,eAAe,EAAfA,eAAe;MACfiK,iBAAiB,EAAE,KAAK;MACxBoB,mBAAmB,EAAnBA,mBAAmB;MACnBgB,gBAAgB,EAAhBA,gBAAgB;MAChBzP,SAAS,EAATA,SAAS;MACTjB,MAAM,EAAE,CAAC;MACTuB,IAAI,EAAE,CAAC;MACPqP,gBAAgB,EAAE,IAAI;MACtB/Q,GAAG,EAAE,CAACuQ,UAAU,CAAC,eAAe,CAAC;IAAC,2BACjCtD,UAAU,EAAG,CAAC,2BACdD,WAAW,EAAG9Q,WAAW,CAACiR,OAAO,2BACjCD,OAAO,EAAGpU,YAAY,CAACC,IAAI,EAAE,mCACxB,cAAc,qCACZ,IAAI,yEAIO;MACjB,OAAO,IAAI;IACb,CAAC,mEAIe;MACd,OAAOkX,aAAY;IACrB,CAAC,+DACa;MACZ,OAAO/B,SAAS,CAAC,IAAI,CAACN,UAAU,CAAC;IACnC,CAAC,qDACQ;MACP,OAAOE,SAAS,CAAC,IAAI,CAACF,UAAU,CAAC;IACnC,CAAC,uDACQI,IAAI,EAAE;MACb,IAAIR,SAAS,CAACQ,IAAI,CAAC,EAAE;QACnB,IAAI,CAACJ,UAAU,CAACoD,IAAI,CAAChD,IAAI,CAAC;QAC1B,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,yDACS1N,OAAO,EAAiB;MAAA,IAAfxG,IAAI,uEAAG,MAAM;MAC9B,IAAI,CAACkG,GAAG,CAACgR,IAAI,CAACT,UAAU,CAACjQ,OAAO,EAAExG,IAAI,CAAC,CAAC;IAC1C,CAAC,yDACSwG,OAAO,EAAE;MACjB,IAAI,CAAC2Q,QAAQ,CAAC3Q,OAAO,EAAE,OAAO,CAAC;IACjC,CAAC,uDACQA,OAAO,EAAE;MAChB,IAAI,CAAC2Q,QAAQ,CAAC3Q,OAAO,EAAE,MAAM,CAAC;IAChC,CAAC,qEACeA,OAAO,EAAE;MACvB,IAAI,CAAC2Q,QAAQ,CAAC3Q,OAAO,EAAE,aAAa,CAAC;IACvC,CAAC,8DAOuC;MAAA,wBAA7B4Q,KAAK;QAALA,KAAK,4BAAG,IAAI;QAAA,mBAAEpX,IAAI;QAAJA,IAAI,2BAAG,IAAI;MAClC,IAAMqX,IAAI,GAAGC,QAAQ,CAACF,KAAK,CAAC;MAC5B,IAAIC,IAAI,GAAG,IAAI,CAACnR,GAAG,CAACgF,MAAM,IAAImM,IAAI,KAAKE,GAAG,EAAE,OAAO,IAAI,CAACrR,GAAG,CAACmR,IAAI,CAAC;MACjE,IAAIrX,IAAI,KAAK,OAAO,EAAE,OAAO,IAAI,CAACkG,GAAG,CAAC,CAAC,CAAC;MACxC,IAAIlG,IAAI,KAAK,MAAM,EAAE,OAAO,IAAI,CAACkG,GAAG,CAAC,IAAI,CAACA,GAAG,CAACgF,MAAM,GAAG,CAAC,CAAC;MACzD,IAAIlL,IAAI,KAAK,iBAAiB,EAC5B,OAAO,IAAI,CAACkG,GAAG,CAAC,IAAI,CAACA,GAAG,CAACsR,WAAW,CAAC;QAAExX,IAAI,EAAE;MAAc,CAAC,CAAC,CAAC;MAChE,IAAIA,IAAI,KAAK,cAAc,EACzB,OAAO,IAAI,CAACkG,GAAG,CAACqF,MAAM,CAAC,UAAAkM,CAAC;QAAA,OAAIA,CAAC,CAACzX,IAAI,KAAK,aAAa;MAAA,EAAC;MACvD,IAAIA,IAAI,KAAK,OAAO,EAAE,OAAO,IAAI,CAACkG,GAAG,CAACqF,MAAM,CAAC,UAAAkM,CAAC;QAAA,OAAIA,CAAC,CAACzX,IAAI,KAAK,OAAO;MAAA,EAAC;MACrE,IAAIA,IAAI,KAAK,MAAM,EAAE,OAAO,IAAI,CAACkG,GAAG,CAACqF,MAAM,CAAC,UAAAkM,CAAC;QAAA,OAAIA,CAAC,CAACzX,IAAI,KAAK,MAAM;MAAA,EAAC;MACnE,OAAO,IAAI,CAACkG,GAAG;IACjB,CAAC,UACF;IAED,OAAO/D,MAAM,CAAC6I,MAAM,CAAC+D,KAAK,CAAC;EAC7B,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACO,SAAe/H,OAAO;EAAA;AAAA;;AAa7B;AACA;AACA;AACA;AAHA;EAAA,sEAbO,mBAAwB+H,KAAK;IAAA;IAAA;MAAA;QAAA;UAAA;YAClC7Q,OAAO,CAACC,KAAK,CAAC;cAAEuY,GAAG,EAAE,WAAW;cAAE3H,KAAK,EAALA;YAAM,CAAC,CAAC;YACpC2I,aAAa,GAAG3I,KAAK,CAACsH,UAAU,CACpC;cACEnD,WAAW,EAAE9Q,WAAW,CAACkR;YAC3B,CAAC,EACD,KAAK,CACN;YACDpV,OAAO,CAACC,KAAK,CAAC;cAAEuZ,aAAa,EAAbA;YAAc,CAAC,CAAC;YAChCA,aAAa,CAACC,cAAc,CAACvV,WAAW,CAACkR,QAAQ,CAAC;YAAA,mCAC3C8C,gBAAgB,CAACsB,aAAa,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACvC;EAAA;AAAA;AAMM,SAAepT,MAAM;EAAA;AAAA;;AAQ5B;AACA;AACA;AACA;AACA;AAJA;EAAA,qEARO,mBAAuByK,KAAK;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACLA,KAAK,CAAC/M,MAAM,CAAC;cACvCkR,WAAW,EAAE9Q,WAAW,CAACqR;YAC3B,CAAC,CAAC;UAAA;YAFImE,aAAa;YAGnBA,aAAa,CAACD,cAAc,CAACvV,WAAW,CAACqR,QAAQ,CAAC;YAAA,mCAC3C2C,gBAAgB,CAACwB,aAAa,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACvC;EAAA;AAAA;AAOM,SAAeC,QAAQ;EAAA;AAAA;;AAI9B;AACA;AACA;AACA;AAHA;EAAA,uEAJO,mBAAyB9I,KAAK;IAAA;MAAA;QAAA;UAAA;YAAA,mCAC5B/H,OAAO,CAAC+H,KAAK,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACtB;EAAA;AAAA;AAMM,SAAS+I,aAAa,QAAiC;EAAA,IAA7BvO,IAAI,SAAJA,IAAI;IAASwF,KAAK,SAAZ7H,KAAK;IAAS8C,KAAK,SAALA,KAAK;EACxD,IAAM6K,MAAM;IAAK7K,KAAK,EAALA,KAAK;IAAET,IAAI,EAAJA;EAAI,YAAES,KAAK,CAAE;EACrC9L,OAAO,CAAC8L,KAAK,CAAC8N,aAAa,CAACnZ,IAAI,EAAEkW,MAAM,CAAC;EACzC9F,KAAK,CAACoI,QAAQ,CAACtC,MAAM,CAAC;EACtB9F,KAAK,CAAC+F,IAAI,CAACgD,aAAa,CAACnZ,IAAI,EAAEkW,MAAM,CAAC;EACtC,OAAO9F,KAAK,CAAC1L,IAAI,EAAE;AACrB;;AAEA;AACA;AACA;AACA;AACO,SAAS0U,eAAe,QAA4C;EAAA,IAAxCxO,IAAI,SAAJA,IAAI;IAAE7G,KAAK,SAALA,KAAK;IAAEsV,SAAS,SAATA,SAAS;IAASjJ,KAAK,SAAZ7H,KAAK;EAC9DhJ,OAAO,CAAC8L,KAAK,CAAC,YAAY,EAAET,IAAI,CAAC;EACjC;EACAwF,KAAK,CAAC+F,IAAI,CAACiD,eAAe,CAACpZ,IAAI,EAAEkW,MAAM,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAenR,eAAe;EAAA;AAAA;;AAOrC;AACA;AACA;AACA;AACA;AACA;AALA;EAAA,8EAPO,mBAAgCqL,KAAK;IAAA;MAAA;QAAA;UAAA;YAC1C7Q,OAAO,CAACgI,GAAG,CAACxC,eAAe,CAAC/E,IAAI,CAAC;YACjCoQ,KAAK,CAACoI,QAAQ,CAACzT,eAAe,CAAC/E,IAAI,EAAE,SAAS,CAAC;YAC/CoQ,KAAK,CAAC+F,IAAI,CAACpR,eAAe,CAAC/E,IAAI,EAAEkW,MAAM,CAAC;YAAA,mCACjC9F,KAAK,CAAC/M,MAAM,CAAC;cAAEkR,WAAW,EAAE9Q,WAAW,CAACqR;YAAS,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC3D;EAAA;AAAA;AAQM,SAAevP,cAAc;EAAA;AAAA;AAInC;EAAA,6EAJM,mBAA+B6K,KAAK;IAAA;MAAA;QAAA;UAAA;YACzC7Q,OAAO,CAACgI,GAAG,CAAChC,cAAc,CAACvF,IAAI,CAAC;YAChCoQ,KAAK,CAACkJ,OAAO,CAAC/T,cAAc,CAACvF,IAAI,CAAC;YAAA,mCAC3BoQ,KAAK,CAAC/M,MAAM,CAAC;cAAEkR,WAAW,EAAE9Q,WAAW,CAACqR;YAAS,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC3D;EAAA;AAAA;AAEM,SAASyE,YAAY,CAAEvS,GAAG,EAAEC,GAAG,EAAE,CAAC;AACzC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,SAAenB,cAAc;EAAA;AAAA;;AAKpC;AACA;AACA;AAFA;EAAA,6EALO,mBAA+BsK,KAAK;IAAA;MAAA;QAAA;UAAA;YACzC7Q,OAAO,CAACgI,GAAG,CAACzB,cAAc,CAAC9F,IAAI,CAAC;YAAA,mCACzBoQ,KAAK,CAAC/M,MAAM,CAAC;cAAEkR,WAAW,EAAE9Q,WAAW,CAACqR;YAAS,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC3D;EAAA;AAAA;AAKM,SAAenQ,aAAa;EAAA;AAAA;AAGlC;EAAA,4EAHM,mBAA8ByL,KAAK;IAAA;MAAA;QAAA;UAAA;YACxC7Q,OAAO,CAACgI,GAAG,CAAC5C,aAAa,CAAC3E,IAAI,CAAC;YAAA,mCACxBoQ,KAAK,CAAC/M,MAAM,CAAC;cAAEkR,WAAW,EAAE9Q,WAAW,CAACqR;YAAS,CAAC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAC3D;EAAA;AAAA;AAEM,IAAM9M,UAAU;EAAA;EAAA;EACrB,oBAAaqD,KAAK,EAAEmO,IAAI,EAAE;IAAA;IAAA;IACxB,0BAAMnO,KAAK;IACX,MAAKmO,IAAI,GAAGA,IAAI;IAAA;EAClB;EAAC;AAAA,iCAJ6BpO,KAAK;;AAOrC;AACA;AACA;AACA;AACA;AACO,SAAejF,YAAY;EAAA;AAAA;;AAqBlC;AACA;AACA;AACA;AACA;AAJA;EAAA,2EArBO,mBAA6BsT,IAAI;IAAA;IAAA;MAAA;QAAA;UAAA;YAChCC,qBAAqB,GAAG,IAAIC,6CAAS,CAAC;cAC1CC,UAAU,EAAE,IAAI;cAChBC,SAAS,EAAE,mBAACC,KAAK,EAAEC,SAAS,EAAEC,IAAI,EAAK;gBACrC,IAAIF,KAAK,CAACG,GAAG,EAAE,OAAOH,KAAK,CAACG,GAAG;gBAC/BD,IAAI,CACF,IAAI,EACJ1L,IAAI,CAACE,SAAS,iCAAMsL,KAAK;kBAAEvF,WAAW,EAAE9Q,WAAW,CAACqR;gBAAQ,GAAG,CAChE;cACH;YACF,CAAC,CAAC;YAAA;YAAA,OAEI,IAAI,CAACoF,IAAI,CAAC;cACd/S,QAAQ,EAAE,IAAI,CAACgT,iBAAiB,EAAE;cAClCN,SAAS,EAAEH,qBAAqB;cAChCtS,SAAS,EAAE;YACb,CAAC,CAAC;UAAA;YAAA,mCAEK;cAAEO,MAAM,EAAE;YAAK,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACxB;EAAA;AAAA;AAQM,SAAetB,aAAa;EAAA;AAAA;;AA2BnC;AACA;AACA;AACA;AAHA;EAAA,4EA3BO,mBAA8BoT,IAAI;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAErCla,OAAO,CAACgI,GAAG,CAACqB,CAAC,CAAC;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA,MAER,IAAIZ,UAAU,gBAAQ,GAAG,CAAC;UAAA;YAG5BoS,sBAAsB,GAAG,IAAIT,6CAAS,CAAC;cAC3CC,UAAU,EAAE,IAAI;cAChBC,SAAS,EAAE,mBAACC,KAAK,EAAEC,SAAS,EAAEC,IAAI,EAAK;gBACrC,IAAIF,KAAK,CAACG,GAAG,EAAE,OAAOH,KAAK,CAACG,GAAG;gBAC/BD,IAAI,CACF,IAAI,EACJ1L,IAAI,CAACE,SAAS,iCAAMsL,KAAK;kBAAEvF,WAAW,EAAE9Q,WAAW,CAACkR;gBAAQ,GAAG,CAChE;cACH;YACF,CAAC,CAAC;YAAA;YAAA,OAEI,IAAI,CAACuF,IAAI,CAAC;cACd/S,QAAQ,EAAE,IAAI,CAACgT,iBAAiB,EAAE;cAClCN,SAAS,EAAEO,sBAAsB;cACjChT,SAAS,EAAE;YACb,CAAC,CAAC;UAAA;YAAA,mCAEK;cAAEO,MAAM,EAAE;YAAK,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACxB;EAAA;AAAA;AAMM,SAAerB,iBAAiB;EAAA;AAAA;AAwBtC;EAAA,gFAxBM;IAAA;IAAA;MAAA;QAAA;UAAA;YACCwB,GAAG,GAAG,IAAI,CAACuS,UAAU,EAAE;YACvBC,GAAG,GAAG,eAAe;YACrBC,SAAS,GAAG9R,IAAI,CAACC,GAAG,EAAE;YAAA;YAAA,OAEtB,IAAI8R,OAAO,CAAC,UAAAC,OAAO;cAAA,OAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC;YAAA,EAAC;UAAA;YAEtD;YACA;YACA;;YAEA3S,GAAG,CAACoH,GAAG,CAACoL,GAAG,EAAE7R,IAAI,CAACC,GAAG,EAAE,GAAG6R,SAAS,CAAC;YAE9BI,MAAM,GAAG;cACbC,SAAS,EAAE9S,GAAG,CAACf,GAAG,CAAC,IAAI,CAAC;cACxB+I,EAAE,EAAExJ,iBAAiB,CAACtG,IAAI;cAC1B6a,QAAQ,EAAE/S,GAAG,CAACf,GAAG,CAACuT,GAAG,CAAC;cACtBvS,OAAO,qBAAMD,GAAG;YAClB,CAAC;YAED,IAAI,CAACqO,IAAI,CAAC,QAAQ,EAAEwE,MAAM,CAAC;YAC3Bpb,OAAO,CAACgI,GAAG,CAACoT,MAAM,CAAC7S,GAAG,CAAC;YAAA,mCAEhB6S,MAAM;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACd;EAAA;AAAA;AAEM,SAAepU,gBAAgB;EAAA;AAAA;AAQrC;EAAA,+EARM,mBAAiCkT,IAAI;IAAA;MAAA;QAAA;UAAA;YAAA,KACtCA,IAAI,CAAC1F,IAAI,CAACyF,IAAI;cAAA;cAAA;YAAA;YAAA,MACV,IAAIxR,UAAU,CAACyR,IAAI,CAAC1F,IAAI,CAAClM,OAAO,IAAI,eAAe,EAAE4R,IAAI,CAAC1F,IAAI,CAACyF,IAAI,CAAC;UAAA;YAAA;YAE1Eja,OAAO,CAACgI,GAAG,CAACqB,CAAC,CAAC;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA,MAER,IAAIZ,UAAU,gBAAQ,GAAG,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAEnC;EAAA;AAAA;AAEM,SAAexB,gBAAgB;EAAA;AAAA;AAGrC;EAAA,+EAHM,mBAAiCiT,IAAI;IAAA;MAAA;QAAA;UAAA;YAC1C,IAAI,CAAC7S,IAAI,EAAE;YAAA,mCACJ;cAAEe,MAAM,EAAE;YAAK,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACxB;EAAA;AAAA;AAED,SAASgB,SAAS,CAAEC,CAAC,EAAE;EACrB,IAAIA,CAAC,KAAK,CAAC,EAAE;IACX,OAAO,CAAC;EACV;EACA,IAAIA,CAAC,KAAK,CAAC,EAAE;IACX,OAAO,CAAC;EACV;EACA,OAAOD,SAAS,CAACC,CAAC,GAAG,CAAC,CAAC,GAAGD,SAAS,CAACC,CAAC,GAAG,CAAC,CAAC;AAC5C;AAEO,SAAenC,cAAc;EAAA;AAAA;AASnC;EAAA,6EATM,mBAA+BgT,IAAI;IAAA;IAAA;MAAA;QAAA;UAAA;YACxCla,OAAO,CAACgI,GAAG,CAAC;cAAEkS,IAAI,EAAJA;YAAK,CAAC,CAAC;YACf5Q,KAAK,GAAG8P,QAAQ,CAACc,IAAI,CAAC1F,IAAI,CAACpL,SAAS,IAAI,EAAE,CAAC;YAC3CH,KAAK,GAAGC,IAAI,CAACC,GAAG,EAAE;YAAA,mCACjB;cACLC,SAAS,EAAEE,KAAK;cAChBnB,MAAM,EAAEiB,SAAS,CAACE,KAAK,CAAC;cACxBI,IAAI,EAAER,IAAI,CAACC,GAAG,EAAE,GAAGF;YACrB,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACF;EAAA;AAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACt9BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAAA;AAAA,+CAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcmB;AACc;AACF;AAE/B,IAAMsS,QAAQ,GAAG,iBAAiB;AAClC,IAAMC,WAAW,GAAG,WAAW;AAC/B,IAAMC,YAAY,GAAG,kBAAkB;AACvC,IAAMC,YAAY,GAAG,gBAAgB;AAErC,IAAMC,SAAS,GAAG,OAAO,CAAC3J,IAAI,CAACxS,OAAO,CAACC,GAAG,CAACmc,MAAM,CAAC;AAClD,IAAMC,QAAQ,GAAG,OAAO,CAAC7J,IAAI,CAACxS,OAAO,CAACC,GAAG,CAACqc,MAAM,CAAC;AACjD,IAAM7b,KAAK,GAAG,OAAO,CAAC+R,IAAI,CAACxS,OAAO,CAACC,GAAG,CAACsc,KAAK,CAAC;AAC7C,IAAMC,WAAW,GAAG,KAAK;AACzB,IAAMC,UAAU,GAAG,OAAO,CAACjK,IAAI,CAACxS,OAAO,CAACC,GAAG,CAACyc,WAAW,CAAC;AACxD,IAAMC,SAAS,GAAG3c,OAAO,CAACC,GAAG,CAAC2c,IAAI,IAAI,EAAE;AACxC,IAAMC,UAAU,GAAG7c,OAAO,CAACC,GAAG,CAAC6c,QAAQ,IAAI,GAAG;AAC9C,IAAMC,UAAU,GAAGN,UAAU,GAAGI,UAAU,GAAGF,SAAS;AACtD,IAAMK,WAAW,GAAGP,UAAU,GAAG,KAAK,GAAG,IAAI;AAC7C,IAAMQ,UAAU,GAAGjd,OAAO,CAACC,GAAG,CAACid,MAAM,IAAIC,kDAAW,EAAE;AACtD,IAAMC,KAAK,GAAGjB,SAAS,GAAGa,WAAW,GAAGhd,OAAO,CAACC,GAAG,CAACod,YAAY;AAChE,IAAMxR,IAAI,GAAGsQ,SAAS,GAAGY,UAAU,GAAG/c,OAAO,CAACC,GAAG,CAACqd,WAAW;AAC7D,IAAMC,IAAI,GAAGpB,SAAS,GAAGc,UAAU,GAAGjd,OAAO,CAACC,GAAG,CAACud,WAAW;AAC7D,IAAMC,QAAQ,GAAG,OAAO,CAACjL,IAAI,CAACxS,OAAO,CAACC,GAAG,CAACyd,eAAe,CAAC;AAC1D,IAAMC,QAAQ,GAAGlB,UAAU,GAAG,OAAO,GAAG,MAAM;AAC9C,IAAMmB,MAAM,aAAMD,QAAQ,gBAAMV,UAAU,cAAIF,UAAU,CAAE;AAE1D,SAASc,UAAU,GAAI;EACrB,IAAMld,GAAG,aAAMyc,KAAK,gBAAMG,IAAI,cAAI1R,IAAI,CAAE;EACxC,IAAIuR,KAAK,IAAIG,IAAI,IAAI1R,IAAI,EAAE,OAAOlL,GAAG;EACrC,IAAIwb,SAAS,EAAE,MAAM,IAAI9P,KAAK,uBAAgB1L,GAAG,EAAG;EACpD,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACO,IAAMmd,iBAAiB;EAAA;EAAA;EAC5B,2BAAaC,IAAI,EAAE;IAAA;IAAA;IACjB,0BAAM,WAAW;IACjB,MAAKpd,GAAG;IACR,MAAKod,IAAI,GAAGA,IAAI;IAChB,MAAK9c,IAAI,GAAG+a,WAAW;IACvB,MAAKG,SAAS,GAAGA,SAAS;IAC1B,MAAKE,QAAQ,GAAGA,QAAQ;IACxB,MAAK2B,IAAI,GAAG,IAAI;IAChB,MAAKC,cAAc,GAAG,IAAI;IAC1B,MAAKC,OAAO,GAAG;MACb,kBAAkB,EAAEf,kDAAW,EAAE;MACjC,kBAAkB,EAAE,MAAM;MAC1B,iBAAiB,EAAEnd,OAAO,CAACme;IAC7B,CAAC;IAAA;EACH;;EAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,qBAAa;MACX,OAAO;QACLC,SAAS,EAAE,WAAW;QACtBhB,KAAK,EAAE,IAAI,CAACnc,IAAI;QAChB2c,MAAM,EAANA,MAAM;QACNpB,WAAW,EAAXA,WAAW;QACX6B,QAAQ,EAAElB,kDAAW,EAAE;QACvBmB,IAAI,EAAE,MAAM;QACZH,GAAG,EAAEne,OAAO,CAACme,GAAG;QAChBI,SAAS,gDACJve,OAAO,CAACwe,WAAW,EAAE,GACrBxe,OAAO,CAACye,QAAQ,EAAE,GAClBC,WAAW,CAACC,UAAU,CAC1B;QACDhT,QAAQ,EAAE,IAAI,CAACoS,IAAI,CAACa,YAAY,EAAE;QAClCC,WAAW,EAAE,IAAI,CAACd,IAAI,CAAC7S,eAAe,EAAE,IAAI;MAC9C,CAAC;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA;IAAA;MAAA,6EAMA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,IAAI,CAAC6S,IAAI,CAACpT,kBAAkB,CAAC;kBACjCkT,UAAU,EAAEA,UAAU,EAAE;kBACxB5c,IAAI,EAAE,IAAI,CAACA,IAAI;kBACf6d,OAAO,EAAE,IAAI,CAAC3C,SAAS;kBACvB4C,MAAM,EAAE,IAAI,CAAC1C;gBACf,CAAC,CAAC;cAAA;gBAAA,KACE,IAAI,CAACF,SAAS;kBAAA;kBAAA;gBAAA;gBAAA;gBAAA,OACV,IAAI,CAAC4B,IAAI,CAAClT,oBAAoB,EAAE;cAAA;gBAAA,iCAC/BgT,UAAU,EAAE;cAAA;gBAAA,iCAEdJ,QAAQ,GAAGI,UAAU,EAAE,GAAG,IAAI,CAACE,IAAI,CAACnT,iBAAiB,EAAE;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAC/D;MAAA;QAAA;MAAA;MAAA;IAAA;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA;IAAA;MAAA,0EAUA;QAAA;QAAA;UAAA;QAAA;UAAA;YAAA;cAAA;gBAAeuB,OAAO,8DAAG;kBAAE6S,MAAM,EAAE;gBAAK,CAAC;gBACvC,IAAI,CAAC7S,OAAO,GAAGA,OAAO;gBAAA;gBAAA,OACL,IAAI,CAAC8S,UAAU,EAAE;cAAA;gBAAlC,IAAI,CAACte,GAAG;gBAER,IAAI,CAACod,IAAI,CAACjT,gBAAgB,CAAC,IAAI,CAACnK,GAAG,EAAE;kBACnCue,KAAK,EAAE,KAAK;kBACZhB,OAAO,EAAE,IAAI,CAACA,OAAO;kBACrBiB,QAAQ,EAAEnD,WAAW;kBACrBoD,SAAS,EAAEjT,OAAO,CAAC6S;gBACrB,CAAC,CAAC;gBAEF,IAAI,CAACjB,IAAI,CAAC1S,eAAe,CAAC,YAAM;kBAC9B7K,OAAO,CAACgI,GAAG,CAAC,iBAAiB,CAAC;kBAC9B,MAAI,CAAC6W,IAAI,CAAC,MAAI,CAACd,SAAS,EAAE,CAAC;kBAC3B,MAAI,CAACe,SAAS,EAAE;kBAChB3D,UAAU,CAAC;oBAAA,OAAM,MAAI,CAAC4D,cAAc,EAAE;kBAAA,GAAE,IAAI,CAAC;gBAC/C,CAAC,CAAC;gBAEF,IAAI,CAACxB,IAAI,CAACzS,kBAAkB,CAAC,UAAAxC,OAAO,EAAI;kBACtC,IAAI,CAACA,OAAO,CAACsV,SAAS,EAAE;oBACtB3d,KAAK,IAAID,OAAO,CAACC,KAAK,CAAC;sBAAE+e,gBAAgB,EAAE1W;oBAAQ,CAAC,CAAC;oBACrD,MAAI,CAACsO,IAAI,CAAC,kBAAkB,EAAEtO,OAAO,CAAC;oBACtC;kBACF;kBACA,IAAI;oBACF,MAAI,CAACsO,IAAI,CAACtO,OAAO,CAACsV,SAAS,EAAEtV,OAAO,CAAC;oBACrC,MAAI,CAAC2W,SAAS,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,UAAAC,QAAQ;sBAAA,OAAIA,QAAQ,CAAC7W,OAAO,CAAC;oBAAA,EAAC;kBAC5D,CAAC,CAAC,OAAOwD,KAAK,EAAE;oBACd9L,OAAO,CAAC8L,KAAK,CAAC;sBAAEyE,EAAE,EAAE,MAAI,CAAC6O,OAAO,CAAC3e,IAAI;sBAAEqL,KAAK,EAALA;oBAAM,CAAC,CAAC;kBACjD;gBACF,CAAC,CAAC;gBAEF,IAAI,CAACyR,IAAI,CAACxS,gBAAgB,CAAC,UAAAe,KAAK,EAAI;kBAClC,MAAI,CAAC8K,IAAI,CAAC8E,YAAY,EAAE5P,KAAK,CAAC;kBAC9B9L,OAAO,CAAC8L,KAAK,CAAC;oBAAEyE,EAAE,EAAE,MAAI,CAAC6O,OAAO,CAAC3e,IAAI;oBAAEqL,KAAK,EAALA;kBAAM,CAAC,CAAC;gBACjD,CAAC,CAAC;gBAEF,IAAI,CAACyR,IAAI,CAAC3S,gBAAgB,CAAC,UAACqP,IAAI,EAAEoF,MAAM,EAAK;kBAC3Crf,OAAO,CAACgI,GAAG,CAAC;oBACVwQ,GAAG,EAAE,sBAAsB;oBAC3ByB,IAAI,EAAJA,IAAI;oBACJoF,MAAM,EAAEA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,QAAQ;kBAC1B,CAAC,CAAC;kBACFC,YAAY,CAAC,MAAI,CAAC9B,cAAc,CAAC;kBACjCtC,UAAU,CAAC,YAAM;oBACfnb,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;oBAC9C,MAAI,CAACmf,OAAO,EAAE;kBAChB,CAAC,EAAE,IAAI,CAAC;gBACV,CAAC,CAAC;gBAEF,IAAI,CAAC7B,IAAI,CAACvS,eAAe,CAAC;kBAAA,OAAO,MAAI,CAACwS,IAAI,GAAG,IAAI;gBAAA,CAAC,CAAC;gBACnD,IAAI,CAACgC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC7a,OAAO,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACnC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OAED,mBAAW;MAAA;MACT3E,OAAO,CAACuL,IAAI,CAAC,SAAS,CAAC;MACvB,IAAI,CAACqL,IAAI,CAAC6E,YAAY,EAAE,IAAI,CAACsC,SAAS,EAAE,CAAC;MACzC,IAAI,CAACR,IAAI,CAAC5S,kBAAkB,EAAE;MAC9BwQ,UAAU,CAAC,YAAM;QACfnb,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;QACzC,MAAI,CAACmf,OAAO,EAAE;MAChB,CAAC,EAAE,IAAI,CAAC;IACV;EAAC;IAAA;IAAA,OAED,qBAAa;MAAA;MACX,IAAI,IAAI,CAAC5B,IAAI,EAAE;QACb,IAAI,CAACA,IAAI,GAAG,KAAK;QACjB,IAAI,CAACD,IAAI,CAAChT,aAAa,EAAE;QACzB,IAAI,CAACkT,cAAc,GAAGtC,UAAU,CAAC;UAAA,OAAM,MAAI,CAAC2D,SAAS,EAAE;QAAA,GAAE9C,WAAW,CAAC;MACvE,CAAC,MAAM;QACLuD,YAAY,CAAC,IAAI,CAAC9B,cAAc,CAAC;QACjC,IAAI,CAAC7G,IAAI,CAAC,SAAS,CAAC;MACtB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA;IAAA,OASA,cAAM4B,GAAG,EAAE;MACT,IAAMiH,IAAI,GAAG,IAAI,CAAClC,IAAI,CAAC/S,aAAa,CAACgO,GAAG,EAAE;QACxCkF,OAAO,kCACF,IAAI,CAACA,OAAO;UACf,iBAAiB,EAAE1c,8CAAM;QAAE;MAE/B,CAAC,CAAC;MACF,IAAIye,IAAI,EAAE,OAAO,IAAI;MACrB,IAAI,CAAClC,IAAI,CAACmC,OAAO,CAAClH,GAAG,CAAC;MACtB,OAAO,KAAK;IACd;;IAEA;AACF;AACA;EAFE;IAAA;IAAA,OAGA,0BAAkB;MAChB,IAAIiH,IAAI,GAAG,IAAI;MACf,OAAO,IAAI,CAAClC,IAAI,CAACoC,UAAU,EAAE,GAAG,CAAC,IAAIF,IAAI;QACvCA,IAAI,GAAG,IAAI,CAACZ,IAAI,CAAC,IAAI,CAACtB,IAAI,CAACqC,OAAO,EAAE,CAAC;MAAA;IACzC;;IAEA;AACF;AACA;AACA;EAHE;IAAA;IAAA,OAIA,iBAASpH,GAAG,EAAE;MACZ,OAAO,IAAI,CAACqG,IAAI,CAACrG,GAAG,CAAC;IACvB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,mBAAWoF,SAAS,EAAEtY,QAAQ,EAAE;MAC9B,IAAI,CAACsE,EAAE,CAACgU,SAAS,EAAEtY,QAAQ,CAAC;IAC9B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA;IAAA;MAAA,wEAQA,kBAAa2U,IAAI,EAAEoF,MAAM;QAAA;UAAA;YAAA;cAAA;gBACvBrf,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;gBAAA;gBAAA,OACzB,IAAI,CAACsd,IAAI,CAACsC,IAAI,EAAE;cAAA;gBAAC;gBACvB,IAAI,CAACC,kBAAkB,EAAE;gBACzB,IAAI,CAACvC,IAAI,CAAC9S,cAAc,CAACwP,IAAI,EAAEoF,MAAM,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACvC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EA9MoCU,+CAAY;;AAiNnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS9V,UAAU,CAAEnJ,YAAY,EAAE;EACxC,IAAIkf,MAAM;EACV,OAAO,gBAA4B;IAAA,IAAhB5B,YAAY,QAAZA,YAAY;IAC7B,OAAO;MACLA,YAAY,EAAZA,YAAY;MACZ6B,SAAS,EAAE,EAAE;MACbC,YAAY,EAAE,IAAI;MAElBP,UAAU,wBAAI;QACZ,OAAO,IAAI,CAACM,SAAS,CAACjT,MAAM;MAC9B,CAAC;MAED0S,OAAO,mBAAElH,GAAG,EAAE;QACZ,IAAI,CAACyH,SAAS,CAACjH,IAAI,CAACR,GAAG,CAAC;MAC1B,CAAC;MAEDoH,OAAO,qBAAI;QACT,OAAO,IAAI,CAACK,SAAS,CAACE,KAAK,EAAE;MAC/B,CAAC;MAEDC,SAAS,uBAAI;QACX,IAAIJ,MAAM,EAAE,OAAOA,MAAM;QACzBA,MAAM,GAAG,IAAI1C,iBAAiB,CAAC,IAAI,CAAC;QACpC,OAAO0C,MAAM;MACf,CAAC;MAEKZ,OAAO,mBAAEzT,OAAO,EAAE;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;kBACtB,MAAI,CAACyU,SAAS,EAAE,CAAChB,OAAO,CAACzT,OAAO,CAAC;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;MACnC,CAAC;MAEK0U,OAAO,mBAAErQ,KAAK,EAAE;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;kBACpB,MAAI,CAACoQ,SAAS,EAAE,CAACC,OAAO,CAACrQ,KAAK,CAAC;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;MACjC,CAAC;MAEDsQ,SAAS,qBAAE1C,SAAS,EAAE2C,OAAO,EAAE;QAC7B,IAAI,CAACH,SAAS,EAAE,CAACE,SAAS,CAAC1C,SAAS,EAAE2C,OAAO,CAAC;MAChD,CAAC;MAEKC,KAAK,iBAAEvG,IAAI,EAAEoF,MAAM,EAAE;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;kBACzB,MAAI,CAACe,SAAS,EAAE,CAACI,KAAK,CAACvG,IAAI,EAAEoF,MAAM,CAAC;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;MACtC;IACF,CAAC;EACH,CAAC;AACH,C","file":"829.js","sourcesContent":["'use strict'\n\nfunction getSecret () {\n  return process.env.MONGODB_CREDS || { user: null, pass: null, token: null }\n}\n\nfunction archive (id) {\n  console.debug('mock archive', id)\n}\n\n/**\n * Datasource adapter factory.\n * @param {string} url database url\n * @param {number} [cacheSize] number of models to keep in cache\n * @param {*} DataSource base class that enables caching\n * @returns {import(\"./datasource\").default}\n */\nexport const DataSourceAdapterMongoDb = function (\n  url,\n  cacheSize,\n  DataSourceMongoDb\n) {\n  /**\n   * MongoDB adapter extends in-memory datasource to support caching.\n   * The cache is always updated first, which allows the system to run\n   * even when the database is offline.\n   */\n  class DataSourceMongoDbArchive extends DataSourceMongoDb {\n    constructor (datasource, factory, name) {\n      super(datasource, factory, name)\n      this.url = url\n      this.cacheSize = cacheSize\n      this.creds = getSecret()\n    }\n\n    /**\n     * @override\n     */\n    delete (id) {\n      console.debug('archive', id)\n      archive(id)\n    }\n  }\n\n  return DataSourceMongoDbArchive\n}\n","'use strict'\n\nimport {\n  validateModel,\n  freezeProperties,\n  validateProperties,\n  requireProperties\n} from '../domain/mixins'\nimport { makeCustomerFactory, okToDelete } from '../domain/customer'\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport { nanoid } from 'nanoid'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Customer = {\n  modelName: 'customer',\n  endpoint: 'customers',\n  dependencies: { uuid: () => nanoid(8) },\n  factory: makeCustomerFactory,\n  validate: validateModel,\n  onDelete: okToDelete,\n  mixins: [\n    freezeProperties('customerId'),\n    requireProperties(\n      'firstName',\n      'lastName',\n      'email',\n      'shippingAddress',\n      'billingAddress',\n      'creditCardNumber'\n    ),\n    validateProperties([\n      {\n        propKey: 'email',\n        // unique: { encrypted: true },\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      }\n    ])\n  ],\n  relations: {\n    orders: {\n      modelName: 'order',\n      type: 'oneToMany',\n      foreignKey: 'customerId'\n    }\n  },\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    }\n  },\n  accessControlList: {\n    customer: {\n      allow: 'read',\n      type: 'relation',\n      desc: 'Allow orders to see customers.'\n    }\n  }\n}\n","export * from './webswitch' // always export this\nexport * from './order'\nexport * from './inventory'\nexport * from './customer'\n\n// export * from './user'\n// export * from './query-engine'\n// export * from './dam-api'\n// export * from './ticket-master'\n// export * from './access-controller'\n","'use strict'\n\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport {\n  makeInventoryFactory,\n  assetTypes,\n  properties,\n  categories\n} from '../domain/inventory'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  validateProperties\n} from '../domain/mixins'\n\n/**\n * @type {import(\"../domain/order\").ModelSpecification}\n */\nexport const Inventory = {\n  modelName: 'inventory',\n  endpoint: 'inventory',\n  dependencies: {},\n  factory: makeInventoryFactory,\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: 'mongodb://127.0.0.1:27017',\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceMongoDb'\n  // },\n  mixins: [\n    requireProperties('name', 'inStock', 'category', 'price', 'purchaseOrder'),\n    validateProperties([\n      {\n        propKey: 'inStock',\n        typeof: 'number',\n        maxnum: 99999\n      },\n      {\n        propKey: 'category',\n        values: categories\n      },\n      {\n        propKey: 'assetType',\n        values: assetTypes\n      },\n      {\n        propKey: 'properties',\n        isValid: (_obj, prop) => prop.every(p => properties.includes(p))\n      },\n      {\n        propKey: 'price',\n        typeof: 'number',\n        maxnum: 999.99\n      }\n    ]),\n    freezeProperties('*')\n  ],\n  relations: {\n    orders: {\n      modelName: 'order',\n      type: 'oneToMany',\n      foreignKey: 'itemId',\n      desc: 'many items per order'\n    }\n  }\n}\n","'use strict'\n\nimport {\n  makeOrderFactory,\n  readyToDelete,\n  handleOrderEvent,\n  orderShipped,\n  paymentCompleted,\n  OrderStatus,\n  recalcTotal,\n  requiredForCompletion,\n  statusChangeValid,\n  freezeOnApproval,\n  freezeOnCompletion,\n  orderTotalValid,\n  returnInventory,\n  returnShipment,\n  refundPayment,\n  returnDelivery,\n  cancelPayment,\n  updateSignature,\n  requiredForGuest,\n  requiredForApproval,\n  approve,\n  cancel,\n  accountOrder,\n  OrderError,\n  orderPicked\n} from '../domain/order'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  updateProperties,\n  validateProperties,\n  validateModel,\n  allowProperties\n} from '../domain/mixins'\nimport { nanoid } from 'nanoid'\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Order = {\n  modelName: 'order',\n  endpoint: 'orders',\n  factory: makeOrderFactory,\n  domain: 'order',\n  datasource: {\n    factory: DataSourceAdapterMongoDb,\n    url: 'mongodb://127.0.0.1:27017',\n    cacheSize: 4000,\n    baseClass: 'DataSourceMongoDb'\n  },\n  dependencies: { uuid: () => nanoid(8) },\n  mixins: [\n    requireProperties(\n      'orderItems',\n      requiredForGuest([\n        'lastName',\n        'firstName',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'email'\n      ]),\n      requiredForApproval('paymentStatus'),\n      requiredForCompletion('proofOfDelivery')\n    ),\n    freezeProperties(\n      'orderNo',\n      'customerId',\n      freezeOnApproval([\n        'email',\n        'lastName',\n        'firstName',\n        'orderItems',\n        'orderTotal',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'paymentStatus'\n      ]),\n      freezeOnCompletion('*')\n    ),\n    updateProperties([\n      {\n        propKey: 'orderItems',\n        update: recalcTotal\n      },\n      {\n        propKey: 'orderItems',\n        update: updateSignature\n      }\n    ]),\n    validateProperties([\n      {\n        propKey: 'orderStatus',\n        values: Object.values(OrderStatus),\n        isValid: statusChangeValid\n      },\n      {\n        propKey: 'orderTotal',\n        maxnum: 99999.99,\n        isValid: orderTotalValid\n      },\n      {\n        propKey: 'email',\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      },\n      {\n        propKey: 'phone',\n        regex: 'phone'\n      }\n    ])\n    // allowProperties([fibonacci, time, result])\n  ],\n  validate: validateModel,\n  onDelete: readyToDelete,\n  eventHandlers: [handleOrderEvent],\n  ports: {\n    listen: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    notify: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    validateAddress: {\n      service: 'Address',\n      type: 'outbound',\n      keys: 'shippingAddress',\n      producesEvent: 'addressValidated',\n      disabled: true\n    },\n    authorizePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      keys: 'paymentStatus',\n      consumesEvent: 'startWorkflow',\n      producesEvent: 'paymentAuthorized',\n      undo: cancelPayment,\n      disabled: true\n    },\n    pickOrder: {\n      service: 'Inventory',\n      type: 'outbound',\n      keys: 'pickupAddress',\n      callback: orderPicked,\n      consumesEvent: 'itemsAvailable',\n      producesEvent: 'orderPicked',\n      undo: returnInventory,\n      circuitBreaker: {\n        portTimeout_pickOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 5000\n        }\n      }\n    },\n    shipOrder: {\n      service: 'Shipping',\n      type: 'outbound',\n      callback: orderShipped,\n      consumesEvent: 'orderPicked',\n      producesEvent: 'orderShipped',\n      undo: returnShipment,\n      circuitBreaker: {\n        portTimeout_shipOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        },\n        portRetryFailed_order: {\n          callVolume: 3,\n          errorRate: 2,\n          intervalMs: 60000,\n          fallbackFn: cancel\n        },\n        default: {\n          callVolume: 3,\n          errorRate: 3,\n          intervalMs: 60000\n        }\n      }\n    },\n    trackShipment: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: ['trackingStatus', 'trackingId'],\n      consumesEvent: 'orderShipped',\n      producesEvent: 'orderDelivered',\n      circuitBreaker: {\n        portRetryFailed_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    verifyDelivery: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: 'proofOfDelivery',\n      consumesEvent: 'orderDelivered',\n      producesEvent: 'deliveryVerified',\n      undo: returnDelivery\n    },\n    completePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      callback: paymentCompleted,\n      consumesEvent: 'deliveryVerified',\n      producesEvent: 'orderComplete',\n      undo: refundPayment\n    },\n    cancelShipment: {\n      service: 'Shipping',\n      type: 'outbound'\n    },\n    refundPayment: {\n      service: 'Payment',\n      type: 'outbound'\n    },\n    cancelOrders: {\n      service: 'Order',\n      type: 'inbound',\n      timeout: 0,\n      methods: ['post']\n    },\n    approveOrders: {\n      service: 'Order',\n      type: 'inbound',\n      timeout: 0,\n      methods: ['patch']\n    },\n    trackAsyncContext: {\n      service: 'Telemetry',\n      type: 'inbound',\n      timeout: 0\n    },\n    customHttpStatus: {\n      service: 'Telemetry',\n      type: 'inbound',\n      timeout: 0\n    },\n    testContainsMany: {\n      service: 'Inventory',\n      type: 'inbound',\n      timeout: 0\n    },\n    runFibonacciJs: {\n      service: 'Test',\n      type: 'inbound',\n      timeout: 0\n    }\n  },\n  relations: {\n    customer: {\n      modelName: 'customer',\n      type: 'manyToOne',\n      foreignKey: 'customerId',\n      desc: 'Many orders per customer, just one customer per order'\n    },\n    inventory: {\n      modelName: 'inventory',\n      type: 'containsMany',\n      foreignKey: 'itemId',\n      arrayKey: 'orderItems',\n      desc: 'An order contains a list of inventory items to ship.'\n    },\n    chat: {\n      modelName: 'user',\n      type: 'custom',\n      foreignKey: 'userId',\n      desc: 'A custom relation used for integrated chat'\n    }\n  },\n  routes: [\n    {\n      path: '/orders',\n      get: async (req, res, ports) =>\n        ports.listModels({\n          writable: res,\n          serialize: true,\n          query: req.query\n        }),\n\n      post: async (req, res, ports) => {\n        console.log('/orders')\n        try {\n          const result = await ports.addModel(req.body)\n          res\n            .status(200)\n            .json({ message: 'ok', ctx: result.context, id: result.id })\n        } catch (error) {\n          throw new OrderError(error, 404)\n        }\n      }\n    },\n    {\n      path: '/orders/:id',\n      get: async (req, res, ports) =>\n        ports.listModels({\n          writable: res,\n          serialize: true,\n          query: req.query\n        }),\n\n      patch: async (req, res, ports) => {\n        console.log('/orders/:id')\n        try {\n          const result = await ports.editModel({\n            id: req.params.id,\n            changes: req.body\n          })\n          res.status(200).json({ message: 'ok', ctx: result.context })\n        } catch (error) {\n          throw new OrderError(error, 404)\n        }\n      }\n    }\n  ],\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    },\n    approve: {\n      command: approve,\n      acl: ['write', 'approve']\n    },\n    cancel: {\n      command: cancel,\n      acl: ['write', 'cancel']\n    },\n    runFibonacci: {\n      command: model => {\n        const start = Date.now()\n        function fibonacci (x) {\n          if (x === 0) {\n            return 0\n          }\n          if (x === 1) {\n            return 1\n          }\n          return fibonacci(x - 1) + fibonacci(x - 2)\n        }\n        const param = parseFloat(model.fibonacci)\n        return {\n          result: fibonacci(Number.isNaN(param) ? 10 : param),\n          time: Date.now() - start\n        }\n      },\n      acl: ['read', 'write']\n    }\n  },\n  serializers: [\n    {\n      on: 'deserialize',\n      key: 'creditCardNumber',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'shippingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    }\n    // {\n    //   on: 'deserialize',\n    //   key: 'billingAddress',\n    //   type: 'string',\n    //   value: (key, value) => decrypt(value),\n    //   enabled: false\n    // }\n  ]\n}\n","'use strict'\n\nimport { makeClient } from '../domain/webswitch'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const WebSwitch = {\n  modelName: 'webswitch',\n  endpoint: 'service-mesh',\n  factory: makeClient,\n  internal: true,\n  ports: {\n    serviceLocatorInit: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAsk: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAnswer: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketConnect: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketPing: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketSend: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketStatus: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketTerminate: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnOpen: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnMessage: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnError: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnPong: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    }\n  }\n}\n","'use strict'\n\nexport default function makeAdapters (ports, adapters, services) {\n  if (!ports || !adapters) {\n    return\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service])\n        }\n      } catch (e) {\n        console.warn(e.message)\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }))\n}\n","'use strict'\n\n/**\n * Check the payload for expected properties.\n * @param {string|string[]} key name of property or properties\n * @param {*} options\n * @param {*} payload\n * @param {*} port\n */\nexport default function checkPayload (\n  key,\n  options = {},\n  payload = {},\n  port = checkPayload.name\n) {\n  const { model } = options\n\n  if (!model || Object.keys(payload) < 1 || !key) {\n    throw new Error({\n      desc: 'model, payload, or key is missing',\n      model,\n      port,\n      error,\n      payload,\n      key\n    })\n  }\n\n  if (Array.isArray(key)) {\n    const keys = key.map(k => checkPayload(k, options, payload, port))\n\n    return keys.reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  if (payload[key]) {\n    return { [key]: payload[key] }\n  }\n\n  if (model[key]) {\n    return { [key]: model[key] }\n  }\n\n  return model\n    .find()\n    .then(latest => ({ [key]: latest[key] }))\n    .catch(error => {\n      throw new Error('property is missing' + key, port, error, payload, model)\n    })\n}\n","\"use strict\";\n\nexport function makeCustomerFactory(dependencies) {\n  return function createCustomer({\n    firstName,\n    lastName,\n    shippingAddress,\n    creditCardNumber,\n    billingAddress = shippingAddress,\n    phone,\n    email,\n    userId,\n  } = {}) {\n    return Object.freeze({\n      customerId: dependencies.uuid(),\n      firstName,\n      lastName,\n      creditCardNumber,\n      shippingAddress,\n      billingAddress,\n      phone,\n      email,\n      userId,\n    });\n  };\n}\n\nexport async function okToDelete(customer) {\n  try {\n    const orders = await customer.orders();\n    return orders.length > 0;\n  } catch (error) {\n    console.error({ func: okToDelete.name, error });\n    return true;\n  }\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n/**\n * @callback controller\n * @param {Request} req\n * @param {Response} res\n */\n\n/**\n * @typedef {{\n *  [path: string]: {\n *    get?: controller,\n *    post?: controller,\n *    patch?: controller,\n *    delete?:controller\n *   }\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [routes] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\n/**\n * @callback addModel\n * @param {{ searchTerm1, searchTerm2, searchTermN }} input\n * @returns {Promise<Model>}\n */\n\n/**\n * @callback editModel\n * @param {{ id:string, changes:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findModel\n * @param {{ id:string, query:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findRelatedModels\n * @param {{ query:object, relation:string }} input\n * @returns { Promise<{Model,[Model]}> }\n */\n\n/**\n * @callback listModels\n * @param {{ query:object }} input e.g. { searchTerm1 : 'val', ...etc }\n * @returns { [Promise<Model>] }\n */\n\n/**\n * @callback executeCommand\n * @param {{ id:string }} input\n * @returns { Model }\n */\n\n/**\n * @typedef DomainPortAPI\n * @property { addModel } addModel\n * @property { editModel } editModel\n * @property { listModels } listModels\n * @property { findModel } findModel\n * @property { findRelatedModels } findModel\n * @property { removeModel } removeModel\n * @property { executeCommand } executeCommand\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n\n// Service dependencies\nimport * as services from '../services'\nimport * as adapters from '../adapters'\nimport * as ports from '../domain/ports'\n// Models\nimport * as modelSpecs from '../config'\n\n/**\n *\n * @param {ModelSpecification} spec\n */\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","'use strict'\n\nexport const assetTypes = ['rotating-asset', 'spare-part']\nexport const properties = ['height', 'length', 'width', 'weight', 'color']\nexport const categories = ['home', 'auto', 'business']\n\nexport const makeInventoryFactory = dependencies => ({\n  category,\n  properties,\n  price,\n  discount,\n  name,\n  desc,\n  sku,\n  purchaseOrder,\n  vendor,\n  inStock,\n  assetType,\n  quantity\n}) =>\n  Object.freeze({\n    category,\n    properties,\n    price: price - (discount || 0.0),\n    name,\n    desc,\n    sku,\n    purchaseOrder,\n    vendor,\n    inStock,\n    assetType,\n    quantity\n  })\n","'use strict'\n\nimport { hash, encrypt, decrypt, compose } from '../domain/utils'\nimport util from 'util'\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol('prevModel')\n/**\n * private key to access validation config\n */\nexport const validations = Symbol('validations')\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol('pre'),\n  post: Symbol('post')\n}\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol('preUpdateMixins'),\n  [mixinType.post]: Symbol('postUpdateMixins')\n}\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre]\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post]\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate (model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)) // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes\n\n  const updated = { ...model, ...updates }\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins (type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error('invalid mixin type')\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map()\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb())\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet\n    }\n  }\n  return o\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2 //  0100 Load\n}\n\nfunction handleUpdateEvent (model, updates, event) {\n  const isUpdate = eventMask.update & event\n  const decrypted = isUpdate ? model.decrypt() : {}\n  return {\n    ...model,\n    ...updates,\n    ...decrypted\n  }\n}\n\nfunction isObject (p) {\n  return p != null && typeof p === 'object'\n}\n\nfunction containsUpdates (model, changes, event) {\n  try {\n    if (!changes) return false\n    if (eventMask.update & event) {\n      const changeList = Object.keys(changes)\n      if (changeList.length < 1) return false\n\n      if (\n        changeList.every(\n          k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n        )\n      ) {\n        return false\n      }\n    }\n    return true\n  } catch (error) {\n    console.error({ fn: containsUpdates.name, error })\n  }\n  return false\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see {@link eventMask}.\n */\nexport function validateModel (model, changes, event) {\n  if (!model || !changes || !event) return {}\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model\n  }\n\n  // keep a history of the last saved model\n  const input = {\n    ...changes,\n    [prevmodel]: JSON.parse(JSON.stringify(model || {}))\n  }\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input)\n\n  const updated = { ...model, ...updates }\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated)\n}\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent ({ onUpdate = true, onCreate = true, onLoad = false }) {\n  let enabled = 0\n\n  if (onUpdate) {\n    enabled |= eventMask.update\n  }\n  if (onCreate) {\n    enabled |= eventMask.create\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload\n  }\n  return enabled\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate: enableEvent({\n      onUpdate: true,\n      onCreate: false,\n      onLoad: false\n    }),\n    /**\n     * Validation runs on create.\n     */\n    onCreate: enableEvent({\n      onUpdate: false,\n      onCreate: true,\n      onLoad: false\n    }),\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate: enableEvent({\n      onUpdate: true,\n      onCreate: true,\n      onLoad: false\n    }),\n    /**\n     * Validation runs on load.\n     */\n    onLoad: enableEvent({\n      onUpdate: false,\n      onCreate: false,\n      onLoad: true\n    }),\n    /**\n     * Validation runs on load and create.\n     */\n    onLoadAndCreate: enableEvent({\n      onUpdate: false,\n      onCreate: true,\n      onLoad: true\n    }),\n    /**\n     * Validation runs on load and create.\n     */\n    onLoadAndUpdate: enableEvent({\n      onUpdate: true,\n      onCreate: false,\n      onLoad: true\n    }),\n    /**\n     * Validation runs on all events.\n     */\n    onAll: enableEvent({\n      onUpdate: true,\n      onCreate: true,\n      onLoad: true\n    })\n  }\n})()\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation ({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || []\n\n  if (config.some(v => v.name === name)) {\n    console.warn('duplicate validation name', name)\n    return model\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }]\n  }\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys (o, ...propKeys) {\n  if (!propKeys || !o) return null\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === 'function') return k(o)\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key))\n    if (k === '*') return Object.keys(o)\n    return k\n  })\n  return keys.flat()\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    encryptProperties () {\n      return encryptProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    }),\n\n    decrypt () {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }), {})\n    }\n  }\n}\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys)\n\n    const mutations = Object.keys(obj).filter(key => keys.includes(key))\n    if (mutations?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${mutations}`)\n    }\n  }\n\n  return {\n    freezeProperties () {\n      preventUpdates(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20\n    })\n  }\n}\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function requireProps (obj) {\n    const missing = keys.filter(key => key && !obj[key])\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`)\n    }\n  }\n  return {\n    requireProperties () {\n      requireProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 90\n    })\n  }\n}\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function hashPwds (obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    hashPasswords () {\n      return hashPwds(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    })\n  }\n}\n\nconst internalPropList = []\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps () {\n    const keys = parseKeys(o, ...propKeys)\n    const allowList = keys.concat(internalPropList)\n\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key))\n\n    if (unknownProps?.length > 0) {\n      throw new Error(`invalid properties: ${unknownProps}`)\n    }\n  }\n\n  return {\n    rejectUnknownProperties () {\n      return rejectUnknownProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: rejectUnknownProps.name,\n      input: enableValidation.onUpdate,\n      order: 10\n    })\n  }\n}\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test (expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr\n    return _expr.test(val)\n  }\n}\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:numbertp\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness (v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal\n  return o.listSync({ [v.propKey]: compareVal }).length < 1\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal)\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid (v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal)\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate (obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey]\n\n      if (!propVal) {\n        return false\n      }\n      return !Validator.isValid(v, obj, propVal)\n    })\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`)\n    }\n  }\n\n  return {\n    validateProperties () {\n      validate(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 50\n    })\n  }\n}\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps (obj) {\n    const updates = updaters.filter(u => obj[u.propKey])\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n\n  return {\n    updateProperties () {\n      return updateProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      output: enableValidation.onUpdate,\n      order: 30\n    })\n  }\n}\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort () {\n      console.log({ func: 'invokePort', fn, args })\n      return this[fn](...args).then(o => o)\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'invokePort',\n      output: enableValidation.onUpdate,\n      order: 85\n    })\n  }\n}\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o)\n  }\n\n  return {\n    ...o,\n    async execMethod () {\n      const model = await functionType[typeof fn](fn, this, ...args)\n      return model\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'execMethod',\n      output: enableValidation.onUpdate,\n      order: 40\n    })\n  }\n}\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args)\n  }\n}\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`)\n  }\n  return propKey\n}\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr\n    throw new Error(`${x} invalid`)\n  }\n}\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n)\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo]\n\nexport default GlobalMixins\n","'use strict'\n\nimport { prevmodel } from './mixins'\nimport { asyncPipe } from '../domain/utils'\nimport checkPayload from './check-payload'\nimport { Transform } from 'stream'\n\n/** @typedef { import('../domain/index.js').ModelSpecification} ModelSpecification */\n/** @typedef {string|RegExp} topic*/\n/** @typedef {function(string)} eventCallback*/\n/** @typedef {import('../adapters/index').adapterFunction} adapterFunction*/\n/** @typedef {string} id */\n/** @typedef {import(\"./customer\").Customer} Customer */\n/** @typedef {function(Order)} undoFunction */\n/**\n * @callback logMessageFn\n * @param {object|string} message\n * @param {logType} [type]\n *\n */\n\n/** @typedef {'first'|'last'|'lastStateChange'|'stateChange'|'error'|'undo'} logType */\n\n/**\n * @typedef readLogType\n * @property {number} index\n * @property  {logType} type\n */\n\n/**\n * @typedef {{\n *  itemId: string,\n *  price: number,\n *  qty?: number\n * }} orderItemType\n */\n\n/**\n * @callback relationFunction\n * @property {...args}\n * @returns {Promise<Model>}\n * } relationFunction\n */\n\n/**\n *  @typedef {Object} Order The Order Service\n * @property {function(topic,eventCallback)} listen - listen for events\n * @property {import('../adapters/event-adapter').notifyType} notify\n * @property {adapterFunction} validateAddress - returns valid address or throws exception\n * @property {adapterFunction} completePayment - completes payment for an authorized charge\n * @property {adapterFunction} verifyDelivery - verify the order was received by the customer\n * @property {adapterFunction} trackShipment\n * @property {adapterFunction} refundPayment\n * @property {relationFunction} inventory - reserve inventory items\n * @property {adapterFunction} undo - undo all transactions up to this point\n * @property {function():Promise<Order>} pickOrder - pick items from warehouse and prepare for shipment\n * @property {adapterFunction} authorizePayment - verify payment, i.e. reserve the balance due\n * @property {import('../adapters/shipping-adapter').shipOrder} shipOrder -\n * calls shipping service to print label and request delivery\n * @property {function(Order):Promise<void>} save - saves order\n * @property {function():Promise<Order>} find - finds order\n * @property {string} shippingAddress\n * @property {string} orderNo = the order number\n * @property {string} trackingId - id given by tracking status for this `orderNo`\n * @property {function():Order} decrypt - decrypts sensitive properties\n * @property {function({key1:any,keyN:any}, boolean):Promise<Order>} update - update the order,\n * set the second arg to false to turn off validation.\n * @property {'PENDING'|'APPROVED'|'SHIPPING'|'CANCELED'|'COMPLETED'} orderStatus\n * @property {function(...args):Promise<import(\"../domain/index\").Model>} customer - retrieves related customer object,\n * or if args are provided, creates a new customer object, using the provided args as the input.\n * @property {function(string,Order):Promise} emit - broadcast domain event\n * @property {function():boolean} paymentAccepted - payment approved and funds reserved\n * @property {function():boolean} autoCheckout - whether or not to immediately submit the order\n * @property {boolean} saveShippingDetails save shipping and payment details in a new customer record\n * @property {{itemId:string,price:number,qty:number}[]} orderItems\n * @property {Symbol} customerId {@link Customer}\n * @property {logMessageFn} logEvent\n * @property {logMessageFn} logError\n * @property {logMessageFn} logUndo\n * @property {logMessageFn} logStateChange\n * @property {readMessageFn} readLog\n */\n\nconst orderStatus = 'orderStatus'\nconst orderTotal = 'orderTotal'\nconst orderNo = 'orderNo'\n\nexport const OrderStatus = {\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  SHIPPING: 'SHIPPING',\n  COMPLETE: 'COMPLETE',\n  CANCELED: 'CANCELED'\n}\n\n/**\n *\n * @param {orderItemType} orderItem\n * @returns {boolean} true if item is valid\n */\nexport const checkItem = function (orderItem) {\n  return (\n    typeof orderItem.itemId === 'string' && typeof orderItem.price === 'number'\n  )\n}\n\n/**\n * @param {orderItemType[]} orderItems\n */\nexport const checkItems = function (orderItems) {\n  if (!orderItems || orderItems.length < 1) {\n    throw new Error('order contains no items')\n  }\n  const items = Array.isArray(orderItems) ? orderItems : [orderItems]\n\n  if (items.length > 0 && items.every(checkItem)) {\n    return items\n  }\n  throw new Error('order items invalid', { items })\n}\n\n/**\n * Calculate order total\n * @param {orderItemType[]} orderItems\n */\nexport const calcTotal = function (orderItems) {\n  const items = checkItems(orderItems)\n\n  return items.reduce((total, item) => {\n    const qty = item.qty || 1\n    return (total += item.price * qty)\n  }, 0)\n}\n\n/**\n * @param {orderItemType[]} orderItems\n * @returns {number} number of items\n */\nexport const itemCount = function (orderItems) {\n  return orderItems.reduce((total, item) => (total += item.qty || 1))\n}\n\n/**\n * No changes to `propKey` properties once the order is approved\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnApproval = propKey => o =>\n  o.orderStatus && o.orderStatus !== OrderStatus.PENDING ? propKey : null\n\nconst finalStatus = status =>\n  [OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(status)\n\n/**\n * No changes to `propKey` once order is complete or canceled\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnCompletion = propKey => o =>\n  finalStatus(o.orderStatus) ? null : propKey\n\n/**\n * If not a registered customer, provide shipping & payment details.\n * @param {*} o\n * @param {*} propKey\n * @returns {string | void} the key or `void`\n */\nexport const requiredForGuest = propKey => o => (o.customerId ? null : propKey)\n\n/**\n * Value required to approve order.\n * @param {*} propKey\n */\nexport const requiredForApproval = propKey => o =>\n  o.orderStatus === OrderStatus.APPROVED ? propKey : null\n\n/**\n * Value required to complete order\n * @param {object} o\n * @param {string | string[]} propKey these props are required to comlete the order\n * @returns {string | void} the key or `void`\n */\nexport const requiredForCompletion = propKey => o =>\n  o.orderStatus === OrderStatus.COMPLETE ? propKey : null\n\n/**\n *\n * @param {enum} from\n * @param {enum} to\n * @returns\n */\nconst invalidStatusChange = (from, to) => (o, propVal) =>\n  propVal === to && o[prevmodel].orderStatus === from\n\nconst invalidStatusChanges = [\n  // Can't change back to pending once approved\n  invalidStatusChange(OrderStatus.APPROVED, OrderStatus.PENDING),\n  // Can't change back to pending once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.PENDING),\n  // Can't change back to approved once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.APPROVED),\n  // Can't change directly to shipping from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.SHIPPING),\n  // Can't change directly to complete from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.COMPLETE),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.CANCELED),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.COMPLETE)\n]\n\n/**\n * Check that status changes are valid\n */\nexport const statusChangeValid = (o, propVal) => {\n  if (invalidStatusChanges.some(i => i(o, propVal))) {\n    throw new Error('invalid status change')\n  }\n  return true\n}\n\n/**\n *\n * @param {*} o\n * @param {*} propVal\n */\nexport const orderTotalValid = (o, propVal) =>\n  calcTotal(o.orderItems) === propVal\n\n/**\n * Recalculate order total\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const recalcTotal = (o, propVal) => ({\n  orderTotal: calcTotal(propVal)\n})\n\n/**\n * Updated signature requirement if `orderTotal` above certain value\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const updateSignature = (o, propVal) => ({\n  signatureRequired: calcTotal(propVal) > 999.99 || o.signatureRequired\n})\n\n/**\n * Don't delete orders before they're complete.\n */\nexport function readyToDelete (model) {\n  if (\n    ![OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(model.orderStatus)\n  ) {\n    throw new Error('order must be canceled or completed')\n  }\n  return model\n}\n\n/**\n *\n * @param {Error} error\n * @param {Order} order\n * @param {*} func\n */\nfunction handleError (error, order, func) {\n  const errMsg = { func, orderNo: order.orderNo, error }\n  if (order) order.emit('orderError', errMsg)\n\n  throw new Error(JSON.stringify(errMsg))\n}\n\n/**\n * Callback invoked by adapter when payment is complete\n * @param {{model:Order}} options\n */\nexport async function paymentCompleted (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'confirmationCode',\n    options,\n    payload,\n    paymentCompleted.name\n  )\n  return order.update({ ...changes, orderStatus: OrderStatus.COMPLETE })\n}\n\n/**\n * Callback invoked by shipping adapter when order is picked up.\n * @param {{model:Order}} options\n * @param {string} shipmentId\n */\nexport async function orderShipped (options = {}, payload = {}) {\n  const { model: order } = options\n  const shipmentPayload = checkPayload(\n    'shipmentId',\n    options,\n    payload,\n    orderShipped.name\n  )\n  return order.update({\n    shipmentId: shipmentPayload.shipmentId,\n    orderStatus: OrderStatus.SHIPPING\n  })\n}\n\n/**\n * Callback invoked when order is ready for pickup\n * @param {{ model:Order }} options\n */\nexport async function orderPicked (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'pickupAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update(changes)\n}\n\n/**\n * Callback invoked when shippingAddress is verified (and possibly corrected)\n * @param {{ model:Order }} options\n * @param {string} shippingAddress\n */\nexport async function addressValidated (options = {}, payload = {}) {\n  const { model: order } = options\n  const addressPayload = checkPayload(\n    'shippingAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update({ shippingAddress: addressPayload.shippingAddress })\n}\n\n/**\n * Called by adapter when port recevies response from payment service.\n * @param {{ model:Order }} options\n * @param {*} paymentAuthorization\n */\nexport async function paymentAuthorized (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'paymentStatus',\n    options,\n    payload,\n    paymentAuthorized.name\n  )\n  return order.update({ ...changes, paymentStatus }, false)\n}\n\n/**\n * Called to refund payment when order is canceled.\n * @param {*} options\n * @param {*} payload\n * @returns\n */\nexport async function refundPayment (order) {\n  // call port by same name.\n  order.refundPayment((options, payload) => {\n    const changes = checkPayload(\n      'refundReceipt',\n      options,\n      payload,\n      refundPayment.name\n    )\n    return order.update({ ...changes, orderStatus: OrderStatus.CANCELED })\n  })\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyAddress (order) {\n  console.debug({\n    fn: verifyAddress.name,\n    validateAddress: order.validateAddress\n  })\n  return order.validateAddress(addressValidated)\n}\n\n/**\n * Request the bank or lender to place a hold on\n * the customer account in the amount of the payment\n * due, to be withdrawn once the shipment is safely\n * in our customer's hands, or credited back if things\n * don't work out.\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyPayment (order) {\n  try {\n    /**\n     * @type {Order}\n     */\n    const authorizeOrder = await order.authorizePayment(paymentAuthorized)\n\n    if (!authorizeOrder.paymentDeclined) {\n      throw new Error('payment declined')\n    }\n\n    return authorizeOrder\n  } catch (e) {\n    handleError(e, order, verifyPayment.name)\n  }\n  return order\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n * @throws {'oInventory'}\n */\nasync function verifyInventory (order) {\n  const inventory = await order.inventory()\n  if (inventory.length < 1) throw new Error('bad inventory ID')\n\n  const insufficient = order.orderItems.filter(item => {\n    const inv = inventory.find(i => i.id === item.itemId)\n    if (!inv) return true\n    if (inv.quantity < item.qty) return true\n    return false\n  })\n\n  if (insufficient.length > 0) {\n    order.emit('lowOrOutOfStock', insufficient)\n    throw new Error(`low or out of stock: ${insufficient.map(i => i.itemId)}`)\n  }\n}\n/**\n * Copy existing customer data into the order\n * or create new customer from order details.\n *\n * @param {Order} order\n * @throws {'InvalidCustomerId'}\n */\nasync function getCustomerOrder (order) {\n  // If an id is given, try fetching the model\n  if (order.customerId) {\n    if (!order.customer) {\n      console.log({ order })\n    }\n    // Use the relation defined in the spec\n    const customer = await order.customer()\n\n    if (!customer) {\n      throw new Error('invalid customer id', order.customerId)\n    }\n\n    // Add customer data to the order\n    const custInfo = { ...customer.decrypt(), firstName: customer.firstName }\n    const update = await order.update(custInfo)\n\n    console.info('update order with data from existing customer', custInfo)\n    return update\n  }\n\n  // Create a new customer from the shipping details\n  if (order.saveShippingDetails) {\n    const custInfo = { ...order.decrypt(), firstName: order.firstName }\n    const customer = await order.customer(custInfo)\n\n    console.info('create new customer with data from order', customer)\n    return order\n  }\n\n  return order\n}\n\n/**\n * Handle a new order:\n * - fetch or save customer info\n * - check item availability\n * - authorize payment\n * - verify shipping address\n */\nconst processPendingOrder = asyncPipe(\n  getCustomerOrder,\n  verifyInventory,\n  verifyPayment,\n  verifyAddress\n)\n\n/**\n * Implements the beginging of the order service workflow.\n * The rest is implemented by the {@link ModelSpecification}.\n * See the port configuration section of {@link Order}.\n */\nconst OrderActions = {\n  /**\n   * Verifies the shipping address and authorizes payment\n   * for the order total when the order is first created,\n   * or when it is updated while still in pending status.\n   *\n   * @param {Order} order - the order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.PENDING]: order => {\n    // return processPendingOrder(order)\n\n    if (order.autoCheckout)\n      /**@type {Order} */\n      getCustomerOrder(order).then(order =>\n        runOrderWorkflow(\n          order.updateSync({ orderStatus: OrderStatus.APPROVED })\n        )\n      )\n  },\n\n  /**\n   * If payment is authorized, check inventory.\n   * This kicks off the rest of the workflow,\n   * which is controlled by port event flow.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.APPROVED]: order => {\n    try {\n      //if (/approved/i.test(order.paymentStatus))\n      return order.pickOrder(orderPicked)\n\n      // order.emit('PayAuthFail', 'Payment authorization problem')\n      // return order\n    } catch (error) {\n      console.log({ error })\n      handleError(error, order, OrderStatus.APPROVED)\n    }\n    return order\n  },\n\n  /**\n   * Useful if we need to restart tracking.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.SHIPPING]: async order => {\n    try {\n      order.trackShipment(trackingUpdate)\n      console.debug({ func: OrderStatus.SHIPPING, order })\n      await (await order.update({ orderStatus: OrderStatus.SHIPPING })).emit(\n        'orderPicked'\n      )\n    } catch (error) {\n      handleError(error, order, OrderStatus.SHIPPING)\n    }\n    return order\n  },\n\n  /**\n   * Start cancellation process.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.CANCELED]: async order => {\n    try {\n      console.debug({\n        func: OrderStatus.CANCELED,\n        desc: 'order canceled, calling undo',\n        orderNo: order.orderNo\n      })\n      return order.undo()\n    } catch (error) {\n      handleError(error, order, OrderStatus.CANCELED)\n    }\n    return order\n  },\n  /**\n   *\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.COMPLETE]: async order => {\n    // send route to questionnaire, perform analysis, schedule follow-up\n    console.log('customer sentiment analysis, customer care, sales analysis')\n    return order\n  }\n}\n\n/**\n * Call order service workflow - controlled by status\n * @param {Order} order\n * @returns {Promise<Readonly<Order>>}\n */\nexport function runOrderWorkflow (order) {\n  console.log({ orderStatus: order.orderStatus })\n  OrderActions[order.orderStatus](order)\n}\n\n/**\n * Called on create, update, delete of model instance.\n * @param {{model:Promise<ReadOnly<Order>>}}\n */\nexport function handleOrderEvent ({ model: order, eventType, changes }) {\n  if (changes?.orderStatus || eventType === 'CREATE') {\n    // console.debug({ fn: handleOrderEvent.name, order })\n    runOrderWorkflow(order)\n  }\n}\n\n/**\n * Require a signature for orders $1000 and up\n * @param {*} input\n * @param {*} orderTotal\n */\nfunction needsSignature (input, orderTotal) {\n  return typeof input === 'boolean' ? input : orderTotal > 999.99\n}\n\n/** format and classify log entries */\nfunction logMessage (message, type) {\n  const msg = typeof message === 'string' ? message : JSON.stringify(message)\n\n  return {\n    desc: msg.substring(0, 140),\n    type,\n    time: Date.now(),\n    toJSON () {\n      return {\n        desc: this.desc,\n        type,\n        time: new Date(this.time).toISOString()\n      }\n    }\n  }\n}\n\n/**\n * Returns factory function for the Order model.\n * @type {import('../domain/index.js').modelSpecFactoryFn}\n * @param {*} dependencies - inject dependencies\n */\nexport function makeOrderFactory (dependencies) {\n  return function createOrder ({\n    orderItems,\n    email = null,\n    lastName = null,\n    firstName = null,\n    customerId = null,\n    billingAddress = null,\n    shippingAddress = null,\n    creditCardNumber = null,\n    shippingPriority = null,\n    autoCheckout = false,\n    saveShippingDetails = false,\n    requireSignature,\n    fibonacci = 10\n  }) {\n    //const signatureRequired = needsSignature(requireSignature, total)\n    const order = {\n      email,\n      lastName,\n      firstName,\n      customerId,\n      orderItems,\n      creditCardNumber,\n      billingAddress,\n      shippingAddress,\n      signatureRequired: false,\n      saveShippingDetails,\n      shippingPriority,\n      fibonacci,\n      result: 0,\n      time: 0,\n      estimatedArrival: null,\n      log: [logMessage('order created')],\n      [orderTotal]: 0,\n      [orderStatus]: OrderStatus.PENDING,\n      [orderNo]: dependencies.uuid(),\n      desc: 'new order 25',\n      itemId: null,\n      /**\n       * Has payment for the order been authorized?\n       */\n      paymentAccepted () {\n        return true\n      },\n      /**\n       * Proceed to checkout automatically or wait for approval?\n       */\n      autoCheckout () {\n        return autoCheckout\n      },\n      totalItems () {\n        return itemCount(this.orderItems)\n      },\n      total () {\n        return calcTotal(this.orderItems)\n      },\n      addItem (item) {\n        if (checkItem(item)) {\n          this.orderItems.push(item)\n          return true\n        }\n        return false\n      },\n      logEvent (message, type = 'info') {\n        this.log.push(logMessage(message, type))\n      },\n      logError (message) {\n        this.logEvent(message, 'error')\n      },\n      logUndo (message) {\n        this.logEvent(message, 'undo')\n      },\n      logStateChange (message) {\n        this.logEvent(message, 'stateChange')\n      },\n\n      /**\n       *\n       * @param {viewLog} options\n       * @returns {logMessageFn[]|logMessageFn}\n       */\n      readLog ({ index = null, type = null }) {\n        const indx = parseInt(index)\n        if (indx < this.log.length && indx !== NaN) return this.log[indx]\n        if (type === 'first') return this.log[0]\n        if (type === 'last') return this.log[this.log.length - 1]\n        if (type === 'lastStateChange')\n          return this.log[this.log.lastIndexOf({ type: 'stateChange' })]\n        if (type === 'stateChanges')\n          return this.log.filter(l => l.type === 'stateChange')\n        if (type === 'error') return this.log.filter(l => l.type === 'error')\n        if (type === 'undo') return this.log.filter(l => l.type === 'undo')\n        return this.log\n      }\n    }\n\n    return Object.freeze(order)\n  }\n}\n\n/**\n * Called as command to approve/submit order.\n * @param {Order} order\n */\nexport async function approve (order) {\n  console.debug({ msg: 'got order', order })\n  const approvedOrder = order.updateSync(\n    {\n      orderStatus: OrderStatus.APPROVED\n    },\n    false\n  )\n  console.debug({ approvedOrder })\n  approvedOrder.logStateChange(OrderStatus.APPROVED)\n  return runOrderWorkflow(approvedOrder)\n}\n\n/**\n * Called as command to cancel order.\n * @param {Order} order\n */\nexport async function cancel (order) {\n  const canceledOrder = await order.update({\n    orderStatus: OrderStatus.CANCELED\n  })\n  canceledOrder.logStateChange(OrderStatus.CANCELED)\n  return runOrderWorkflow(canceledOrder)\n}\n\n/**\n * Alias of `approve`\n * @param {Order} order\n * @returns\n */\nexport async function checkout (order) {\n  return approve(order)\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function errorCallback ({ port, model: order, error }) {\n  const errMsg = { error, port, error }\n  console.error(errorCallback.name, errMsg)\n  order.logEvent(errMsg)\n  order.emit(errorCallback.name, errMsg)\n  return order.undo()\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function timeoutCallback ({ port, ports, adapterFn, model: order }) {\n  console.error('timeout...', port)\n  //order.logError(timeoutCallback.name, 'timeout')\n  order.emit(timeoutCallback.name, errMsg)\n}\n\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnInventory (order) {\n  console.log(returnInventory.name)\n  order.logEvent(returnInventory.name, 'timeout')\n  order.emit(returnInventory.name, errMsg)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n * Start process for the shipper to pick the items to return.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnShipment (order) {\n  console.log(returnShipment.name)\n  order.logUndo(returnShipment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\nexport function accountOrder (req, res) {}\n1\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnDelivery (order) {\n  console.log(returnDelivery.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n */\nexport async function cancelPayment (order) {\n  console.log(cancelPayment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\nexport class OrderError extends Error {\n  constructor (error, code) {\n    super(error)\n    this.code = code\n  }\n}\n\n/**\n *\n * @param {Date.now} data\n * @returns\n */\nexport async function cancelOrders (data) {\n  const cancelOrdersTransform = new Transform({\n    objectMode: true,\n    transform: (chunk, _encoding, done) => {\n      if (chunk._id) delete chunk._id\n      done(\n        null,\n        JSON.stringify({ ...chunk, orderStatus: OrderStatus.CANCELED })\n      )\n    }\n  })\n\n  await this.list({\n    writable: this.createWriteStream(),\n    transform: cancelOrdersTransform,\n    serialize: false\n  })\n\n  return { status: 'ok' }\n}\n\n/**\n *\n * @param {Date.now} data\n * @returns\n */\n\nexport async function approveOrders (data) {\n  try {\n    console.log(x)\n  } catch (error) {\n    throw new OrderError(error, 401)\n  }\n\n  const approveOrdersTransform = new Transform({\n    objectMode: true,\n    transform: (chunk, _encoding, done) => {\n      if (chunk._id) delete chunk._id\n      done(\n        null,\n        JSON.stringify({ ...chunk, orderStatus: OrderStatus.APPROVED })\n      )\n    }\n  })\n\n  await this.list({\n    writable: this.createWriteStream(),\n    transform: approveOrdersTransform,\n    serialize: false\n  })\n\n  return { status: 'ok' }\n}\n\n/**\n *\n * @returns\n */\nexport async function trackAsyncContext () {\n  const ctx = this.getContext()\n  const dur = 'test-duration'\n  const startTime = Date.now()\n\n  await new Promise(resolve => setTimeout(resolve, 100))\n\n  // require('fs')\n  //   .stream('/etc/hosts')\n  //   .pipe(ctx.get('res'))\n\n  ctx.set(dur, Date.now() - startTime)\n\n  const metric = {\n    requestId: ctx.get('id'),\n    fn: trackAsyncContext.name,\n    duration: ctx.get(dur),\n    context: [...ctx]\n  }\n\n  this.emit('metric', metric)\n  console.log(metric.ctx)\n\n  return metric\n}\n\nexport async function customHttpStatus (data) {\n  if (data.args.code)\n    throw new OrderError(data.args.message || 'custom status', data.args.code)\n  try {\n    console.log(x)\n  } catch (error) {\n    throw new OrderError(error, 500)\n  }\n}\n\nexport async function testContainsMany (data) {\n  this.chat()\n  return { status: 'ok' }\n}\n\nfunction fibonacci (x) {\n  if (x === 0) {\n    return 0\n  }\n  if (x === 1) {\n    return 1\n  }\n  return fibonacci(x - 1) + fibonacci(x - 2)\n}\n\nexport async function runFibonacciJs (data) {\n  console.log({ data })\n  const param = parseInt(data.args.fibonacci || 20)\n  const start = Date.now()\n  return {\n    fibonacci: param,\n    result: fibonacci(param),\n    time: Date.now() - start\n  }\n}\n","/**\n * webswitch (c)\n *\n * Websocket clients connect to a common ws server,\n * called a webswitch. When a client sends a message,\n * webswitch broadcasts the message to all other\n * connected clients, including a special webswitch\n * server that acts as an uplink to another network,\n * if one is defined. A Webswitch server can also\n * receive messgages from an uplink and will broadcast\n * those messages to its clients as well.\n */\n\n'use strict'\n\nimport os from 'os'\nimport EventEmitter from 'events'\nimport { nanoid } from 'nanoid'\n\nconst HOSTNAME = 'webswitch.local'\nconst SERVICENAME = 'webswitch'\nconst HBEATTIMEOUT = 'heartBeatTimeout'\nconst WSOCKETERROR = 'webSocketError'\n\nconst isPrimary = /true/i.test(process.env.SWITCH)\nconst isBackup = /true/i.test(process.env.BACKUP)\nconst debug = /true/i.test(process.env.DEBUG)\nconst heartbeatMs = 10000\nconst sslEnabled = /true/i.test(process.env.SSL_ENABLED)\nconst clearPort = process.env.PORT || 80\nconst cipherPort = process.env.SSL_PORT || 443\nconst activePort = sslEnabled ? cipherPort : clearPort\nconst activeProto = sslEnabled ? 'wss' : 'ws'\nconst activeHost = process.env.DOMAIN || os.hostname()\nconst proto = isPrimary ? activeProto : process.env.SWITCH_PROTO\nconst port = isPrimary ? activePort : process.env.SWITCH_PORT\nconst host = isPrimary ? activeHost : process.env.SWITCH_HOST\nconst override = /true/i.test(process.env.SWITCH_OVERRIDE)\nconst apiProto = sslEnabled ? 'https' : 'http'\nconst apiUrl = `${apiProto}://${activeHost}:${activePort}`\n\nfunction serviceUrl () {\n  const url = `${proto}://${host}:${port}`\n  if (proto && host && port) return url\n  if (isPrimary) throw new Error(`invalid url ${url}`)\n  return null\n}\n\n/**\n * Service mesh client impl. Uses websocket and service-locator\n * adapters through ports injected into the {@link mesh} model.\n * Cf. modelSpec by the same name, i.e. `webswitch`.\n */\nexport class ServiceMeshClient extends EventEmitter {\n  constructor (mesh) {\n    super('webswitch')\n    this.url\n    this.mesh = mesh\n    this.name = SERVICENAME\n    this.isPrimary = isPrimary\n    this.isBackup = isBackup\n    this.pong = true\n    this.heartbeatTimer = 3000\n    this.headers = {\n      'x-webswitch-host': os.hostname(),\n      'x-webswitch-role': 'node',\n      'x-webswitch-pid': process.pid\n    }\n  }\n\n  /**\n   *\n   * @param {number} asyncId id's instance to kill\n   * @returns {{telemetry:{mem:number,cpu:number}}}\n   */\n  telemetry () {\n    return {\n      eventName: 'telemetry',\n      proto: this.name,\n      apiUrl,\n      heartbeatMs,\n      hostname: os.hostname(),\n      role: 'node',\n      pid: process.pid,\n      telemetry: {\n        ...process.memoryUsage(),\n        ...process.cpuUsage(),\n        ...performance.nodeTiming\n      },\n      services: this.mesh.listServices(),\n      socketState: this.mesh.websocketStatus() || 'undefined'\n    }\n  }\n\n  /**\n   * Zero-config, self-forming mesh network:\n   * Discover URL of broker to connect to, or\n   * if this is the broker, cast the local url\n   * @returns {Promise<string>} url\n   */\n  async resolveUrl () {\n    await this.mesh.serviceLocatorInit({\n      serviceUrl: serviceUrl(),\n      name: this.name,\n      primary: this.isPrimary,\n      backup: this.isBackup\n    })\n    if (this.isPrimary) {\n      await this.mesh.serviceLocatorAnswer()\n      return serviceUrl()\n    }\n    return override ? serviceUrl() : this.mesh.serviceLocatorAsk()\n  }\n\n  /**\n   * Use multicast dns to resolve broker url. Connect to\n   * service mesh broker. Allow listeners to subscribe to\n   * indivdual or all events. Send binary messages with\n   * protocol and idempotentency headers. Periodically send\n   * telemetry data.\n   *\n   * @param {*} options\n   * @returns\n   */\n  async connect (options = { binary: true }) {\n    this.options = options\n    this.url = await this.resolveUrl()\n\n    this.mesh.websocketConnect(this.url, {\n      agent: false,\n      headers: this.headers,\n      protocol: SERVICENAME,\n      useBinary: options.binary\n    })\n\n    this.mesh.websocketOnOpen(() => {\n      console.log('connection open')\n      this.send(this.telemetry())\n      this.heartbeat()\n      setTimeout(() => this.sendQueuedMsgs(), 3000)\n    })\n\n    this.mesh.websocketOnMessage(message => {\n      if (!message.eventName) {\n        debug && console.debug({ missingEventName: message })\n        this.emit('missingEventName', message)\n        return\n      }\n      try {\n        this.emit(message.eventName, message)\n        this.listeners('*').forEach(listener => listener(message))\n      } catch (error) {\n        console.error({ fn: this.connect.name, error })\n      }\n    })\n\n    this.mesh.websocketOnError(error => {\n      this.emit(WSOCKETERROR, error)\n      console.error({ fn: this.connect.name, error })\n    })\n\n    this.mesh.websocketOnClose((code, reason) => {\n      console.log({\n        msg: 'received close frame',\n        code,\n        reason: reason?.toString()\n      })\n      clearTimeout(this.heartbeatTimer)\n      setTimeout(() => {\n        console.debug('reconnect due to socket close')\n        this.connect()\n      }, 5000)\n    })\n\n    this.mesh.websocketOnPong(() => (this.pong = true))\n    this.once('timeout', this.timeout)\n  }\n\n  timeout () {\n    console.warn('timeout')\n    this.emit(HBEATTIMEOUT, this.telemetry())\n    this.mesh.websocketTerminate()\n    setTimeout(() => {\n      console.debug('reconnect due to timeout')\n      this.connect()\n    }, 5000)\n  }\n\n  heartbeat () {\n    if (this.pong) {\n      this.pong = false\n      this.mesh.websocketPing()\n      this.heartbeatTimer = setTimeout(() => this.heartbeat(), heartbeatMs)\n    } else {\n      clearTimeout(this.heartbeatTimer)\n      this.emit('timeout')\n    }\n  }\n\n  /**\n   * Convert message to binary and send with protocol and idempotency headers.\n   * If message cannot be sent because of connection state or buffering queue\n   * message in domain object for retry later. Using a domain object ensures\n   * persistence of the queue across boots.\n   *\n   * @param {object} msg\n   * @returns {Promise<boolean>} true if sent, false if not\n   */\n  send (msg) {\n    const sent = this.mesh.websocketSend(msg, {\n      headers: {\n        ...this.headers,\n        'idempotency-key': nanoid()\n      }\n    })\n    if (sent) return true\n    this.mesh.enqueue(msg)\n    return false\n  }\n\n  /**\n   * Send any messages buffered in `sendQueue`.\n   */\n  sendQueuedMsgs () {\n    let sent = true\n    while (this.mesh.queueDepth() > 0 && sent)\n      sent = this.send(this.mesh.dequeue())\n  }\n\n  /**\n   * Connects if needed then sends message to mesh broker service.\n   * @param {*} msg\n   */\n  publish (msg) {\n    return this.send(msg)\n  }\n\n  /**\n   * Register handler to fire on event\n   * @param {string} eventName\n   * @param {function()} callback\n   */\n  subscribe (eventName, callback) {\n    this.on(eventName, callback)\n  }\n\n  /**\n   * A new object will be created on system reload.\n   * Dispose of the old one. Run in context to\n   * distinguish between the new and old instance.\n   *\n   * @param {*} code\n   * @param {*} reason\n   */\n  async close (code, reason) {\n    console.debug('closing socket')\n    await this.mesh.save() // save queued messages\n    this.removeAllListeners()\n    this.mesh.websocketClose(code, reason)\n  }\n}\n\n/**\n * Domain model factory function. This model is\n * used internally by the Aegis framework as a\n * pluggable service mesh client. Implement the\n * the methods below to create a new plugin.\n *\n * @param {*} dependencies injected depedencies\n * @returns\n */\nexport function makeClient (dependencies) {\n  let client\n  return function ({ listServices }) {\n    return {\n      listServices,\n      sendQueue: [],\n      sendQueueMax: 1000,\n\n      queueDepth () {\n        return this.sendQueue.length\n      },\n\n      enqueue (msg) {\n        this.sendQueue.push(msg)\n      },\n\n      dequeue () {\n        return this.sendQueue.shift()\n      },\n\n      getClient () {\n        if (client) return client\n        client = new ServiceMeshClient(this)\n        return client\n      },\n\n      async connect (options) {\n        this.getClient().connect(options)\n      },\n\n      async publish (event) {\n        this.getClient().publish(event)\n      },\n\n      subscribe (eventName, handler) {\n        this.getClient().subscribe(eventName, handler)\n      },\n\n      async close (code, reason) {\n        this.getClient().close(code, reason)\n      }\n    }\n  }\n}\n"],"sourceRoot":""}