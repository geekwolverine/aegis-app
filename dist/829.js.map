{"version":3,"sources":["webpack://microlib-example/./src/config/webswitch.js","webpack://microlib-example/./src/domain/bind-adapters.js","webpack://microlib-example/./src/domain/check-payload.js","webpack://microlib-example/./src/domain/customer.js","webpack://microlib-example/./src/domain/index.js","webpack://microlib-example/./src/domain/inventory.js","webpack://microlib-example/./src/domain/mixins.js","webpack://microlib-example/./src/domain/order.js","webpack://microlib-example/./src/domain/webswitch.js","webpack://microlib-example/./src/event-dispatcher.js","webpack://microlib-example/./src/service-registry.js","webpack://microlib-example/./test/mock/address-service.js","webpack://microlib-example/./test/mock/event-service.js","webpack://microlib-example/./test/mock/index.js","webpack://microlib-example/./test/mock/inventory-service.js","webpack://microlib-example/./test/mock/payment-service.js","webpack://microlib-example/./test/mock/shipping-service.js"],"names":["WebSwitch","modelName","endpoint","factory","makeClient","internal","ports","serviceLocatorInit","service","type","timeout","serviceLocatorAsk","serviceLocatorListen","serviceLocatorAnswer","websocketConnect","stype","websocketPing","websocketSend","websocketClose","websocketStatus","websocketTerminate","websocketDisconnected","websocketOnClose","websocketOnOpen","websocketOnMessage","websocketOnError","websocketOnPong","makeAdapters","adapters","services","Object","keys","map","port","e","console","warn","message","reduce","p","c","checkPayload","key","options","payload","name","model","Error","desc","error","Array","isArray","k","find","then","latest","makeCustomerFactory","dependencies","createCustomer","firstName","lastName","shippingAddress","creditCardNumber","billingAddress","phone","email","userId","freeze","customerId","uuid","okToDelete","customer","orders","length","func","validateSpec","spec","missing","filter","entries","makeModel","mixins","concat","GlobalMixins","bindAdapters","models","values","modelSpecs","assetTypes","properties","categories","makeInventoryFactory","category","price","discount","sku","purchaseOrder","vendor","inStock","assetType","quantity","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","changes","JSON","parse","stringify","updates","compose","updated","updateMixins","o","cb","mixinSet","Map","has","set","eventMask","update","create","onload","handleUpdateEvent","event","isUpdate","decrypted","decrypt","isObject","containsUpdates","changeList","every","util","fn","validateModel","input","v","sort","a","b","order","apply","output","enableEvent","onUpdate","onCreate","onLoad","enabled","enableValidation","onCreateAndUpdate","onAll","never","addValidation","config","some","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","freezeProperties","preventUpdates","mutations","includes","requireProperties","requireProps","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","unknownProps","qs","rejectUnknownProperties","RegEx","ipv4Address","ipv6Address","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","propKey","Validator","tests","isValid","regex","maxnum","maxlen","validateProperties","validate","invalid","updateProperties","updaters","updateProps","u","invokePort","args","log","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","value","x","encryptPersonalInfo","orderStatus","orderTotal","orderNo","OrderStatus","PENDING","APPROVED","SHIPPING","COMPLETE","CANCELED","checkItem","orderItem","itemId","checkItems","orderItems","items","calcTotal","total","item","qty","itemCount","freezeOnApproval","finalStatus","status","freezeOnCompletion","requiredForGuest","requiredForApproval","requiredForCompletion","invalidStatusChange","from","to","invalidStatusChanges","statusChangeValid","i","orderTotalValid","recalcTotal","updateSignature","signatureRequired","readyToDelete","handleError","errMsg","emit","paymentCompleted","orderShipped","shipmentPayload","shipmentId","orderPicked","addressValidated","addressPayload","paymentAuthorized","paymentStatus","refundPayment","verifyAddress","debug","validateAddress","verifyPayment","authorizePayment","authorizeOrder","paymentDeclined","verifyInventory","inventory","insufficient","inv","id","getCustomerOrder","custInfo","info","saveShippingDetails","processPendingOrder","asyncPipe","OrderActions","processedOrder","autoCheckout","runOrderWorkflow","pickOrder","trackShipment","trackingUpdate","undo","handleOrderEvent","eventType","needsSignature","logMessage","msg","substring","time","Date","now","toJSON","toUTCString","makeOrderFactory","shippingPriority","requireSignature","fibonacci","result","estimatedArrival","push","logEvent","index","indx","parseInt","NaN","lastIndexOf","l","createOrder","approve","approvedOrder","updateSync","logStateChange","cancel","canceledOrder","checkout","errorCallback","timeoutCallback","adapterFn","returnInventory","returnShipment","logUndo","accountOrder","req","res","returnDelivery","cancelPayment","HOSTNAME","SERVICENAME","TIMEOUTEVENT","CONNECTERROR","WSOCKETERROR","isPrimary","process","env","SWITCH","isBackup","BACKUP","DEBUG","heartbeatMs","sslEnabled","SSL_ENABLED","clearPort","PORT","cipherPort","SSL_PORT","activePort","activeProto","activeHost","DOMAIN","os","proto","SWITCH_PROTO","SWITCH_PORT","host","SWITCH_HOST","apiProto","apiUrl","localUrl","url","States","STARTING","CONNECTED","DISCONNECTED","DISPOSED","ServiceMeshClient","mesh","encode","object","Buffer","number","symbol","undefined","decode","toString","pong","heartbeatTimer","state","broker","EventEmitter","headers","pid","asyncId","eventName","hostname","role","telemetry","memoryUsage","cpuUsage","listServices","socketState","clientState","serviceUrl","primary","backup","binary","get","resolveUrl","agent","protocol","runInAsyncScope","send","once","heartbeat","setTimeout","sendQueuedMsgs","unref","missingEventName","listeners","forEach","listener","connect","code","reason","clearTimeout","encoded","primitives","decoded","nanoid","sent","pushSendQueue","sendQueueLength","popSendQueue","callback","on","save","removeAllListeners","emitDestroy","AsyncResource","client","sendQueue","sendQueueMax","pop","getClient","publish","subscribe","handler","close","EventDispatcher","adapter","Event","subscriptions","topic","method","emitEvent","bind","Registry","eventNames","shipOrder","verifyDelivery","sendEvent","eventData","eventSource","eventTime","generateShippingEventData","externalId","trackingId","proofOfDelivery","trackingStatus","generateShippingMessage","commandResp","inventoryCallbackFactory","inventoryCallback","warehouseAddress","commandArgs","replyChannel","warehouse_addr","shippingCallbackFactory","shippingCallback","_message","dispatcher","registerCallback","Address","address","shippingChannel","inventoryChannel","callbacks","responses","topics","handleEvents","body","topicName","reduceRight","response","listening","listen","notify","init","Inventory","lineItems","pickupAddress","Payment","amount","source_id","customer_id","autocomplete","currency","idempotency_key","amount_money","location_id","reference_id","note","app_fee_money","completePayment","createEventMessage","requester","data","eventTarget","getTime","eventUuid","createCommandEvent","commandName","Shipping","serviceName","shipTo","shipFrom","signature","respondOn","getPayload","payloads","getProperty"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA;CAGA;;AACA;AACA;AAEA;AACA;CAGA;;AACA;AAEA;AACA;AACA;AACA;;AACA,SAAS0B,YAAT,CAAuBC,IAAvB,EAA6B;EAC3B,IAAMC,OAAO,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,SAA1B,EAAqCC,MAArC,CAA4C,UAAApC,GAAG;IAAA,OAAI,CAACkC,IAAI,CAAClC,GAAD,CAAT;EAAA,CAA/C,CAAhB;;EACA,IAAI,CAAAmC,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEJ,MAAT,IAAkB,CAAtB,EAAyB;IACvB,MAAM,IAAI1B,KAAJ,+BACmB8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;;;;;;ACnBM;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;+CAvBA,oJ;;;;;;AAyBO,IAAMoC,OAAO,GAAG;EACrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACQtO,gBAVe,4BAWnBO,EAXmB,EAYnBgO,MAZmB,EAanBC,SAbmB,EAcnBC,WAdmB,EAiBnB;IAAA;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAFAC,YAEA,0EAFe,KAEf;cADAC,QACA,0EADW,KACX;cACAje,OAAO,CAACqL,GAAR,CAAY,6BAAZ;cACM5K,OAFN,GAEgB;gBACdyd,eAAe,EAAErO,EADH;gBAEdsO,YAAY,EAAE;kBACZN,MAAM,EAANA,MADY;kBAEZI,QAAQ,EAARA;gBAFY,CAFA;gBAMdH,SAAS,EAATA,SANc;gBAOdE,YAAY,EAAZA,YAPc;gBAQdD,WAAW,EAAXA,WARc;gBASdK,WAAW,EAAE,eATC;gBAUdC,YAAY,EAAE,QAVA;gBAWdC,IAAI,EAAE,mBAXQ;gBAYdC,aAAa,EAAE;kBACbV,MAAM,EAAE,EADK;kBAEbI,QAAQ,EAAE;gBAFG;cAZD,CAFhB;cAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;cAxDI,iCA8DO,MA9DP;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EA+DD,CAhFoB;;EAkFrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"829.js","sourcesContent":["'use strict'\n\nimport { makeClient } from '../domain/webswitch'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const WebSwitch = {\n  modelName: 'webswitch',\n  endpoint: 'service-mesh',\n  factory: makeClient,\n  internal: true,\n  ports: {\n    serviceLocatorInit: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAsk: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorListen: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAnswer: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketConnect: {\n      service: 'websocket',\n      stype: 'outbound',\n      timeout: 3000\n    },\n    websocketPing: {\n      service: 'websocket',\n      stype: 'outbound',\n      timeout: 3000\n    },\n    websocketSend: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketStatus: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketTerminate: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketDisconnected: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnOpen: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnMessage: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnError: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnPong: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    }\n  }\n}\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","'use strict'\n\n/**\n * Check the payload for expected properties.\n * @param {string|string[]} key name of property or properties\n * @param {*} options\n * @param {*} payload\n * @param {*} port\n */\nexport default function checkPayload (\n  key,\n  options = {},\n  payload = {},\n  port = checkPayload.name\n) {\n  const { model } = options\n\n  if (!model || Object.keys(payload) < 1 || !key) {\n    throw new Error({\n      desc: 'model, payload, or key is missing',\n      model,\n      port,\n      error,\n      payload,\n      key\n    })\n  }\n\n  if (Array.isArray(key)) {\n    const keys = key.map(k => checkPayload(k, options, payload, port))\n\n    return keys.reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  if (payload[key]) {\n    return { [key]: payload[key] }\n  }\n\n  if (model[key]) {\n    return { [key]: model[key] }\n  }\n\n  return model\n    .find()\n    .then(latest => ({ [key]: latest[key] }))\n    .catch(error => {\n      throw new Error('property is missing' + key, port, error, payload, model)\n    })\n}\n","\"use strict\";\n\nexport function makeCustomerFactory(dependencies) {\n  return function createCustomer({\n    firstName,\n    lastName,\n    shippingAddress,\n    creditCardNumber,\n    billingAddress = shippingAddress,\n    phone,\n    email,\n    userId,\n  } = {}) {\n    return Object.freeze({\n      customerId: dependencies.uuid(),\n      firstName,\n      lastName,\n      creditCardNumber,\n      shippingAddress,\n      billingAddress,\n      phone,\n      email,\n      userId,\n    });\n  };\n}\n\nexport async function okToDelete(customer) {\n  try {\n    const orders = await customer.orders();\n    return orders.length > 0;\n  } catch (error) {\n    console.error({ func: okToDelete.name, error });\n    return true;\n  }\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n/**\n * @callback controller\n * @param {Request} req\n * @param {Response} res\n */\n\n/**\n * @typedef {{\n *  [path: string]: {\n *    get?: controller,\n *    post?: controller,\n *    patch?: controller,\n *    delete?:controller\n *   }\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [routes] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\n/**\n * @callback addModqqqqel\n * @param {{ searchTerm1, searchTerm2, searchTermN }} input\n * @returns {Promise<Model>}\n */\n\n/**\n * @callback editModel\n * @param {{ id:string, changes:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findModel\n * @param {{ id:string, query:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findRelatedModels\n * @param {{ query:object, relation:string }} input\n * @returns { Promise<{Model,[Model]}> }\n */\n\n/**\n * @callback listModels\n * @param {{ query:object }} input e.g. { searchTerm1 : 'val', ...etc }\n * @returns { [Promise<Model>] }\n */\n\n/**\n * @callback executeCommand\n * @param {{ id:string }} input\n * @returns { Model }\n */\n\n/**\n * @typedef DomainPortAPI\n * @property { addModel } addModel\n * @property { editModel } editModel\n * @property { listModels } listModels\n * @property { findModel } findModel\n * @property { findRelatedModels } findModel\n * @property { removeModel } removeModel\n * @property { executeCommand } executeCommand\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n\n// Service dependencies\nimport * as services from '../../test/mock'\nimport * as adapters from '../adapters'\n\nexport * from './order'\nexport * from './customer'\nexport * from './inventory'\n\n// Model properties\nimport * as modelSpecs from '../config'\n\n/**\n *\n * @param {ModelSpecification} spec\n */\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","'use strict'\n\nexport const assetTypes = ['rotating-asset', 'spare-part']\nexport const properties = ['height', 'length', 'width', 'weight', 'color']\nexport const categories = ['home', 'auto', 'business']\n\nexport const makeInventoryFactory = dependencies => ({\n  category,\n  properties,\n  price,\n  discount,\n  name,\n  desc,\n  sku,\n  purchaseOrder,\n  vendor,\n  inStock,\n  assetType,\n  quantity\n}) =>\n  Object.freeze({\n    category,\n    properties,\n    price: price - (discount || 0.0),\n    name,\n    desc,\n    sku,\n    purchaseOrder,\n    vendor,\n    inStock,\n    assetType,\n    quantity\n  })\n","'use strict'\n\nimport { hash, encrypt, decrypt, compose } from '../domain/utils'\nimport util from 'util'\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol('prevModel')\n/**\n * private key to access validation config\n */\nexport const validations = Symbol('validations')\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol('pre'),\n  post: Symbol('post')\n}\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol('preUpdateMixins'),\n  [mixinType.post]: Symbol('postUpdateMixins')\n}\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre]\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post]\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate (model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)) // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes\n\n  const updated = { ...model, ...updates }\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins (type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error('invalid mixin type')\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map()\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb())\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet\n    }\n  }\n  return o\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2 //  0100 Load\n}\n\nfunction handleUpdateEvent (model, updates, event) {\n  const isUpdate = eventMask.update & event\n  const decrypted = isUpdate ? model.decrypt() : {}\n  return {\n    ...model,\n    ...updates,\n    ...decrypted\n  }\n}\n\nfunction isObject (p) {\n  return p != null && typeof p === 'object'\n}\n\nfunction containsUpdates (model, changes, event) {\n  try {\n    if (!changes) return false\n    if (eventMask.update & event) {\n      const changeList = Object.keys(changes)\n      if (changeList.length < 1) return false\n\n      if (\n        changeList.every(\n          k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n        )\n      ) {\n        return false\n      }\n    }\n    return true\n  } catch (error) {\n    console.error({ fn: containsUpdates.name, error })\n  }\n  return false\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see {@link eventMask}.\n */\nexport function validateModel (model, changes, event) {\n  if (!model || !changes || !event) return {}\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) }\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input)\n\n  const updated = { ...model, ...updates }\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated)\n}\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent (onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0\n\n  if (onUpdate) {\n    enabled |= eventMask.update\n  }\n  if (onCreate) {\n    enabled |= eventMask.create\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload\n  }\n  return enabled\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate: enableEvent(true, false, false),\n    /**\n     * Validation runs on create.\n     */\n    onCreate: enableEvent(false, true, false),\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate: enableEvent(true, true, false),\n    /**\n     * Validation runs on load.\n     */\n    onLoad: enableEvent(false, false, true),\n    /**\n     * Validation runs on all events.\n     */\n    onAll: enableEvent(true, true, true),\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never: enableEvent(false, false, false)\n  }\n})()\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation ({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || []\n\n  if (config.some(v => v.name === name)) {\n    console.warn('duplicate validation name', name)\n    return model\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }]\n  }\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys (o, ...propKeys) {\n  if (!propKeys || !o) return null\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === 'function') return k(o)\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key))\n    if (k === '*') return Object.keys(o)\n    return k\n  })\n  return keys.flat()\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    encryptProperties () {\n      return encryptProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    }),\n\n    decrypt () {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n}\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys)\n\n    const mutations = Object.keys(obj).filter(key => keys.includes(key))\n    if (mutations?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${mutations}`)\n    }\n  }\n\n  return {\n    freezeProperties () {\n      preventUpdates(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20\n    })\n  }\n}\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function requireProps (obj) {\n    const missing = keys.filter(key => key && !obj[key])\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`)\n    }\n  }\n  return {\n    requireProperties () {\n      requireProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 90\n    })\n  }\n}\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function hashPwds (obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    hashPasswords () {\n      return hashPwds(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    })\n  }\n}\n\nconst internalPropList = []\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps () {\n    const keys = parseKeys(o, ...propKeys)\n    const allowList = keys.concat(internalPropList)\n\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key))\n\n    if (unknownProps?.length > 0) {\n      qs\n      throw new Error(`invalid properties: ${unknownProps}`)\n    }\n  }\n\n  return {\n    rejectUnknownProperties () {\n      return rejectUnknownProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: rejectUnknownProps.name,\n      input: enableValidation.onUpdate,\n      order: 10\n    })\n  }\n}\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test (expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr\n    return _expr.test(val)\n  }\n}\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:numbertp\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness (v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal\n  return o.listSync({ [v.propKey]: compareVal }).length < 1\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal)\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid (v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal)\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate (obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey]\n\n      if (!propVal) {\n        return false\n      }\n      return !Validator.isValid(v, obj, propVal)\n    })\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`)\n    }\n  }\n\n  return {\n    validateProperties () {\n      validate(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 50\n    })\n  }\n}\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps (obj) {\n    const updates = updaters.filter(u => obj[u.propKey])\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n\n  return {\n    updateProperties () {\n      return updateProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 30\n    })\n  }\n}\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort () {\n      console.log({ func: 'invokePort', fn, args })\n      return this[fn](...args).then(o => o)\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'invokePort',\n      output: enableValidation.onUpdate,\n      order: 85\n    })\n  }\n}\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o)\n  }\n\n  return {\n    ...o,\n    async execMethod () {\n      const model = await functionType[typeof fn](fn, this, ...args)\n      return model\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'execMethod',\n      output: enableValidation.onUpdate,\n      order: 40\n    })\n  }\n}\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args)\n  }\n}\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`)\n  }\n  return propKey\n}\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr\n    throw new Error(`${x} invalid`)\n  }\n}\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n)\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo]\n\nexport default GlobalMixins\n","'use strict'\n\nimport { prevmodel } from './mixins'\nimport { asyncPipe } from '../domain/utils'\nimport checkPayload from './check-payload'\n\n/** @typedef { import('../domain/index.js').ModelSpecification} ModelSpecification */\n/** @typedef {string|RegExp} topic*/\n/** @typedef {function(string)} eventCallback*/\n/** @typedef {import('../adapters/index').adapterFunction} adapterFunction*/\n/** @typedef {string} id */\n/** @typedef {import(\"./customer\").Customer} Customer */\n/** @typedef {function(Order)} undoFunction */\n/**\n * @callback logMessageFn\n * @param {object|string} message\n * @param {logType} [type]\n */\n\n/** @typedef {'first'|'last'|'lastStateChange'|'stateChange'|'error'|'undo'} logType */\n\n/**\n * @typedef readLogType\n * @property {number} index\n * @property  {logType} type\n */\n\n/**\n * @typedef {{\n *  itemId: string,\n *  price: number,\n *  qty?: number\n * }} orderItemType\n */\n\n/**\n * @callback relationFunction\n * @property {...args}\n * @returns {Promise<Model>}\n * } relationFunction\n */\n\n/**\n *  @typedef {Object} Order The Order Service\n * @property {function(topic,eventCallback)} listen - listen for events\n * @property {import('../adapters/event-adapter').notifyType} notify\n * @property {adapterFunction} validateAddress - returns valid address or throws exception\n * @property {adapterFunction} completePayment - completes payment for an authorized charge\n * @property {adapterFunction} verifyDelivery - verify the order was received by the customer\n * @property {adapterFunction} trackShipment\n * @property {adapterFunction} refundPayment\n * @property {relationFunction} inventory - reserve inventory items\n * @property {adapterFunction} undo - undo all transactions up to this point\n * @property {function():Promise<Order>} pickOrder - pick items from warehouse and prepare for shipment\n * @property {adapterFunction} authorizePayment - verify payment, i.e. reserve the balance due\n * @property {import('../adapters/shipping-adapter').shipOrder} shipOrder -\n * calls shipping service to print label and request delivery\n * @property {function(Order):Promise<void>} save - saves order\n * @property {function():Promise<Order>} find - finds order\n * @property {string} shippingAddress\n * @property {string} orderNo = the order number\n * @property {string} trackingId - id given by tracking status for this `orderNo`\n * @property {function():Order} decrypt - decrypts sensitive properties\n * @property {function({key1:any,keyN:any}, boolean):Promise<Order>} update - update the order,\n * set the second arg to false to turn off validation.\n * @property {'PENDING'|'APPROVED'|'SHIPPING'|'CANCELED'|'COMPLETED'} orderStatus\n * @property {function(...args):Promise<import(\"../domain/index\").Model>} customer - retrieves related customer object,\n * or if args are provided, creates a new customer object, using the provided args as the input.\n * @property {function(string,Order):Promise} emit - broadcast domain event\n * @property {function():boolean} paymentAccepted - payment approved and funds reserved\n * @property {function():boolean} autoCheckout - whether or not to immediately submit the order\n * @property {boolean} saveShippingDetails save shipping and payment details in a new customer record\n * @property {{itemId:string,price:number,qty:number}[]} orderItems\n * @property {Symbol} customerId {@link Customer}\n * @property {logMessageFn} logEvent\n * @property {logMessageFn} logError\n * @property {logMessageFn} logUndo\n * @property {logMessageFn} logStateChange\n * @property {readMessageFn} readLog\n */\n\nconst orderStatus = 'orderStatus'\nconst orderTotal = 'orderTotal'\nconst orderNo = 'orderNo'\n\nexport const OrderStatus = {\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  SHIPPING: 'SHIPPING',\n  COMPLETE: 'COMPLETE',\n  CANCELED: 'CANCELED'\n}\n\n/**\n *\n * @param {orderItemType} orderItem\n * @returns {boolean} true if item is valid\n */\nexport const checkItem = function (orderItem) {\n  return (\n    typeof orderItem.itemId === 'string' && typeof orderItem.price === 'number'\n  )\n}\n\n/**\n * @param {orderItemType[]} orderItems\n */\nexport const checkItems = function (orderItems) {\n  if (!orderItems || orderItems.length < 1) {\n    throw new Error('order contains no items')\n  }\n  const items = Array.isArray(orderItems) ? orderItems : [orderItems]\n\n  if (items.length > 0 && items.every(checkItem)) {\n    return items\n  }\n  throw new Error('order items invalid')\n}\n\n/**\n * Calculate order total\n * @param {orderItemType[]} orderItems\n */\nexport const calcTotal = function (orderItems) {\n  const items = checkItems(orderItems)\n\n  return items.reduce((total, item) => {\n    const qty = item.qty || 1\n    return (total += item.price * qty)\n  }, 0)\n}\n\n/**\n * @param {orderItemType[]} orderItems\n * @returns {number} number of items\n */\nexport const itemCount = function (orderItems) {\n  return orderItems.reduce((total, item) => (total += item.qty || 1))\n}\n\n/**\n * No changes to `propKey` properties once the order is approved\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnApproval = propKey => o =>\n  o.orderStatus && o.orderStatus !== OrderStatus.PENDING ? propKey : null\n\nconst finalStatus = status =>\n  [OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(status)\n\n/**\n * No changes to `propKey` once order is complete or canceled\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnCompletion = propKey => o =>\n  finalStatus(o.orderStatus) ? null : propKey\n\n/**\n * If not a registered customer, provide shipping & payment details.\n * @param {*} o\n * @param {*} propKey\n * @returns {string | void} the key or `void`\n */\nexport const requiredForGuest = propKey => o => (o.customerId ? null : propKey)\n\n/**\n * Value required to approve order.\n * @param {*} propKey\n */\nexport const requiredForApproval = propKey => o =>\n  o.orderStatus === OrderStatus.APPROVED ? propKey : null\n\n/**\n * Value required to complete order\n * @param {object} o\n * @param {string | string[]} propKey these props are required to comlete the order\n * @returns {string | void} the key or `void`\n */\nexport const requiredForCompletion = propKey => o =>\n  o.orderStatus === OrderStatus.COMPLETE ? propKey : null\n\n/**\n *\n * @param {enum} from\n * @param {enum} to\n * @returns\n */\nconst invalidStatusChange = (from, to) => (o, propVal) =>\n  propVal === to && o[prevmodel].orderStatus === from\n\nconst invalidStatusChanges = [\n  // Can't change back to pending once approved\n  invalidStatusChange(OrderStatus.APPROVED, OrderStatus.PENDING),\n  // Can't change back to pending once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.PENDING),\n  // Can't change back to approved once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.APPROVED),\n  // Can't change directly to shipping from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.SHIPPING),\n  // Can't change directly to complete from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.COMPLETE),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.CANCELED),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.COMPLETE)\n]\n\n/**\n * Check that status changes are valid\n */\nexport const statusChangeValid = (o, propVal) => {\n  if (invalidStatusChanges.some(i => i(o, propVal))) {\n    throw new Error('invalid status change')\n  }\n  return true\n}\n\n/**\n *\n * @param {*} o\n * @param {*} propVal\n */\nexport const orderTotalValid = (o, propVal) =>\n  calcTotal(o.orderItems) === propVal\n\n/**\n * Recalculate order total\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const recalcTotal = (o, propVal) => ({\n  orderTotal: calcTotal(propVal)\n})\n\n/**\n * Updated signature requirement if `orderTotal` above certain value\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const updateSignature = (o, propVal) => ({\n  signatureRequired: calcTotal(propVal) > 999.99 || o.signatureRequired\n})\n\n/**\n * Don't delete orders before they're complete.\n */\nexport function readyToDelete (model) {\n  if (\n    ![OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(model.orderStatus)\n  ) {\n    throw new Error('order must be canceled or completed')\n  }\n  return model\n}\n\n/**\n *\n * @param {Error} error\n * @param {Order} order\n * @param {*} func\n */\nfunction handleError (error, order, func) {\n  const errMsg = { func, orderNo: order.orderNo, error }\n  if (order) order.emit('orderError', errMsg)\n\n  throw new Error(JSON.stringify(errMsg))\n}\n\n/**\n * Callback invoked by adapter when payment is complete\n * @param {{model:Order}} options\n */\nexport async function paymentCompleted (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'confirmationCode',\n    options,\n    payload,\n    paymentCompleted.name\n  )\n  return order.update({ ...changes, orderStatus: OrderStatus.COMPLETE })\n}\n\n/**\n * Callback invoked by shipping adapter when order is picked up.\n * @param {{model:Order}} options\n * @param {string} shipmentId\n */\nexport async function orderShipped (options = {}, payload = {}) {\n  const { model: order } = options\n  const shipmentPayload = checkPayload(\n    'shipmentId',\n    options,\n    payload,\n    orderShipped.name\n  )\n  return order.update({\n    shipmentId: shipmentPayload.shipmentId,\n    orderStatus: OrderStatus.SHIPPING\n  })\n}\n\n/**\n * Callback invoked when order is ready for pickup\n * @param {{ model:Order }} options\n */\nexport async function orderPicked (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'pickupAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update(changes)\n}\n\n/**\n * Callback invoked when shippingAddress is verified (and possibly corrected)\n * @param {{ model:Order }} options\n * @param {string} shippingAddress\n */\nexport async function addressValidated (options = {}, payload = {}) {\n  const { model: order } = options\n  const addressPayload = checkPayload(\n    'shippingAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update({ shippingAddress: addressPayload.shippingAddress })\n}\n\n/**\n * Called by adapter when port recevies response from payment service.\n * @param {{ model:Order }} options\n * @param {*} paymentAuthorization\n */\nexport async function paymentAuthorized (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'paymentStatus',\n    options,\n    payload,\n    paymentAuthorized.name\n  )\n  return order.update({ ...changes, paymentStatus }, false)\n}\n\n/**\n * Called to refund payment when order is canceled.\n * @param {*} options\n * @param {*} payload\n * @returns\n */\nexport async function refundPayment (order) {\n  // call port by same name.\n  order.refundPayment((options, payload) => {\n    const changes = checkPayload(\n      'refundReceipt',\n      options,\n      payload,\n      refundPayment.name\n    )\n    return order.update({ ...changes, orderStatus: OrderStatus.CANCELED })\n  })\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyAddress (order) {\n  console.debug({\n    fn: verifyAddress.name,\n    validateAddress: order.validateAddress\n  })\n  return order.validateAddress(addressValidated)\n}\n\n/**\n * Request the bank or lender to place a hold on\n * the customer account in the amount of the payment\n * due, to be withdrawn once the shipment is safely\n * in our customer's hands, or credited back if things\n * don't work out.\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyPayment (order) {\n  try {\n    /**\n     * @type {Order}\n     */\n    const authorizeOrder = await order.authorizePayment(paymentAuthorized)\n\n    if (!authorizeOrder.paymentDeclined) {\n      throw new Error('payment declined')\n    }\n\n    return authorizeOrder\n  } catch (e) {\n    handleError(e, order, verifyPayment.name)\n  }\n  return order\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n * @throws {'InsufficientInventory'}\n */\nasync function verifyInventory (order) {\n  const inventory = await order.inventory()\n  if (inventory.length < 1) throw new Error('bad inventory ID')\n\n  const insufficient = order.orderItems.filter(item => {\n    const inv = inventory.find(i => i.id === item.itemId)\n    if (!inv) return true\n    if (inv.quantity < item.qty) return true\n    return false\n  })\n\n  if (insufficient.length > 0) {\n    order.emit('lowOrOutOfStock', insufficient)\n    throw new Error(`low or out of stock: ${insufficient.map(i => i.itemId)}`)\n  }\n}\n/**\n * Copy existing customer data into the order\n * or create new customer from order details.\n *\n * @param {Order} order\n * @throws {'InvalidCustomerId'}\n */\nasync function getCustomerOrder (order) {\n  // If an id is given, try fetching the model\n  if (order.customerId) {\n    if (!order.customer) {\n      console.log({ order })\n    }\n    // Use the relation defined in the spec\n    const customer = await order.customer()\n\n    if (!customer) {\n      throw new Error('invalid customer id', order.customerId)\n    }\n\n    // Add customer data to the order\n    const custInfo = { ...customer.decrypt(), firstName: customer.firstName }\n    const update = await order.update(custInfo)\n\n    console.info('update order with data from existing customer', custInfo)\n    return update\n  }\n\n  // Create a new customer from the shipping details\n  if (order.saveShippingDetails) {\n    const custInfo = { ...order.decrypt(), firstName: order.firstName }\n    const customer = await order.customer(custInfo)\n\n    console.info('create new customer with data from order', customer)\n    return order\n  }\n\n  return order\n}\n\n/**\n * Handle a new order:\n * - fetch or save customer info\n * - check item availability\n * - authorize payment\n * - verify shipping address\n */\nconst processPendingOrder = asyncPipe(\n  getCustomerOrder,\n  verifyInventory,\n  verifyPayment,\n  verifyAddress\n)\n\n/**\n * Implements the beginging of the order service workflow.\n * The rest is implemented by the {@link ModelSpecification}.\n * See the port configuration section of {@link Order}.\n */\nconst OrderActions = {\n  /**\n   * Verifies the shipping address and authorizes payment\n   * for the order total when the order is first created,\n   * or when it is updated while still in pending status.\n   *\n   * @param {Order} order - the order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.PENDING]: async order => {\n    try {\n      /**@type {Order} */\n      const processedOrder = await processPendingOrder(order)\n\n      if (processedOrder.autoCheckout()) {\n        runOrderWorkflow(\n          processedOrder.update({ OrderStatus: OrderStatus.APPROVED }, false)\n        )\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    return order\n  },\n\n  /**\n   * If payment is authorized, check inventory.\n   * This kicks off the rest of the workflow,\n   * which is controlled by port event flow.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.APPROVED]: async order => {\n    console.log('typeof order', typeof order)\n    try {\n      if (/approved/i.test(order.paymentStatus)) {\n        return order.pickOrder(orderPicked)\n      }\n      await order.emit('PayAuthFail', 'Payment authorization problem')\n      return order\n    } catch (error) {\n      console.log({ error })\n      handleError(error, order, OrderStatus.APPROVED)\n    }\n    return order\n  },\n\n  /**\n   * Useful if we need to restart tracking.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.SHIPPING]: async order => {\n    try {\n      order.trackShipment(trackingUpdate)\n      console.debug({ func: OrderStatus.SHIPPING, order })\n      await (await order.update({ orderStatus: OrderStatus.SHIPPING })).emit(\n        'orderPicked'\n      )\n    } catch (error) {\n      handleError(error, order, OrderStatus.SHIPPING)\n    }\n    return order\n  },\n\n  /**\n   * Start cancellation process.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.CANCELED]: async order => {\n    try {\n      console.debug({\n        func: OrderStatus.CANCELED,\n        desc: 'order canceled, calling undo',\n        orderNo: order.orderNo\n      })\n      return order.undo()\n    } catch (error) {\n      handleError(error, order, OrderStatus.CANCELED)\n    }\n    return order\n  },\n  /**\n   *\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.COMPLETE]: async order => {\n    // send route to questionnaire, perform analysis, schedule follow-up\n    console.log('customer sentiment analysis, customer care, sales analysis')\n    return order\n  }\n}\n\n/**\n * Call order service workflow - controlled by status\n * @param {Order} order\n * @returns {Promise<Readonly<Order>>}\n */\nexport async function runOrderWorkflow (order) {\n  return OrderActions[order.orderStatus](order)\n}\n\n/**\n * Called on create, update, delete of model instance.\n * @param {{model:Promise<ReadOnly<Order>>}}\n */\nexport async function handleOrderEvent ({ model: order, eventType, changes }) {\n  if (changes?.orderStatus || eventType === 'CREATE') {\n    // console.debug({ fn: handleOrderEvent.name, order })\n    return runOrderWorkflow(order)\n  }\n}\n\n/**\n * Require a signature for orders $1000 and up\n * @param {*} input\n * @param {*} orderTotal\n */\nfunction needsSignature (input, orderTotal) {\n  return typeof input === 'boolean' ? input : orderTotal > 999.99\n}\n\n/** format and classify log entries */\nfunction logMessage (message, type) {\n  const msg = typeof message === 'string' ? message : JSON.stringify(message)\n\n  return {\n    desc: msg.substring(0, 140),\n    type,\n    time: Date.now(),\n    toJSON () {\n      return {\n        desc: this.desc,\n        type,\n        time: new Date(this.time).toUTCString()\n      }\n    }\n  }\n}\n\n/**\n * Returns factory function for the Order model.\n * @type {import('../domain/index.js').modelSpecFactoryFn}\n * @param {*} dependencies - inject dependencies\n */\nexport function makeOrderFactory (dependencies) {\n  return async function createOrder ({\n    orderItems,\n    email = null,\n    lastName = null,\n    firstName = null,\n    customerId = null,\n    billingAddress = null,\n    shippingAddress = null,\n    creditCardNumber = null,\n    shippingPriority = null,\n    autoCheckout = false,\n    saveShippingDetails = false,\n    requireSignature,\n    fibonacci = 10\n  }) {\n    const total = calcTotal(orderItems)\n    const signatureRequired = needsSignature(requireSignature, total)\n    const order = {\n      email,\n      lastName,\n      firstName,\n      customerId,\n      orderItems,\n      creditCardNumber,\n      billingAddress,\n      shippingAddress,\n      signatureRequired,\n      saveShippingDetails,\n      shippingPriority,\n      fibonacci,\n      result: 0,\n      time: 0,\n      estimatedArrival: null,\n      log: [logMessage('order created')],\n      [orderTotal]: total,\n      [orderStatus]: OrderStatus.PENDING,\n      [orderNo]: dependencies.uuid(),\n      desc: 'new order 25',\n      /**\n       * Has payment for the order been authorized?\n       */\n      paymentAccepted () {\n        return true\n      },\n      /**\n       * Proceed to checkout automatically or wait for approval?\n       */\n      autoCheckout () {\n        return autoCheckout\n      },\n      totalItems () {\n        return itemCount(this.orderItems)\n      },\n      total () {\n        return calcTotal(this.orderItems)\n      },\n      addItem (item) {\n        if (checkItem(item)) {\n          this.orderItems.push(item)\n          return true\n        }\n        return false\n      },\n      logEvent (message, type = 'info') {\n        this.log.push(logMessage(message, type))\n      },\n      logError (message) {\n        this.logEvent(message, 'error')\n      },\n      logUndo (message) {\n        this.logEvent(message, 'undo')\n      },\n      logStateChange (message) {\n        this.logEvent(message, 'stateChange')\n      },\n      /**\n       *\n       * @param {viewLog} options\n       * @returns {logMessageFn[]|logMessageFn}\n       */\n      readLog ({ index = null, type = null }) {\n        const indx = parseInt(index)\n        if (indx < this.log.length && indx !== NaN) return this.log[indx]\n        if (type === 'first') return this.log[0]\n        if (type === 'last') return this.log[this.log.length - 1]\n        if (type === 'lastStateChange')\n          return this.log[this.log.lastIndexOf({ type: 'stateChange' })]\n        if (type === 'stateChanges')\n          return this.log.filter(l => l.type === 'stateChange')\n        if (type === 'error') return this.log.filter(l => l.type === 'error')\n        if (type === 'undo') return this.log.filter(l => l.type === 'undo')\n        return this.log\n      }\n    }\n\n    return Object.freeze(order)\n  }\n}\n\n/**\n * Called as command to approve/submit order.\n * @param {Order} order\n */\nexport async function approve (order) {\n  console.debug({ msg: 'got order', order })\n  const approvedOrder = order.updateSync({\n    orderStatus: OrderStatus.APPROVED\n  }, false)\n  console.debug({ approvedOrder })\n  approvedOrder.logStateChange(OrderStatus.APPROVED)\n  return runOrderWorkflow(approvedOrder)\n}\n\n/**\n * Called as command to cancel order.\n * @param {Order} order\n */\nexport async function cancel (order) {\n  const canceledOrder = await order.update({\n    orderStatus: OrderStatus.CANCELED\n  })\n  canceledOrder.logStateChange(OrderStatus.CANCELED)\n  return runOrderWorkflow(canceledOrder)\n}\n\n/**\n * Alias of `approve`\n * @param {Order} order\n * @returns\n */\nexport async function checkout (order) {\n  return approve(order)\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function errorCallback ({ port, model: order, error }) {\n  const errMsg = { error, port, error }\n  console.error(errorCallback.name, errMsg)\n  order.logEvent(errMsg)\n  order.emit(errorCallback.name, errMsg)\n  return order.undo()\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function timeoutCallback ({ port, ports, adapterFn, model: order }) {\n  console.error('timeout...', port)\n  //order.logError(timeoutCallback.name, 'timeout')\n  order.emit(timeoutCallback.name, errMsg)\n}\n\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnInventory (order) {\n  console.log(returnInventory.name)\n  order.logEvent(returnInventory.name, 'timeout')\n  order.emit(returnInventory.name, errMsg)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n * Start process for the shipper to pick the items to return.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnShipment (order) {\n  console.log(returnShipment.name)\n  order.logUndo(returnShipment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\nexport function accountOrder (req, res) {}\n1\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnDelivery (order) {\n  console.log(returnDelivery.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n */\nexport async function cancelPayment (order) {\n  console.log(cancelPayment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n","/**\n * webswitch (c)\n *\n * Websocket clients connect to a common ws server,\n * called a webswitch. When a client sends a message,\n * webswitch broadcasts the message to all other\n * connected clients, including a special webswitch\n * server that acts as an uplink to another network,\n * if one is defined. A Webswitch server can also\n * receive messgages from an uplink and will broadcast\n * those messages to its clients as well.\n */\n\n'use strict'\n\nimport os from 'os'\nimport EventEmitter from 'events'\nimport { nanoid } from 'nanoid'\nimport { AsyncResource } from 'async_hooks'\n\nconst HOSTNAME = 'webswitch.local'\nconst SERVICENAME = 'webswitch'\nconst TIMEOUTEVENT = 'webswitchTimeout'\nconst CONNECTERROR = 'webswitchConnect'\nconst WSOCKETERROR = 'webswitchWsocket'\n\nconst isPrimary = /true/i.test(process.env.SWITCH)\nconst isBackup = /true/i.test(process.env.BACKUP)\nconst debug = /true/i.test(process.env.DEBUG)\nconst heartbeatMs = 10000\nconst sslEnabled = /true/i.test(process.env.SSL_ENABLED)\nconst clearPort = process.env.PORT || 80\nconst cipherPort = process.env.SSL_PORT || 443\nconst activePort = sslEnabled ? cipherPort : clearPort\nconst activeProto = sslEnabled ? 'wss' : 'ws'\nconst activeHost = process.env.DOMAIN || os.hostname()\nconst proto = isPrimary ? activeProto : process.env.SWITCH_PROTO\nconst port = isPrimary ? activePort : process.env.SWITCH_PORT\nconst host = isPrimary ? activeHost : process.env.SWITCH_HOST\nconst apiProto = sslEnabled ? 'https' : 'http'\nconst apiUrl = `${apiProto}://${activeHost}:${activePort}`\n\nfunction localUrl () {\n  const url = `${proto}://${host}:${port}`\n  if (proto && host && port) {\n    return url\n  }\n  if (isPrimary) throw new Error(`invalid url ${url}`)\n  return null\n}\n\nconst States = {\n  STARTING: Symbol('starting'),\n  CONNECTED: Symbol('connected'),\n  DISCONNECTED: Symbol('disconnected'),\n  DISPOSED: Symbol('disposed')\n}\n\n/**\n * Service mesh client impl. Uses websocket and service-locator\n * adapters through ports injected into the {@link mesh} model.\n * Cf. modelSpec by the same name, i.e. `webswitch`. Extends\n * {@link AsyncResource} to handle system reload on the main\n * thread, in which two instances are active for a short time.\n */\nexport class ServiceMeshClient extends AsyncResource {\n  constructor (mesh) {\n    super('webswitch')\n    this.url = localUrl()\n    this.mesh = mesh\n    this.name = SERVICENAME\n    this.isPrimary = isPrimary\n    this.isBackup = isBackup\n    this.pong = new Map()\n    this.heartbeatTimer = new Map()\n    this.state = new Map()\n    this.broker = new EventEmitter()\n    this.headers = {\n      'x-webswitch-host': os.hostname(),\n      'x-webswitch-role': 'node',\n      'x-webswitch-pid': process.pid\n    }\n  }\n\n  /**\n   *\n   * @param {number} asyncId id's instance to kill\n   * @returns {{telemetry:{mem:number,cpu:number}}}\n   */\n  telemetry (asyncId) {\n    return {\n      eventName: 'telemetry',\n      proto: this.name,\n      apiUrl,\n      heartbeatMs,\n      hostname: os.hostname(),\n      role: 'node',\n      pid: process.pid,\n      telemetry: { ...process.memoryUsage(), ...process.cpuUsage() },\n      services: this.mesh.listServices(),\n      socketState: this.mesh.websocketStatus() || 'undefined',\n      clientState: this.state.toString(),\n      asyncId\n    }\n  }\n\n  /**\n   * Zero-config, self-forming mesh network:\n   * Discover URL of service to connect to or, if\n   * this is the service, multicast this url\n   * @returns {Promise<string>} url\n   */\n  async resolveUrl () {\n    console.debug('resolveUrl called')\n    await this.mesh.serviceLocatorInit({\n      serviceUrl: localUrl(),\n      name: this.name,\n      primary: this.isPrimary,\n      backup: this.isBackup\n    })\n    if (this.isPrimary) {\n      await this.mesh.serviceLocatorAnswer()\n      return localUrl()\n    }\n    return this.mesh.serviceLocatorListen()\n  }\n\n  /**\n   * Connect to service mesh broker and run stateful\n   * callbacks in async context to distinguish the old\n   * client instance from the new one created when the\n   * system hot-reloads. Allow listeners to subscribe\n   * to indivdual or all events. Use multicast dns to\n   * resolve broker url. Send binary messages with\n   * protocol and idempotentency headers. Send telemetry\n   * data, including asyncId for identifying context\n   * on socket close.\n   *\n   * @param {*} options\n   * @returns\n   */\n  async connect (options = { binary: true }) {\n    if (\n      options.asyncId &&\n      this.state.get(options.asyncId) === States.DISPOSED\n    ) {\n      console.info('client is disposed')\n      return\n    }\n    this.options = options\n    this.url = await this.resolveUrl()\n    await this.mesh.websocketConnect(this.url, {\n      agent: false,\n      headers: this.headers,\n      protocol: SERVICENAME\n    })\n\n    this.mesh.websocketOnOpen(() => {\n      this.runInAsyncScope(() => {\n        this.state.set(this.asyncId(), States.CONNECTED)\n        console.log('connection open')\n        this.send(this.encode(this.telemetry(this.asyncId())))\n        this.broker.once('timeout', () => this.timeout(this.asyncId()))\n        this.heartbeat(this.asyncId())\n        setTimeout(() => this.sendQueuedMsgs(), 3000).unref()\n      }, this)\n    })\n\n    this.mesh.websocketOnMessage(message => {\n      try {\n        const event = this.decode(message)\n        if (!event.eventName) {\n          debug && console.debug({ missingEventName: event })\n          this.broker.emit('missingEventName', event)\n          return\n        }\n        this.broker.emit(event.eventName, event)\n        this.broker.listeners('*').forEach(listener => listener(event))\n      } catch (error) {\n        console.error({ fn: this.connect.name, error })\n      }\n    })\n\n    this.mesh.websocketOnError(error => {\n      this.emit(WSOCKETERROR, error)\n      console.error({ fn: this.connect.name, error })\n    })\n\n    this.mesh.websocketOnPong(() =>\n      this.runInAsyncScope(() => (this.pong.set(this.asyncId(), true), this))\n    )\n\n    this.mesh.websocketOnClose((code, reason) => {\n      this.runInAsyncScope(() => {\n        this.state.set(this.asyncId(), States.DISCONNECTED)\n        console.log({\n          msg: 'received close frame',\n          asyncId: this.asyncId(),\n          code,\n          reason: reason?.toString()\n        })\n        clearTimeout(this.heartbeatTimer.get(this.asyncId()))\n        if (code === 4040 && reason === this.asyncId()) {\n          console.log('got dup code for this ctx (ie obj inst): die.')\n          return\n        }\n        setTimeout(() => {\n          console.debug('reconnect due to socket close')\n          this.connect({ asyncId: this.asyncId() })\n        }, 10000).unref()\n      }, this)\n    })\n  }\n\n  timeout (asyncId) {\n    console.warn('timeout')\n    this.emit(TIMEOUTEVENT, this.telemetry(asyncId))\n    this.mesh.websocketTerminate()\n    this.state.set(asyncId, States.DISCONNECTED)\n    setTimeout(() => {\n      console.debug('reconnect due to timeout', asyncId)\n      this.connect({ asyncId })\n    }, 5000).unref()\n  }\n\n  heartbeat (asyncId) {\n    if (this.pong) {\n      this.pong.set(this.asyncId(), false)\n      this.mesh.websocketPing()\n      this.heartbeatTimer.set(\n        asyncId,\n        setTimeout(() => this.heartbeat(asyncId), heartbeatMs)\n      )\n      this.heartbeatTimer.get(asyncId).unref()\n    } else {\n      clearTimeout(this.heartbeatTimer.get(asyncId))\n      this.broker.emit('timeout', asyncId)\n    }\n  }\n\n  /**\n   * use binary messages\n   */\n  primitives = {\n    encode: {\n      object: msg => Buffer.from(JSON.stringify(msg)),\n      string: msg => Buffer.from(JSON.stringify(msg)),\n      number: msg => Buffer.from(JSON.stringify(msg)),\n      symbol: msg => console.log('unsupported', msg),\n      undefined: msg => console.log('undefined', msg)\n    },\n    decode: {\n      object: msg => JSON.parse(Buffer.from(msg).toString()),\n      string: msg => JSON.parse(Buffer.from(msg).toString()),\n      number: msg => JSON.parse(Buffer.from(msg).toString()),\n      symbol: msg => console.log('unsupported', msg),\n      undefined: msg => console.error('undefined', msg)\n    }\n  }\n\n  encode (msg) {\n    const encoded = this.primitives.encode[typeof msg](msg)\n    debug && console.debug({ encoded })\n    return encoded\n  }\n\n  decode (msg) {\n    const decoded = this.primitives.decode[typeof msg](msg)\n    debug && console.debug({ decoded })\n    return decoded\n  }\n\n  /**\n   * Convert message to binary and send with protocol and idempotency headers.\n   * If message cannot be sent because of connection state or buffering queue\n   * message in domain object for retry later. Using a domain object ensures\n   * persistence of the queue.\n   *\n   * @param {object} msg\n   * @returns {Promise<boolean>} true if sent, false if not\n   */\n  async send (msg) {\n    const sent = await this.mesh.websocketSend(this.encode(msg), {\n      binary: true,\n      headers: {\n        ...this.headers,\n        'idempotency-key': nanoid()\n      }\n    })\n    if (sent) return true\n    this.mesh.pushSendQueue(msg)\n    return false\n  }\n\n  /**\n   * Send any messages buffered in `sendQueue`.\n   */\n  async sendQueuedMsgs () {\n    try {\n      let sent = true\n      while (this.mesh.sendQueueLength() > 0 && sent) {\n        console.debug('sending queued message')\n        sent = await this.send(this.mesh.popSendQueue())\n      }\n    } catch (error) {\n      console.error({ fn: this.sendQueuedMsgs.name, error })\n    }\n  }\n\n  /**\n   * Connects if needed then sends message to mesh broker service.\n   * @param {*} msg\n   */\n  async publish (msg) {\n    if (this.mesh.websocketDisconnected()) await this.connect()\n    return this.send(msg)\n  }\n\n  /**\n   * Register handler to fire on event.\n   * @param {string} eventName\n   * @param {function()} callback\n   */\n  subscribe (eventName, callback) {\n    this.broker.on(eventName, callback)\n  }\n\n  /**\n   * A new object will be created on system reload.\n   * Dispose of the old one. Run in context to\n   * distinguish between the new and old instance.\n   *\n   * @param {*} code\n   * @param {*} reason\n   */\n  async close (code, reason) {\n    this.runInAsyncScope(async () => {\n      console.debug('closing socket, asyncId:', this.asyncId())\n      this.mesh.websocketClose(code, reason)\n      this.state.set(this.asyncId(), States.DISPOSED)\n      await this.mesh.save() // save queued messages\n      this.broker.removeAllListeners()\n      this.emitDestroy()\n    }, this)\n  }\n}\n\n/**\n * Domain model factory function. This model is\n * used internally by the Aegis framework as a\n * pluggable service mesh client. Implement the\n * the methods below to create a new plugin.\n *\n * @param {*} dependencies injected depedencies\n * @returns\n */\nexport function makeClient (dependencies) {\n  let client\n  return async function ({ listServices }) {\n    return {\n      listServices,\n      sendQueue: [],\n      sendQueueMax: 1000,\n      sendQueueLength () {\n        return this.sendQueue.length\n      },\n      pushSendQueue (msg) {\n        this.sendQueue.push(msg)\n      },\n      popSendQueue () {\n        return this.sendQueue.pop()\n      },\n      getClient () {\n        if (client) return client\n        client = new ServiceMeshClient(this)\n        return client\n      },\n      async connect (options) {\n        this.getClient().connect(options)\n      },\n      async publish (event) {\n        this.getClient().publish(event)\n      },\n      subscribe (eventName, handler) {\n        this.getClient().subscribe(eventName, handler)\n      },\n      async close (code, reason) {\n        this.getClient().close(code, reason)\n      }\n    }\n  }\n}\n","\"use strict\";\n\nimport { Event } from \"./services/event-service\";\n\nexport class EventDispatcher {\n  constructor(adapter = Event) {\n    this.adapter = adapter;\n    this.subscriptions = new Map();\n  }\n\n  registerCallback(topic, callback) {\n    if (this.subscriptions.has(topic)) {\n      this.subscriptions.get(topic).push(callback);\n      return;\n    }\n    this.subscriptions.set(topic, [callback]);\n  }\n\n  async emitEvent(topic, message, method = \"notify\") {\n    await this.adapter[method](topic, message);\n  }\n\n  async init(method = \"listen\") {\n    function emitEvent(topic, message) {\n      this.emitEvent(topic, message);\n    }\n\n    // this.emitEvent(/Channel/, \"remoteRestart\");\n    await this.adapter[method](\n      /Channel/,\n      function ({ topic, message }) {\n        if (this.subscriptions.has(topic)) {\n          this.subscriptions\n            .get(topic)\n            .forEach(callback =>\n              callback({ message, emitEvent: emitEvent.bind(this) })\n            );\n        }\n      }.bind(this)\n    );\n  }\n}\n","\"use strict\";\n\nimport { EventDispatcher } from \"./event-dispatcher\";\nimport { uuid } from \"./domain/utils\";\n\nexport const Registry = {\n  eventNames: {\n    shipOrder: \"orderShipped\",\n    trackShipment: \"outForDelivery\",\n    verifyDelivery: \"deliveryVerified\",\n  },\n\n  sendEvent({ emitEvent, topic, eventData, eventSource, eventName }) {\n    console.log(\"Sending event...\");\n    console.log({ emitEvent, topic, eventData, eventSource, eventName });\n    setTimeout(async () => {\n      await emitEvent(\n        topic,\n        JSON.stringify({\n          eventData,\n          eventName,\n          eventTime: new Date().toUTCString(),\n          eventType: \"commandResponse\",\n          eventSource: eventSource,\n        })\n      );\n    }, 5000);\n  },\n\n  generateShippingEventData(event, externalId) {\n    const trackingId = uuid();\n    const shipmentId = trackingId;\n    const proofOfDelivery = `http://shipping.service.com?proof=${trackingId}`;\n    const eventData = { externalId };\n    if (event.eventName === \"shipOrder\") {\n      return { ...eventData, shipmentId };\n    }\n    if (event.eventName === \"trackShipment\") {\n      return { ...eventData, trackingId, trackingStatus: \"outForDelivery\" };\n    }\n    if (event.eventName === \"verifyDelivery\") {\n      return { ...eventData, proofOfDelivery };\n    }\n  },\n\n  generateShippingMessage(emitEvent, event, externalId) {\n    return {\n      emitEvent,\n      topic: event.eventData.commandResp,\n      eventData: this.generateShippingEventData(event, externalId),\n      eventName: this.eventNames[event.eventName],\n      eventSource: \"shippingService\",\n    };\n  },\n\n  inventoryCallbackFactory() {\n    function inventoryCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const warehouseAddress = /*null;*/ \"1234 warehouse dr, dock 2\";\n      const externalId = event.eventData.commandArgs.externalId;\n      const eventName = /*'outOfStock';*/ \"orderPicked\";\n      this.sendEvent({\n        emitEvent,\n        topic: event.eventData.replyChannel,\n        eventName,\n        eventData: { warehouse_addr: warehouseAddress, externalId },\n        eventSource: \"inventoryService\",\n      });\n    }\n    return inventoryCallback.bind(this);\n  },\n\n  shippingCallbackFactory() {\n    function shippingCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const externalId = event.eventData.commandArgs.externalId;\n      const _message = this.generateShippingMessage(\n        emitEvent,\n        event,\n        externalId\n      );\n      this.sendEvent(_message);\n\n      if (event.eventName === \"trackShipment\") {\n        const eventData = {\n          ..._message.eventData,\n          trackingStatus: \"orderDelivered\",\n        };\n        setTimeout(\n          () =>\n            this.sendEvent({\n              ..._message,\n              eventData,\n              eventName: \"orderDelivered\",\n            }),\n          7000\n        );\n      }\n    }\n    return shippingCallback.bind(this);\n  },\n};\n\nconst dispatcher = new EventDispatcher();\n\ndispatcher.registerCallback(\n  \"inventoryChannel\",\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  \"shippingChannel\",\n  Registry.shippingCallbackFactory()\n);\n\nexport default dispatcher;\n","\"use strict\";\n\nexport const Address = {\n  /**\n   *\n   * @param {string} address US street address\n   */\n  async validateAddress(address) {\n    console.log(\"test validating address...\");\n\n    if (!address) {\n      throw new Error(\"no address provided\");\n    }\n\n    return address;\n  },\n\n};\n","\"use strict\";\n\nimport { EventDispatcher } from \"../../src/event-dispatcher\";\nimport { Registry } from \"../../src/service-registry\";\n\nconst shippingChannel = \"shippingChannel\";\nconst inventoryChannel = \"inventoryChannel\";\n\nconst callbacks = [];\nconst responses = [];\nconst topics = {\n  [shippingChannel]: /shipping/,\n  [inventoryChannel]: /inventory/,\n};\n\nexport function handleEvents(req, res) {\n  const message = JSON.stringify(req.body);\n  const topicName = Object.keys(topics).find(k => topics[k].test(message));\n  if (topicName) {\n    console.log({\n      func: handleEvents.name,\n      msg: \"found topic\",\n      topicName,\n      message,\n      cb: callbacks,\n    });\n\n    callbacks.forEach(callback => {\n      console.log({ name: callback.name, code: callback.toString() });\n      callback({ topicName, message });\n    });\n    console.log(responses);\n    responses.reduceRight(response => res.send(response), \"response\");\n  }\n}\n\nconst Event = {\n  topics: /Channel/,\n  listening: false,\n\n  listen(topic, callback) {\n    callbacks.push(callback);\n  },\n\n  notify(topic, message) {\n    responses.push(message);\n  },\n};\n\nconst dispatcher = new EventDispatcher(Event);\n\ndispatcher.registerCallback(\n  inventoryChannel,\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  shippingChannel,\n  Registry.shippingCallbackFactory()\n);\n\ndispatcher.init();\n","export * from \"./address-service\";\nexport * from \"./payment-service\";\nexport * from \"./shipping-service\";\nexport * from \"./event-service\";\nexport * from \"./inventory-service\";\n","\"use strict\";\n\nimport { Event } from \"../../src/services/event-service\";\n\nfunction sendEvent({ eventData, eventName }) {\n  setTimeout(async () => {\n    await Event.notify(\n      \"orderChannel\",\n      JSON.stringify({\n        eventData,\n        eventName,\n        eventType: \"CommandResponse\",\n        eventTime: new Date().toUTCString(),\n        eventSource: \"Inventory\",\n      })\n    );\n  }, 5000);\n}\n\nexport const Inventory = {\n  async pickOrder({ externalId, lineItems }) {\n    console.log(\"inventory items\");\n    console.log(lineItems);\n    const pickupAddress = \"1234 warehouse dr, dock2\";\n    sendEvent({\n      eventName: \"orderPicked\",\n      eventData: { pickupAddress, externalId },\n    });\n  },\n};\n","\"use strict\";\n\n/**\n * @callback authorizePaymentType\n * @param {string} id\n * @param {number} amount\n * @param {string} source_id\n * @param {string} customer_id\n * @param {boolean} [autocomplete]\n * @returns {Promise<string>}\n */\n\n/**\n * @typedef PaymentService\n * @property {authorizePaymentType} authorizePayment\n * @property {function()} completePayment\n * @property {function()} refundPayment\n */\n\n// import { Client, Environment, ApiError } from \"square\";\n\n// const client = new Client({\n//   environment: Environment.Sandbox,\n//   accessToken: process.env.SQUARE_ACCESS_TOKEN,\n// });\n\nexport const Payment = {\n  /**\n   * @type {authorizePaymentType}\n   * @param {*} id\n   * @param {*} amount\n   * @param {*} source_id\n   * @param {*} customer_id\n   * @param {*} autocomplete\n   * @param {*} currency\n   */\n  async authorizePayment(\n    id,\n    amount,\n    source_id,\n    customer_id,\n    autocomplete = false,\n    currency = \"USD\"\n  ) {\n    console.log(\"mock payment service called\");\n    const payload = {\n      idempotency_key: id,\n      amount_money: {\n        amount,\n        currency,\n      },\n      source_id,\n      autocomplete,\n      customer_id,\n      location_id: \"XK3DBG77NJBFX\",\n      reference_id: \"123456\",\n      note: \"Brief description\",\n      app_fee_money: {\n        amount: 10,\n        currency: \"USD\",\n      },\n    };\n    /*\n    const bodyAmountMoney = {};\n    bodyAmountMoney.amount = 200;\n    bodyAmountMoney.currency = \"USD\";\n\n    const bodyTipMoney = {};\n    bodyTipMoney.amount = 198;\n    bodyTipMoney.currency = \"CHF\";\n\n    const bodyAppFeeMoney = {};\n    bodyAppFeeMoney.amount = 10;\n    bodyAppFeeMoney.currency = \"USD\";\n\n    const body = {\n      sourceId: \"ccof:uIbfJXhXETSP197M3GB\",\n      idempotencyKey: \"4935a656-a929-4792-b97c-8848be85c27c\",\n      amountMoney: bodyAmountMoney,\n    };\n\n    body.tipMoney = bodyTipMoney;\n    body.appFeeMoney = bodyAppFeeMoney;\n    body.delayDuration = \"delay_duration6\";\n    body.autocomplete = true;\n    body.orderId = \"order_id0\";\n    body.customerId = \"VDKXEEKPJN48QDG3BGGFAK05P8\";\n    body.locationId = \"XK3DBG77NJBFX\";\n    body.referenceId = \"123456\";\n    body.note = \"Brief description\";\n\n    // try {\n    //   const {\n    //     result,\n    //     ...httpResponse\n    //   } = await client.paymentsApi.createPayment(body);\n    //   // Get more response info...\n    //   // const { statusCode, headers } = httpResponse;\n    // } catch (error) {\n    //   if (error instanceof ApiError) {\n    //     const errors = error.result;\n    //     // const { statusCode, headers } = error;\n    //   }\n    // }\n    */\n    return \"1234\";\n  },\n\n  /*\n  const response ={\n  \"payment\": {\n    \"id\": \"GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\",\n    \"created_at\": \"2019-07-10T13:23:49.154Z\",\n    \"updated_at\": \"2019-07-10T13:23:49.446Z\",\n    \"amount_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"app_fee_money\": {\n      \"amount\": 10,\n      \"currency\": \"USD\"\n    },\n    \"total_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"status\": \"COMPLETED\",\n    \"source_type\": \"CARD\",\n    \"card_details\": {\n      \"status\": \"CAPTURED\",\n      \"card\": {\n        \"card_brand\": \"VISA\",\n        \"last_4\": \"1111\",\n        \"exp_month\": 7,\n        \"exp_year\": 2026,\n        \"fingerprint\": \"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw\",\n        \"card_type\": \"DEBIT\",\n        \"prepaid_type\": \"PREPAID\",\n        \"bin\": \"411111\"\n      },\n      \"entry_method\": \"ON_FILE\",\n      \"cvv_status\": \"CVV_ACCEPTED\",\n      \"avs_status\": \"AVS_ACCEPTED\",\n      \"auth_result_code\": \"nsAyY2\",\n      \"statement_description\": \"SQ *MY MERCHANT\"\n    },\n    \"location_id\": \"XTI0H92143A39\",\n    \"order_id\": \"m2Hr8Hk8A3CTyQQ1k4ynExg92tO3\",\n    \"reference_id\": \"123456\",\n    \"note\": \"Brief description\",\n    \"customer_id\": \"RDX9Z4XTIZR7MRZJUXNY9HUK6I\",\n    \"receipt_number\": \"GQTF\",\n    \"receipt_url\": \"https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\"\n  }\n}\n  /*\n{\n  \"errors\": [\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"source_id\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"idempotency_key\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"MISSING_REQUIRED_PARAMETER\",\n      \"detail\": \"Field must be set\",\n      \"field\": \"amount_money\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    }\n  ]\n}\n  */\n\n  async completePayment(model) {\n    console.log(\"REAL completing payment: %s\", model.orderNo);\n    return \"1234\";\n  },\n\n  async refundPayment(model) {\n    console.log(\"REAL refunding payment: %s\", model.orderNo);\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('../adapters/event-adapter').EventMessage} EventMessage\n */\n\n/**\n * @typedef {import('../adapters/event-adapter').CommandEvent} CommandEvent\n */\n\n/**\n * @callback shipOrder\n * @param {string} shipTo\n * @param {string} shipFrom\n * @param {string} lineItems\n * @param {string} signature\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @callback trackShipment\n * @param {string} shipmentId\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @typedef {string} functionName\n */\n\n/**\n * @typedef {Object} shippingService formats and parses shipping event messages\n * @property {string} serviceName - programmatic service name in eventSource/Target\n * @property {string} topic - event topic \"shippingChannel\" when sending messasges\n * @property {shipOrder} shipOrder - format event message requesting shipping label and pickup of order\n * @property {trackShipment} trackShipment - report on location/status of parcel\n * @property {function():EventMessage} verifyDelivery - ensure customer recieved parcel\n * @property {function():EventMessage} returnShipment - return to sender if refunding\n * @property {function(functionName,EventMessage):{[key]:string}} getPayload - extract payload\n */\n\nfunction createEventMessage({ requester, service, type, name, id, data }) {\n  return {\n    eventSource: requester,\n    eventTarget: service,\n    eventType: type,\n    eventName: name,\n    eventTime: new Date().getTime(),\n    eventUuid: id,\n    eventData: data,\n  };\n}\n\nfunction createCommandEvent(name, topic, args) {\n  return {\n    commandName: name,\n    commandResp: topic,\n    commandArgs: { ...args },\n  };\n}\n\n/**\n * Shipping service events\n * @type {shippingService}\n */\nexport const Shipping = {\n  serviceName: \"shippingService\",\n  topic: \"shippingChannel\",\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {shipMessage}\n   */\n  shipOrder({\n    shipTo,\n    shipFrom,\n    lineItems,\n    signature,\n    externalId,\n    requester,\n    respondOn,\n  }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.shipOrder.name,\n      id: externalId,\n      data: createCommandEvent(this.shipOrder.name, respondOn, {\n        shipTo,\n        shipFrom,\n        lineItems,\n        signature,\n        externalId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  trackShipment({ externalId, shipmentId, trackingId, requester, respondOn }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.trackShipment.name,\n      id: externalId,\n      data: createCommandEvent(this.trackShipment.name, respondOn, {\n        externalId,\n        shipmentId,\n        trackingId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  verifyDelivery({ requester, respondOn, trackingId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.verifyDelivery.name,\n      id: externalId,\n      data: createCommandEvent(this.verifyDelivery.name, respondOn, {\n        externalId,\n        trackingId,\n      }),\n    });\n  },\n\n  returnShipment({ requester, respondOn, shipmentId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      id: externalId,\n      name: this.returnShipment.name,\n      data: createCommandEvent(this.returnShipment, respondOn, {\n        shipmentId,\n        externalId,\n      }),\n    });\n  },\n\n  getPayload(func, event) {\n    const payloads = {\n      [this.shipOrder.name]: {\n        shipmentId: event.eventData.shipmentId,\n      },\n      [this.trackShipment.name]: {\n        trackingId: event.eventData.trackingId,\n        trackingStatus: event.eventData.trackingStatus,\n      },\n      [this.verifyDelivery.name]: {\n        proofOfDelivery: event.eventData.proofOfDelivery,\n      },\n    };\n    return payloads[func];\n  },\n\n  getProperty(event, key) {\n    return event.eventData[key];\n  },\n};\n"],"sourceRoot":""}