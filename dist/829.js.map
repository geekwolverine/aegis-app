{"version":3,"sources":["webpack://microlib-example/./src/config/accounts.js","webpack://microlib-example/./src/config/index.js","webpack://microlib-example/./src/domain/bind-adapters.js","webpack://microlib-example/./src/domain/index.js","webpack://microlib-example/./src/event-dispatcher.js","webpack://microlib-example/./src/service-registry.js","webpack://microlib-example/./test/mock/address-service.js","webpack://microlib-example/./test/mock/event-service.js","webpack://microlib-example/./test/mock/index.js","webpack://microlib-example/./test/mock/inventory-service.js","webpack://microlib-example/./test/mock/payment-service.js","webpack://microlib-example/./test/mock/shipping-service.js"],"names":["Accounts","endpoint","modelName","factory","dependencies","acctid","makeAdapters","ports","adapters","services","Object","keys","map","port","service","e","console","warn","message","reduce","p","c","validateSpec","spec","missing","filter","key","length","Error","entries","makeModel","mixins","concat","GlobalMixins","bindAdapters","models","values","modelSpecs","EventDispatcher","adapter","Event","subscriptions","Map","topic","callback","has","get","push","set","method","emitEvent","forEach","bind","Registry","eventNames","shipOrder","trackShipment","verifyDelivery","sendEvent","eventData","eventSource","eventName","log","setTimeout","JSON","stringify","eventTime","Date","toUTCString","eventType","generateShippingEventData","event","externalId","trackingId","uuid","shipmentId","proofOfDelivery","trackingStatus","generateShippingMessage","commandResp","inventoryCallbackFactory","inventoryCallback","parse","warehouseAddress","commandArgs","replyChannel","warehouse_addr","shippingCallbackFactory","shippingCallback","_message","dispatcher","registerCallback","Address","validateAddress","address","shippingChannel","inventoryChannel","callbacks","responses","topics","handleEvents","req","res","body","topicName","find","k","test","func","name","msg","cb","code","toString","reduceRight","response","send","listening","listen","notify","init","Inventory","pickOrder","lineItems","pickupAddress","Payment","authorizePayment","id","amount","source_id","customer_id","autocomplete","currency","payload","idempotency_key","amount_money","location_id","reference_id","note","app_fee_money","completePayment","model","orderNo","refundPayment","createEventMessage","requester","type","data","eventTarget","getTime","eventUuid","createCommandEvent","args","commandName","Shipping","serviceName","shipTo","shipFrom","signature","respondOn","returnShipment","getPayload","payloads","getProperty"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxDI,+CA8DO,MA9DP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+DD,GAhFoB;;AAkFrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEQQ,iBA1Je,2BA0JCC,KA1JD,EA0JQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B7H,qBAAO,CAAC8C,GAAR,CAAY,6BAAZ,EAA2C+E,KAAK,CAACC,OAAjD;AAD2B,gDAEpB,MAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG5B,GA7JoB;AA+JfC,eA/Je,yBA+JDF,KA/JC,EA+JM;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB7H,qBAAO,CAAC8C,GAAR,CAAY,4BAAZ,EAA0C+E,KAAK,CAACC,OAAhD;;AADyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1B;AAjKoB,CAAhB,C;;;;;;;;;;;;;;;;;;;AC1BM;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,SAASE,kBAAT,OAA0E;AAAA,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","file":"829.js","sourcesContent":["\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nconst Accounts = {\n  endpoint: 'accounts',\n  modelName: 'Accounts',\n  factory: dependencies => acctid => acctid\n}","export * from './order'\nexport * from './accounts'\n\n// export * from './user'\n// export * from './customer'\n// export * from './inventory'\n// export * from './scheduled-job'\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    endpointUri: string,\n *    port:ports[p],\n *    method:'get'|'post'|'patch'|'delete'\n *    callback: ({\n *      body:string,\n *      headers:{},\n *      params:{},\n *      query:{}}) => Promise<{\n *        body,status,headers,\n *      }>\n *    })\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [endpoints] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n// Service dependencies\nimport * as services from '../../test/mock'\nimport * as adapters from '../adapters'\n// Model properties\nimport * as modelSpecs from '../config'\n\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","\"use strict\";\n\nimport { Event } from \"./services/event-service\";\n\nexport class EventDispatcher {\n  constructor(adapter = Event) {\n    this.adapter = adapter;\n    this.subscriptions = new Map();\n  }\n\n  registerCallback(topic, callback) {\n    if (this.subscriptions.has(topic)) {\n      this.subscriptions.get(topic).push(callback);\n      return;\n    }\n    this.subscriptions.set(topic, [callback]);\n  }\n\n  async emitEvent(topic, message, method = \"notify\") {\n    await this.adapter[method](topic, message);\n  }\n\n  async init(method = \"listen\") {\n    function emitEvent(topic, message) {\n      this.emitEvent(topic, message);\n    }\n\n    // this.emitEvent(/Channel/, \"remoteRestart\");\n    await this.adapter[method](\n      /Channel/,\n      function ({ topic, message }) {\n        if (this.subscriptions.has(topic)) {\n          this.subscriptions\n            .get(topic)\n            .forEach(callback =>\n              callback({ message, emitEvent: emitEvent.bind(this) })\n            );\n        }\n      }.bind(this)\n    );\n  }\n}\n","\"use strict\";\n\nimport { EventDispatcher } from \"./event-dispatcher\";\nimport { uuid } from \"./domain/utils\";\n\nexport const Registry = {\n  eventNames: {\n    shipOrder: \"orderShipped\",\n    trackShipment: \"outForDelivery\",\n    verifyDelivery: \"deliveryVerified\",\n  },\n\n  sendEvent({ emitEvent, topic, eventData, eventSource, eventName }) {\n    console.log(\"Sending event...\");\n    console.log({ emitEvent, topic, eventData, eventSource, eventName });\n    setTimeout(async () => {\n      await emitEvent(\n        topic,\n        JSON.stringify({\n          eventData,\n          eventName,\n          eventTime: new Date().toUTCString(),\n          eventType: \"commandResponse\",\n          eventSource: eventSource,\n        })\n      );\n    }, 5000);\n  },\n\n  generateShippingEventData(event, externalId) {\n    const trackingId = uuid();\n    const shipmentId = trackingId;\n    const proofOfDelivery = `http://shipping.service.com?proof=${trackingId}`;\n    const eventData = { externalId };\n    if (event.eventName === \"shipOrder\") {\n      return { ...eventData, shipmentId };\n    }\n    if (event.eventName === \"trackShipment\") {\n      return { ...eventData, trackingId, trackingStatus: \"outForDelivery\" };\n    }\n    if (event.eventName === \"verifyDelivery\") {\n      return { ...eventData, proofOfDelivery };\n    }\n  },\n\n  generateShippingMessage(emitEvent, event, externalId) {\n    return {\n      emitEvent,\n      topic: event.eventData.commandResp,\n      eventData: this.generateShippingEventData(event, externalId),\n      eventName: this.eventNames[event.eventName],\n      eventSource: \"shippingService\",\n    };\n  },\n\n  inventoryCallbackFactory() {\n    function inventoryCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const warehouseAddress = /*null;*/ \"1234 warehouse dr, dock 2\";\n      const externalId = event.eventData.commandArgs.externalId;\n      const eventName = /*'outOfStock';*/ \"orderPicked\";\n      this.sendEvent({\n        emitEvent,\n        topic: event.eventData.replyChannel,\n        eventName,\n        eventData: { warehouse_addr: warehouseAddress, externalId },\n        eventSource: \"inventoryService\",\n      });\n    }\n    return inventoryCallback.bind(this);\n  },\n\n  shippingCallbackFactory() {\n    function shippingCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const externalId = event.eventData.commandArgs.externalId;\n      const _message = this.generateShippingMessage(\n        emitEvent,\n        event,\n        externalId\n      );\n      this.sendEvent(_message);\n\n      if (event.eventName === \"trackShipment\") {\n        const eventData = {\n          ..._message.eventData,\n          trackingStatus: \"orderDelivered\",\n        };\n        setTimeout(\n          () =>\n            this.sendEvent({\n              ..._message,\n              eventData,\n              eventName: \"orderDelivered\",\n            }),\n          7000\n        );\n      }\n    }\n    return shippingCallback.bind(this);\n  },\n};\n\nconst dispatcher = new EventDispatcher();\n\ndispatcher.registerCallback(\n  \"inventoryChannel\",\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  \"shippingChannel\",\n  Registry.shippingCallbackFactory()\n);\n\nexport default dispatcher;\n","\"use strict\";\n\nexport const Address = {\n  /**\n   *\n   * @param {string} address US street address\n   */\n  async validateAddress(address) {\n    console.log(\"test validating address...\");\n\n    if (!address) {\n      throw new Error(\"no address provided\");\n    }\n\n    return address;\n  },\n\n};\n","\"use strict\";\n\nimport { EventDispatcher } from \"../../src/event-dispatcher\";\nimport { Registry } from \"../../src/service-registry\";\n\nconst shippingChannel = \"shippingChannel\";\nconst inventoryChannel = \"inventoryChannel\";\n\nconst callbacks = [];\nconst responses = [];\nconst topics = {\n  [shippingChannel]: /shipping/,\n  [inventoryChannel]: /inventory/,\n};\n\nexport function handleEvents(req, res) {\n  const message = JSON.stringify(req.body);\n  const topicName = Object.keys(topics).find(k => topics[k].test(message));\n  if (topicName) {\n    console.log({\n      func: handleEvents.name,\n      msg: \"found topic\",\n      topicName,\n      message,\n      cb: callbacks,\n    });\n\n    callbacks.forEach(callback => {\n      console.log({ name: callback.name, code: callback.toString() });\n      callback({ topicName, message });\n    });\n    console.log(responses);\n    responses.reduceRight(response => res.send(response), \"response\");\n  }\n}\n\nconst Event = {\n  topics: /Channel/,\n  listening: false,\n\n  listen(topic, callback) {\n    callbacks.push(callback);\n  },\n\n  notify(topic, message) {\n    responses.push(message);\n  },\n};\n\nconst dispatcher = new EventDispatcher(Event);\n\ndispatcher.registerCallback(\n  inventoryChannel,\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  shippingChannel,\n  Registry.shippingCallbackFactory()\n);\n\ndispatcher.init();\n","export * from \"./address-service\";\nexport * from \"./payment-service\";\nexport * from \"./shipping-service\";\nexport * from \"./event-service\";\nexport * from \"./inventory-service\";\n","\"use strict\";\n\nimport { Event } from \"../../src/services/event-service\";\n\nfunction sendEvent({ eventData, eventName }) {\n  setTimeout(async () => {\n    await Event.notify(\n      \"orderChannel\",\n      JSON.stringify({\n        eventData,\n        eventName,\n        eventType: \"CommandResponse\",\n        eventTime: new Date().toUTCString(),\n        eventSource: \"Inventory\",\n      })\n    );\n  }, 5000);\n}\n\nexport const Inventory = {\n  async pickOrder({ externalId, lineItems }) {\n    console.log(\"inventory items\");\n    console.log(lineItems);\n    const pickupAddress = \"1234 warehouse dr, dock2\";\n    sendEvent({\n      eventName: \"orderPicked\",\n      eventData: { pickupAddress, externalId },\n    });\n  },\n};\n","\"use strict\";\n\n/**\n * @callback authorizePaymentType\n * @param {string} id\n * @param {number} amount\n * @param {string} source_id\n * @param {string} customer_id\n * @param {boolean} [autocomplete]\n * @returns {Promise<string>}\n */\n\n/**\n * @typedef PaymentService\n * @property {authorizePaymentType} authorizePayment\n * @property {function()} completePayment\n * @property {function()} refundPayment\n */\n\n// import { Client, Environment, ApiError } from \"square\";\n\n// const client = new Client({\n//   environment: Environment.Sandbox,\n//   accessToken: process.env.SQUARE_ACCESS_TOKEN,\n// });\n\nexport const Payment = {\n  /**\n   * @type {authorizePaymentType}\n   * @param {*} id\n   * @param {*} amount\n   * @param {*} source_id\n   * @param {*} customer_id\n   * @param {*} autocomplete\n   * @param {*} currency\n   */\n  async authorizePayment(\n    id,\n    amount,\n    source_id,\n    customer_id,\n    autocomplete = false,\n    currency = \"USD\"\n  ) {\n    console.log(\"mock payment service called\");\n    const payload = {\n      idempotency_key: id,\n      amount_money: {\n        amount,\n        currency,\n      },\n      source_id,\n      autocomplete,\n      customer_id,\n      location_id: \"XK3DBG77NJBFX\",\n      reference_id: \"123456\",\n      note: \"Brief description\",\n      app_fee_money: {\n        amount: 10,\n        currency: \"USD\",\n      },\n    };\n    /*\n    const bodyAmountMoney = {};\n    bodyAmountMoney.amount = 200;\n    bodyAmountMoney.currency = \"USD\";\n\n    const bodyTipMoney = {};\n    bodyTipMoney.amount = 198;\n    bodyTipMoney.currency = \"CHF\";\n\n    const bodyAppFeeMoney = {};\n    bodyAppFeeMoney.amount = 10;\n    bodyAppFeeMoney.currency = \"USD\";\n\n    const body = {\n      sourceId: \"ccof:uIbfJXhXETSP197M3GB\",\n      idempotencyKey: \"4935a656-a929-4792-b97c-8848be85c27c\",\n      amountMoney: bodyAmountMoney,\n    };\n\n    body.tipMoney = bodyTipMoney;\n    body.appFeeMoney = bodyAppFeeMoney;\n    body.delayDuration = \"delay_duration6\";\n    body.autocomplete = true;\n    body.orderId = \"order_id0\";\n    body.customerId = \"VDKXEEKPJN48QDG3BGGFAK05P8\";\n    body.locationId = \"XK3DBG77NJBFX\";\n    body.referenceId = \"123456\";\n    body.note = \"Brief description\";\n\n    // try {\n    //   const {\n    //     result,\n    //     ...httpResponse\n    //   } = await client.paymentsApi.createPayment(body);\n    //   // Get more response info...\n    //   // const { statusCode, headers } = httpResponse;\n    // } catch (error) {\n    //   if (error instanceof ApiError) {\n    //     const errors = error.result;\n    //     // const { statusCode, headers } = error;\n    //   }\n    // }\n    */\n    return \"1234\";\n  },\n\n  /*\n  const response ={\n  \"payment\": {\n    \"id\": \"GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\",\n    \"created_at\": \"2019-07-10T13:23:49.154Z\",\n    \"updated_at\": \"2019-07-10T13:23:49.446Z\",\n    \"amount_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"app_fee_money\": {\n      \"amount\": 10,\n      \"currency\": \"USD\"\n    },\n    \"total_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"status\": \"COMPLETED\",\n    \"source_type\": \"CARD\",\n    \"card_details\": {\n      \"status\": \"CAPTURED\",\n      \"card\": {\n        \"card_brand\": \"VISA\",\n        \"last_4\": \"1111\",\n        \"exp_month\": 7,\n        \"exp_year\": 2026,\n        \"fingerprint\": \"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw\",\n        \"card_type\": \"DEBIT\",\n        \"prepaid_type\": \"PREPAID\",\n        \"bin\": \"411111\"\n      },\n      \"entry_method\": \"ON_FILE\",\n      \"cvv_status\": \"CVV_ACCEPTED\",\n      \"avs_status\": \"AVS_ACCEPTED\",\n      \"auth_result_code\": \"nsAyY2\",\n      \"statement_description\": \"SQ *MY MERCHANT\"\n    },\n    \"location_id\": \"XTI0H92143A39\",\n    \"order_id\": \"m2Hr8Hk8A3CTyQQ1k4ynExg92tO3\",\n    \"reference_id\": \"123456\",\n    \"note\": \"Brief description\",\n    \"customer_id\": \"RDX9Z4XTIZR7MRZJUXNY9HUK6I\",\n    \"receipt_number\": \"GQTF\",\n    \"receipt_url\": \"https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\"\n  }\n}\n  /*\n{\n  \"errors\": [\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"source_id\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"idempotency_key\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"MISSING_REQUIRED_PARAMETER\",\n      \"detail\": \"Field must be set\",\n      \"field\": \"amount_money\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    }\n  ]\n}\n  */\n\n  async completePayment(model) {\n    console.log(\"REAL completing payment: %s\", model.orderNo);\n    return \"1234\";\n  },\n\n  async refundPayment(model) {\n    console.log(\"REAL refunding payment: %s\", model.orderNo);\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('../adapters/event-adapter').EventMessage} EventMessage\n */\n\n/**\n * @typedef {import('../adapters/event-adapter').CommandEvent} CommandEvent\n */\n\n/**\n * @callback shipOrder\n * @param {string} shipTo\n * @param {string} shipFrom\n * @param {string} lineItems\n * @param {string} signature\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @callback trackShipment\n * @param {string} shipmentId\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @typedef {string} functionName\n */\n\n/**\n * @typedef {Object} shippingService formats and parses shipping event messages\n * @property {string} serviceName - programmatic service name in eventSource/Target\n * @property {string} topic - event topic \"shippingChannel\" when sending messasges\n * @property {shipOrder} shipOrder - format event message requesting shipping label and pickup of order\n * @property {trackShipment} trackShipment - report on location/status of parcel\n * @property {function():EventMessage} verifyDelivery - ensure customer recieved parcel\n * @property {function():EventMessage} returnShipment - return to sender if refunding\n * @property {function(functionName,EventMessage):{[key]:string}} getPayload - extract payload\n */\n\nfunction createEventMessage({ requester, service, type, name, id, data }) {\n  return {\n    eventSource: requester,\n    eventTarget: service,\n    eventType: type,\n    eventName: name,\n    eventTime: new Date().getTime(),\n    eventUuid: id,\n    eventData: data,\n  };\n}\n\nfunction createCommandEvent(name, topic, args) {\n  return {\n    commandName: name,\n    commandResp: topic,\n    commandArgs: { ...args },\n  };\n}\n\n/**\n * Shipping service events\n * @type {shippingService}\n */\nexport const Shipping = {\n  serviceName: \"shippingService\",\n  topic: \"shippingChannel\",\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {shipMessage}\n   */\n  shipOrder({\n    shipTo,\n    shipFrom,\n    lineItems,\n    signature,\n    externalId,\n    requester,\n    respondOn,\n  }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.shipOrder.name,\n      id: externalId,\n      data: createCommandEvent(this.shipOrder.name, respondOn, {\n        shipTo,\n        shipFrom,\n        lineItems,\n        signature,\n        externalId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  trackShipment({ externalId, shipmentId, trackingId, requester, respondOn }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.trackShipment.name,\n      id: externalId,\n      data: createCommandEvent(this.trackShipment.name, respondOn, {\n        externalId,\n        shipmentId,\n        trackingId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  verifyDelivery({ requester, respondOn, trackingId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.verifyDelivery.name,\n      id: externalId,\n      data: createCommandEvent(this.verifyDelivery.name, respondOn, {\n        externalId,\n        trackingId,\n      }),\n    });\n  },\n\n  returnShipment({ requester, respondOn, shipmentId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      id: externalId,\n      name: this.returnShipment.name,\n      data: createCommandEvent(this.returnShipment, respondOn, {\n        shipmentId,\n        externalId,\n      }),\n    });\n  },\n\n  getPayload(func, event) {\n    const payloads = {\n      [this.shipOrder.name]: {\n        shipmentId: event.eventData.shipmentId,\n      },\n      [this.trackShipment.name]: {\n        trackingId: event.eventData.trackingId,\n        trackingStatus: event.eventData.trackingStatus,\n      },\n      [this.verifyDelivery.name]: {\n        proofOfDelivery: event.eventData.proofOfDelivery,\n      },\n    };\n    return payloads[func];\n  },\n\n  getProperty(event, key) {\n    return event.eventData[key];\n  },\n};\n"],"sourceRoot":""}