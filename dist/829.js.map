{"version":3,"sources":["webpack://microlib-example/./src/adapters/datasources/datasource-file-adapter.js","webpack://microlib-example/./src/adapters/datasources/datasource-mongodb.js","webpack://microlib-example/./src/config/customer.js","webpack://microlib-example/./src/config/index.js","webpack://microlib-example/./src/config/inventory.js","webpack://microlib-example/./src/config/order.js","webpack://microlib-example/./src/config/port-test.js","webpack://microlib-example/./src/config/user.js","webpack://microlib-example/./src/config/webswitch.js","webpack://microlib-example/./src/domain/bind-adapters.js","webpack://microlib-example/./src/domain/index.js","webpack://microlib-example/./src/domain/webswitch.js"],"names":["DataSourceFileAdapter","url","cacheSize","DataSourceFile","DataSourceFileOrder","id","data","console","log","getSecret","process","env","MONGODB_CREDS","user","pass","token","archive","debug","DataSourceAdapterMongoDb","DataSourceMongoDb","DataSourceMongoDbArchive","datasource","factory","name","creds","Customer","modelName","endpoint","dependencies","uuid","nanoid","makeCustomerFactory","validate","validateModel","onDelete","okToDelete","mixins","freezeProperties","requireProperties","validateProperties","propKey","regex","relations","orders","type","foreignKey","commands","decrypt","command","acl","accessControlList","customer","allow","desc","Inventory","makeInventoryFactory","maxnum","values","categories","assetTypes","isValid","_obj","prop","every","p","properties","Order","makeOrderFactory","requiredForGuest","requiredForApproval","requiredForCompletion","freezeOnApproval","freezeOnCompletion","updateProperties","update","recalcTotal","updateSignature","Object","OrderStatus","statusChangeValid","orderTotalValid","readyToDelete","eventHandlers","handleOrderEvent","ports","listen","service","timeout","notify","save","find","validateAddress","keys","producesEvent","disabled","authorizePayment","consumesEvent","undo","cancelPayment","pickOrder","returnInventory","circuitBreaker","portTimeout_pickOrder_order","callVolume","errorRate","intervalMs","shipOrder","callback","orderShipped","returnShipment","portTimeout_shipOrder_order","portRetryFailed_order","fallbackFn","cancel","trackShipment","verifyDelivery","returnDelivery","completePayment","paymentCompleted","refundPayment","cancelShipment","inventory","arrayKey","routes","path","get","req","res","on","chunk","listModels","query","$or","orderNo","$eq","writable","approve","runFibonacci","model","start","Date","now","fibonacci","x","param","parseFloat","result","Number","isNaN","time","serializers","key","value","enabled","PortTest","args","freeze","test","User","userFactory","userMixins","authenticate","createWebToken","verifyWebToken","authorize","applyRateLimits","post","body","userName","password","invokePort","port","WebSwitch","makeClient","internal","serviceLocatorInit","serviceLocatorAsk","serviceLocatorAnswer","websocketConnect","websocketPing","websocketSend","websocketClose","websocketStatus","websocketTerminate","websocketOnClose","websocketOnOpen","websocketOnMessage","websocketOnError","websocketOnPong","makeAdapters","adapters","services","map","e","warn","message","reduce","c","validateSpec","spec","missing","filter","length","Error","entries","makeModel","concat","GlobalMixins","bindAdapters","models","modelSpecs","HOSTNAME","SERVICENAME","TIMEOUTEVENT","CONNECTERROR","WSOCKETERROR","isPrimary","SWITCH","isBackup","BACKUP","DEBUG","heartbeatMs","sslEnabled","SSL_ENABLED","clearPort","PORT","cipherPort","SSL_PORT","activePort","activeProto","activeHost","DOMAIN","os","proto","SWITCH_PROTO","SWITCH_PORT","host","SWITCH_HOST","apiProto","apiUrl","localUrl","ServiceMeshClient","mesh","pong","heartbeatTimer","headers","pid","eventName","hostname","role","telemetry","memoryUsage","cpuUsage","performance","nodeTiming","listServices","socketState","serviceUrl","primary","backup","options","binary","resolveUrl","agent","protocol","useBinary","send","heartbeat","setTimeout","sendQueuedMsgs","unref","missingEventName","emit","listeners","forEach","listener","error","fn","connect","code","reason","msg","toString","clearTimeout","once","sent","enqueue","queueDepth","dequeue","removeAllListeners","EventEmitter","client","sendQueue","sendQueueMax","push","shift","getClient","publish","event","subscribe","handler","close"],"mappings":"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","file":"829.js","sourcesContent":["export const DataSourceFileAdapter = function (url, cacheSize, DataSourceFile) {\n  /**\n   * Datasource adapter for AWS Dynamo DB\n   */\n  class DataSourceFileOrder extends DataSourceFile {\n    save(id, data) {\n      super.save(id, data);\n      console.log(\"DataSourceFileOrder datasource\", id, data);\n    }\n  }\n\n  return DataSourceFileOrder;\n};\n","\"use strict\";\n\nfunction getSecret() {\n  return process.env.MONGODB_CREDS || { user: null, pass: null, token: null };\n}\n\nfunction archive(id) {\n  console.debug(\"mock archive\", id);\n}\n\n/**\n * Datasource adapter factory.\n * @param {string} url database url\n * @param {number} [cacheSize] number of models to keep in cache\n * @param {*} DataSource base class that enables caching\n * @returns {import(\"./datasource\").default}\n */\nexport const DataSourceAdapterMongoDb = function (\n  url,\n  cacheSize,\n  DataSourceMongoDb\n) {\n  /**\n   * MongoDB adapter extends in-memory datasource to support caching.\n   * The cache is always updated first, which allows the system to run\n   * even when the database is offline.\n   */\n  class DataSourceMongoDbArchive extends DataSourceMongoDb {\n    constructor(datasource, factory, name) {\n      super(datasource, factory, name);\n      this.url = url;\n      this.cacheSize = cacheSize;\n      this.creds = getSecret();\n    }\n\n    /**\n     * @override\n     */\n    delete(id) {\n      console.debug(\"archive\", id);\n      archive(id);\n    }\n  }\n\n  return DataSourceMongoDbArchive;\n};\n","'use strict'\n\nimport {\n  validateModel,\n  freezeProperties,\n  validateProperties,\n  requireProperties\n} from '../domain/mixins'\nimport { makeCustomerFactory, okToDelete } from '../domain/customer'\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport { nanoid } from 'nanoid'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Customer = {\n  modelName: 'customer',\n  endpoint: 'customers',\n  dependencies: { uuid: () => nanoid(8) },\n  factory: makeCustomerFactory,\n  validate: validateModel,\n  onDelete: okToDelete,\n  mixins: [\n    freezeProperties('customerId'),\n    requireProperties(\n      'firstName',\n      'lastName',\n      'email',\n      'shippingAddress',\n      'billingAddress',\n      'creditCardNumber'\n    ),\n    validateProperties([\n      {\n        propKey: 'email',\n        // unique: { encrypted: true },\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      }\n    ])\n  ],\n  relations: {\n    orders: {\n      modelName: 'order',\n      type: 'oneToMany',\n      foreignKey: 'customerId'\n    }\n  },\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    }\n  },\n  accessControlList: {\n    customer: {\n      allow: 'read',\n      type: 'relation',\n      desc: 'Allow orders to see customers.'\n    }\n  }\n}\n","export * from './webswitch'\nexport * from './order'\nexport * from './customer'\nexport * from './user'\nexport * from './inventory'\nexport * from './port-test'\n","'use strict'\n\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport {\n  makeInventoryFactory,\n  assetTypes,\n  properties,\n  categories\n} from '../domain/inventory'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  validateProperties\n} from '../domain/mixins'\n\n/**\n * @type {import(\"../domain/order\").ModelSpecification}\n */\nexport const Inventory = {\n  modelName: 'inventory',\n  endpoint: 'inventory',\n  dependencies: {},\n  factory: makeInventoryFactory,\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: 'mongodb://127.0.0.1:27017',\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceMongoDb'\n  // },\n  mixins: [\n    requireProperties('name', 'inStock', 'category', 'price', 'purchaseOrder'),\n    validateProperties([\n      {\n        propKey: 'inStock',\n        typeof: 'number',\n        maxnum: 99999\n      },\n      {\n        propKey: 'category',\n        values: categories\n      },\n      {\n        propKey: 'assetType',\n        values: assetTypes\n      },\n      {\n        propKey: 'properties',\n        isValid: (_obj, prop) => prop.every(p => properties.includes(p))\n      },\n      {\n        propKey: 'price',\n        typeof: 'number',\n        maxnum: 999.99\n      }\n    ]),\n    freezeProperties('*')\n  ],\n  relations: {\n    orders: {\n      modelName: 'order',\n      type: 'oneToMany',\n      foreignKey: 'itemId',\n      desc: 'many items per order'\n    }\n  }\n}\n","'use strict'\n\nimport {\n  makeOrderFactory,\n  readyToDelete,\n  handleOrderEvent,\n  orderShipped,\n  paymentCompleted,\n  OrderStatus,\n  recalcTotal,\n  requiredForCompletion,\n  statusChangeValid,\n  freezeOnApproval,\n  freezeOnCompletion,\n  orderTotalValid,\n  returnInventory,\n  returnShipment,\n  refundPayment,\n  returnDelivery,\n  cancelPayment,\n  updateSignature,\n  requiredForGuest,\n  requiredForApproval,\n  approve,\n  cancel,\n  accountOrder\n} from '../domain/order'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  updateProperties,\n  validateProperties,\n  validateModel\n} from '../domain/mixins'\n\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport { nanoid } from 'nanoid'\nimport { DataSourceFileAdapter } from '../adapters/datasources/datasource-file-adapter'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Order = {\n  modelName: 'order',\n  endpoint: 'orders',\n  factory: makeOrderFactory,\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: 'mongodb://127.0.0.1:27017',\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceMongoDb'\n  // },\n  // datasource: {\n  //   factory: DataSourceFileAdapter,\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceFile'\n  // },\n  dependencies: { uuid: () => nanoid(8) },\n  mixins: [\n    requireProperties(\n      'orderItems',\n      requiredForGuest([\n        'lastName',\n        'firstName',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'email'\n      ]),\n      requiredForApproval('paymentAuthorization'),\n      requiredForCompletion('proofOfDelivery')\n    ),\n    freezeProperties(\n      'orderNo',\n      'customerId',\n      freezeOnApproval([\n        'email',\n        'lastName',\n        'firstName',\n        'orderItems',\n        'orderTotal',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'paymentAuthorization'\n      ]),\n      freezeOnCompletion('*')\n    ),\n    updateProperties([\n      {\n        propKey: 'orderItems',\n        update: recalcTotal\n      },\n      {\n        propKey: 'orderItems',\n        update: updateSignature\n      }\n    ]),\n    validateProperties([\n      {\n        propKey: 'orderStatus',\n        values: Object.values(OrderStatus),\n        isValid: statusChangeValid\n      },\n      {\n        propKey: 'orderTotal',\n        maxnum: 99999.99,\n        isValid: orderTotalValid\n      },\n      {\n        propKey: 'email',\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      },\n      {\n        propKey: 'phone',\n        regex: 'phone'\n      }\n    ])\n  ],\n  validate: validateModel,\n  onDelete: readyToDelete,\n  eventHandlers: [handleOrderEvent],\n  ports: {\n    listen: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    notify: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    save: {\n      service: 'Persistence',\n      type: 'outbound',\n      timeout: 0\n    },\n    find: {\n      service: 'Persistence',\n      type: 'outbound',\n      timeout: 0\n    },\n    validateAddress: {\n      service: 'Address',\n      type: 'outbound',\n      keys: 'shippingAddress',\n      producesEvent: 'addressValidated',\n      disabled: true\n    },\n    authorizePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      keys: 'paymentStatus',\n      consumesEvent: 'startWorkflow',\n      producesEvent: 'paymentAuthorized',\n      undo: cancelPayment,\n      disabled: true\n    },\n    pickOrder: {\n      service: 'Inventory',\n      type: 'outbound',\n      keys: 'pickupAddress',\n      consumesEvent: 'itemsAvailable',\n      producesEvent: 'orderPicked',\n      undo: returnInventory,\n      circuitBreaker: {\n        portTimeout_pickOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    shipOrder: {\n      service: 'Shipping',\n      type: 'outbound',\n      callback: orderShipped,\n      consumesEvent: 'orderPicked',\n      producesEvent: 'orderShipped',\n      undo: returnShipment,\n      circuitBreaker: {\n        portTimeout_shipOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        },\n        portRetryFailed_order: {\n          callVolume: 3,\n          errorRate: 2,\n          intervalMs: 60000,\n          fallbackFn: cancel\n        },\n        default: {\n          callVolume: 3,\n          errorRate: 3,\n          intervalMs: 60000\n        }\n      }\n    },\n    trackShipment: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: ['trackingStatus', 'trackingId'],\n      consumesEvent: 'orderShipped',\n      producesEvent: 'orderDelivered',\n      circuitBreaker: {\n        portRetryFailed_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    verifyDelivery: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: 'proofOfDelivery',\n      consumesEvent: 'orderDelivered',\n      producesEvent: 'deliveryVerified',\n      undo: returnDelivery\n    },\n    completePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      callback: paymentCompleted,\n      consumesEvent: 'deliveryVerified',\n      producesEvent: 'orderComplete',\n      undo: refundPayment\n    },\n    cancelShipment: {\n      service: 'Shipping',\n      type: 'outbound'\n    },\n    refundPayment: {\n      service: 'Payment',\n      type: 'outbound'\n    }\n  },\n  relations: {\n    customer: {\n      modelName: 'customer',\n      type: 'manyToOne',\n      foreignKey: 'customerId',\n      desc: 'Many orders per customer, just one customer per order'\n    },\n    inventory: {\n      modelName: 'inventory',\n      type: 'containsMany',\n      foreignKey: 'itemId',\n      arrayKey: 'orderItems',\n      desc: 'An order contains a list of inventory items to ship.'\n    }\n  },\n  routes: [\n    {\n      path: '/orders/filter',\n      get: (req, res, ports) => {\n        res.on('data', chunk => {\n          console.log(chunk)\n        })\n\n        res.on('done', () => {\n          console.log('done')\n        })\n\n        ports.listModels({\n          query: {\n            $or: [{ orderNo: { $eq: '123' } }, { orderNo: { $eq: '345' } }]\n          },\n          writable: res\n        })\n      }\n    }\n  ],\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    },\n    approve: {\n      command: approve,\n      acl: ['write', 'approve']\n    },\n    cancel: {\n      command: cancel,\n      acl: ['write', 'cancel']\n    },\n    runFibonacci: {\n      command: model => {\n        const start = Date.now()\n        function fibonacci (x) {\n          if (x === 0) {\n            return 0\n          }\n          if (x === 1) {\n            return 1\n          }\n          return fibonacci(x - 1) + fibonacci(x - 2)\n        }\n        const param = parseFloat(model.fibonacci)\n        return {\n          result: fibonacci(Number.isNaN(param) ? 10 : param),\n          time: Date.now() - start\n        }\n      },\n      acl: ['read', 'write']\n    }\n  },\n  serializers: [\n    {\n      on: 'deserialize',\n      key: 'creditCardNumber',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'shippingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'billingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    }\n  ]\n}\n","'use strict'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const PortTest = {\n  modelName: 'PortTest',\n  endpoint: 'port-test',\n  factory: dependencies => (...args) =>\n    Object.freeze({ ...dependencies, args }),\n  ports: {\n    test: {\n      service: 'test',\n      type: 'inbound',\n      timeout: 3000\n    }\n  }\n}\n","'use strict'\n\nimport { validateModel } from '../domain/mixins'\nimport { userFactory, userMixins } from '../domain/user'\nimport { uuid } from '../domain/utils'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const User = {\n  modelName: 'user',\n  endpoint: 'users',\n  dependencies: { uuid },\n  factory: userFactory,\n  mixins: userMixins,\n  validate: validateModel,\n  ports: {\n    authenticate: {\n      service: 'auth',\n      type: 'inbound'\n    },\n    createWebToken: {\n      service: 'auth',\n      type: 'outbound'\n    },\n    verifyWebToken: {\n      service: 'auth',\n      type: 'outbound'\n    },\n    authorize: {\n      service: 'authz',\n      type: 'inbound'\n    },\n    applyRateLimits: {\n      service: 'authz',\n      type: 'inbound'\n    }\n  },\n  routes: [\n    {\n      path: '/users/login',\n      post: (req, res, ports) => {\n        const { userName, password } = req.body\n        return ports.invokePort({\n          port: 'authenticate',\n          args: [userName, password]\n        })\n      }\n    }\n  ],\n  relations: {\n    customer: {\n      foreignKey: 'customerId',\n      type: 'oneToOne',\n      modelName: 'customer'\n    }\n  }\n}\n","'use strict'\n\nimport { makeClient } from '../domain/webswitch'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const WebSwitch = {\n  modelName: 'webswitch',\n  endpoint: 'service-mesh',\n  factory: makeClient,\n  internal: true,\n  ports: {\n    serviceLocatorInit: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAsk: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAnswer: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketConnect: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketPing: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketSend: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketStatus: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketTerminate: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnOpen: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnMessage: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnError: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnPong: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    }\n  }\n}\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n/**\n * @callback controller\n * @param {Request} req\n * @param {Response} res\n */\n\n/**\n * @typedef {{\n *  [path: string]: {\n *    get?: controller,\n *    post?: controller,\n *    patch?: controller,\n *    delete?:controller\n *   }\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [routes] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\n/**\n * @callback addModqqqqel\n * @param {{ searchTerm1, searchTerm2, searchTermN }} input\n * @returns {Promise<Model>}\n */\n\n/**\n * @callback editModel\n * @param {{ id:string, changes:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findModel\n * @param {{ id:string, query:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findRelatedModels\n * @param {{ query:object, relation:string }} input\n * @returns { Promise<{Model,[Model]}> }\n */\n\n/**\n * @callback listModels\n * @param {{ query:object }} input e.g. { searchTerm1 : 'val', ...etc }\n * @returns { [Promise<Model>] }\n */\n\n/**\n * @callback executeCommand\n * @param {{ id:string }} input\n * @returns { Model }\n */\n\n/**\n * @typedef DomainPortAPI\n * @property { addModel } addModel\n * @property { editModel } editModel\n * @property { listModels } listModels\n * @property { findModel } findModel\n * @property { findRelatedModels } findModel\n * @property { removeModel } removeModel\n * @property { executeCommand } executeCommand\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n\n// Service dependencies\nimport * as services from '../services'\nimport * as adapters from '../adapters'\nimport * as ports from '../domain/ports'\n// Models\nimport * as modelSpecs from '../config'\n\n/**\n *\n * @param {ModelSpecification} spec\n */\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","/**\n * webswitch (c)\n *\n * Websocket clients connect to a common ws server,\n * called a webswitch. When a client sends a message,\n * webswitch broadcasts the message to all other\n * connected clients, including a special webswitch\n * server that acts as an uplink to another network,\n * if one is defined. A Webswitch server can also\n * receive messgages from an uplink and will broadcast\n * those messages to its clients as well.\n */\n\n'use strict'\n\nimport os from 'os'\nimport EventEmitter from 'events'\nimport { nanoid } from 'nanoid'\nimport { AsyncResource } from 'async_hooks'\n\nconst HOSTNAME = 'webswitch.local'\nconst SERVICENAME = 'webswitch'\nconst TIMEOUTEVENT = 'webswitchTimeout'\nconst CONNECTERROR = 'webswitchConnect'\nconst WSOCKETERROR = 'webswitchWsocket'\n\nconst isPrimary = /true/i.test(process.env.SWITCH)\nconst isBackup = /true/i.test(process.env.BACKUP)\nconst debug = /true/i.test(process.env.DEBUG)\nconst heartbeatMs = 10000\nconst sslEnabled = /true/i.test(process.env.SSL_ENABLED)\nconst clearPort = process.env.PORT || 80\nconst cipherPort = process.env.SSL_PORT || 443\nconst activePort = sslEnabled ? cipherPort : clearPort\nconst activeProto = sslEnabled ? 'wss' : 'ws'\nconst activeHost = process.env.DOMAIN || os.hostname()\nconst proto = isPrimary ? activeProto : process.env.SWITCH_PROTO\nconst port = isPrimary ? activePort : process.env.SWITCH_PORT\nconst host = isPrimary ? activeHost : process.env.SWITCH_HOST\nconst apiProto = sslEnabled ? 'https' : 'http'\nconst apiUrl = `${apiProto}://${activeHost}:${activePort}`\n\nfunction localUrl () {\n  const url = `${proto}://${host}:${port}`\n  if (proto && host && port) {\n    return url\n  }\n  if (isPrimary) throw new Error(`invalid url ${url}`)\n  return null\n}\n\n/**\n * Service mesh client impl. Uses websocket and service-locator\n * adapters through ports injected into the {@link mesh} model.\n * Cf. modelSpec by the same name, i.e. `webswitch`. Extends\n * {@link AsyncResource} to handle system reload on the main\n * thread, in which two instances are active for a short time.\n */\nexport class ServiceMeshClient extends EventEmitter {\n  constructor (mesh) {\n    super('webswitch')\n    this.url = localUrl()\n    this.mesh = mesh\n    this.name = SERVICENAME\n    this.isPrimary = isPrimary\n    this.isBackup = isBackup\n    this.pong = true\n    this.heartbeatTimer = 3000\n    this.headers = {\n      'x-webswitch-host': os.hostname(),\n      'x-webswitch-role': 'node',\n      'x-webswitch-pid': process.pid\n    }\n  }\n\n  /**\n   *\n   * @param {number} asyncId id's instance to kill\n   * @returns {{telemetry:{mem:number,cpu:number}}}\n   */\n  telemetry () {\n    return {\n      eventName: 'telemetry',\n      proto: this.name,\n      apiUrl,\n      heartbeatMs,\n      hostname: os.hostname(),\n      role: 'node',\n      pid: process.pid,\n      telemetry: {\n        ...process.memoryUsage(),\n        ...process.cpuUsage(),\n        ...performance.nodeTiming\n      },\n      services: this.mesh.listServices(),\n      socketState: this.mesh.websocketStatus() || 'undefined'\n    }\n  }\n\n  /**\n   * Zero-config, self-forming mesh network:\n   * Discover URL of service to connect to or, if\n   * this is the service, multicast this url\n   * @returns {Promise<string>} url\n   */\n  async resolveUrl () {\n    await this.mesh.serviceLocatorInit({\n      serviceUrl: localUrl(),\n      name: this.name,\n      primary: this.isPrimary,\n      backup: this.isBackup\n    })\n    if (this.isPrimary) {\n      await this.mesh.serviceLocatorAnswer()\n      return localUrl()\n    }\n    return this.mesh.serviceLocatorAsk()\n  }\n\n  /**\n   * Connect to service mesh broker and run stateful\n   * callbacks in async context to distinguish the old\n   * client instance from the new one created when the\n   * system hot-reloads. Allow listeners to subscribe\n   * to indivdual or all events. Use multicast dns to\n   * resolve broker url. Send binary messages with\n   * protocol and idempotentency headers. Send telemetry\n   * data, including asyncId for identifying context\n   * on socket close.\n   *\n   * @param {*} options\n   * @returns\n   */\n  async connect (options = { binary: true }) {\n    this.options = options\n    this.url = await this.resolveUrl()\n\n    this.mesh.websocketConnect(this.url, {\n      agent: false,\n      headers: this.headers,\n      protocol: SERVICENAME,\n      useBinary: true\n    })\n\n    this.mesh.websocketOnOpen(() => {\n      console.log('connection open')\n      this.send(this.telemetry())\n      this.heartbeat()\n      setTimeout(() => this.sendQueuedMsgs(), 3000).unref()\n    })\n\n    this.mesh.websocketOnMessage(message => {\n      if (!message.eventName) {\n        debug && console.debug({ missingEventName: message })\n        this.emit('missingEventName', message)\n        return\n      }\n      try {\n        this.emit(message.eventName, message)\n        this.listeners('*').forEach(listener => listener(message))\n      } catch (error) {\n        console.error({ fn: this.connect.name, error })\n      }\n    })\n\n    this.mesh.websocketOnError(error => {\n      this.emit(WSOCKETERROR, error)\n      console.error({ fn: this.connect.name, error })\n    })\n\n    this.mesh.websocketOnClose((code, reason) => {\n      console.log({\n        msg: 'received close frame',\n        code,\n        reason: reason?.toString()\n      })\n      clearTimeout(this.heartbeatTimer)\n      setTimeout(() => {\n        console.debug('reconnect due to socket close')\n        this.connect()\n      }, 10000).unref()\n    })\n\n    this.mesh.websocketOnPong(() => (this.pong = true))\n    this.once('timeout', this.timeout)\n  }\n\n  timeout () {\n    console.warn('timeout')\n    this.emit(TIMEOUTEVENT, this.telemetry())\n    this.mesh.websocketTerminate()\n    setTimeout(() => {\n      console.debug('reconnect due to timeout')\n      this.connect()\n    }, 5000).unref()\n  }\n\n  heartbeat () {\n    if (this.pong) {\n      this.pong = false\n      this.mesh.websocketPing()\n      this.heartbeatTimer = setTimeout(() => this.heartbeat(), heartbeatMs)\n      this.heartbeatTimer.unref()\n    } else {\n      clearTimeout(this.heartbeatTimer)\n      this.emit('timeout')\n    }\n  }\n\n  /**\n   * Convert message to binary and send with protocol and idempotency headers.\n   * If message cannot be sent because of connection state or buffering queue\n   * message in domain object for retry later. Using a domain object ensures\n   * persistence of the queue across boots.\n   *\n   * @param {object} msg\n   * @returns {Promise<boolean>} true if sent, false if not\n   */\n  send (msg) {\n    const sent = this.mesh.websocketSend(msg, {\n      headers: {\n        ...this.headers,\n        'idempotency-key': nanoid()\n      }\n    })\n    if (sent) return true\n    this.mesh.enqueue(msg)\n    return false\n  }\n\n  /**\n   * Send any messages buffered in `sendQueue`.\n   */\n  sendQueuedMsgs () {\n    let sent = true\n    while (this.mesh.queueDepth() > 0 && sent)\n      sent = this.send(this.mesh.dequeue())\n  }\n\n  /**\n   * Connects if needed then sends message to mesh broker service.\n   * @param {*} msg\n   */\n  publish (msg) {\n    return this.send(msg)\n  }\n\n  /**\n   * Register handler to fire on event.\n   * @param {string} eventName\n   * @param {function()} callback\n   */\n  subscribe (eventName, callback) {\n    this.on(eventName, callback)\n  }\n\n  /**\n   * A new object will be created on system reload.\n   * Dispose of the old one. Run in context to\n   * distinguish between the new and old instance.\n   *\n   * @param {*} code\n   * @param {*} reason\n   */\n  async close (code, reason) {\n    console.debug('closing socket')\n    await this.mesh.save() // save queued messages\n    this.removeAllListeners()\n    this.mesh.websocketClose(code, reason)\n  }\n}\n\n/**\n * Domain model factory function. This model is\n * used internally by the Aegis framework as a\n * pluggable service mesh client. Implement the\n * the methods below to create a new plugin.\n *\n * @param {*} dependencies injected depedencies\n * @returns\n */\nexport function makeClient (dependencies) {\n  let client\n  return async function ({ listServices }) {\n    return {\n      listServices,\n      sendQueue: [],\n      sendQueueMax: 1000,\n\n      queueDepth () {\n        return this.sendQueue.length\n      },\n\n      enqueue (msg) {\n        this.sendQueue.push(msg)\n      },\n\n      dequeue () {\n        return this.sendQueue.shift()\n      },\n\n      getClient () {\n        if (client) return client\n        client = new ServiceMeshClient(this)\n        return client\n      },\n\n      async connect (options) {\n        this.getClient().connect(options)\n      },\n\n      async publish (event) {\n        this.getClient().publish(event)\n      },\n\n      subscribe (eventName, handler) {\n        this.getClient().subscribe(eventName, handler)\n      },\n\n      async close (code, reason) {\n        this.getClient().close(code, reason)\n      }\n    }\n  }\n}\n"],"sourceRoot":""}