{"version":3,"sources":["webpack://microlib-example/./src/config/webswitch.js","webpack://microlib-example/./src/domain/bind-adapters.js","webpack://microlib-example/./src/domain/index.js","webpack://microlib-example/./src/domain/mixins.js","webpack://microlib-example/./src/domain/webswitch.js"],"names":["WebSwitch","modelName","endpoint","factory","makeClient","internal","ports","serviceLocatorInit","service","type","timeout","serviceLocatorAsk","serviceLocatorListen","serviceLocatorAnswer","websocketConnect","stype","websocketPing","websocketSend","websocketClose","websocketStatus","websocketTerminate","websocketDisconnected","websocketOnClose","websocketOnOpen","websocketOnMessage","websocketOnError","websocketOnPong","makeAdapters","adapters","services","Object","keys","map","port","e","console","warn","message","reduce","p","c","validateSpec","spec","missing","filter","key","length","Error","entries","makeModel","mixins","dependencies","concat","GlobalMixins","bindAdapters","models","values","modelSpecs","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","model","changes","JSON","parse","stringify","updates","compose","updated","updateMixins","o","name","cb","mixinSet","Map","has","set","eventMask","update","create","onload","handleUpdateEvent","event","isUpdate","decrypted","decrypt","isObject","containsUpdates","changeList","every","k","util","error","fn","validateModel","input","v","sort","a","b","order","apply","output","enableEvent","onUpdate","onCreate","onLoad","enabled","enableValidation","onCreateAndUpdate","onAll","never","addValidation","config","some","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","freezeProperties","preventUpdates","mutations","includes","requireProperties","requireProps","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","unknownProps","qs","rejectUnknownProperties","RegEx","email","ipv4Address","ipv6Address","phone","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","propKey","Validator","tests","isValid","regex","maxnum","maxlen","validateProperties","validate","invalid","updateProperties","updaters","updateProps","u","invokePort","args","log","func","then","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","value","x","encryptPersonalInfo","HOSTNAME","SERVICENAME","TIMEOUTEVENT","CONNECTERROR","WSOCKETERROR","isPrimary","process","env","SWITCH","isBackup","BACKUP","debug","DEBUG","heartbeatMs","sslEnabled","SSL_ENABLED","clearPort","PORT","cipherPort","SSL_PORT","activePort","activeProto","activeHost","DOMAIN","os","proto","SWITCH_PROTO","SWITCH_PORT","host","SWITCH_HOST","apiProto","apiUrl","localUrl","url","States","STARTING","CONNECTED","DISCONNECTED","DISPOSED","primitives","encode","object","msg","Buffer","from","number","symbol","undefined","decode","toString","ServiceMeshClient","mesh","pong","heartbeatTimer","state","broker","EventEmitter","headers","pid","asyncId","eventName","hostname","role","telemetry","memoryUsage","cpuUsage","listServices","socketState","clientState","serviceUrl","primary","backup","options","binary","get","info","resolveUrl","agent","protocol","runInAsyncScope","send","once","heartbeat","setTimeout","sendQueuedMsgs","unref","missingEventName","emit","listeners","forEach","listener","connect","code","reason","clearTimeout","encoded","decoded","nanoid","sent","pushSendQueue","sendQueueLength","popSendQueue","callback","on","save","removeAllListeners","emitDestroy","AsyncResource","client","sendQueue","sendQueueMax","push","pop","getClient","publish","subscribe","handler","close"],"mappings":"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","file":"829.js","sourcesContent":["'use strict'\n\nimport { makeClient } from '../domain/webswitch'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const WebSwitch = {\n  modelName: 'webswitch',\n  endpoint: 'service-mesh',\n  factory: makeClient,\n  internal: true,\n  ports: {\n    serviceLocatorInit: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAsk: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorListen: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAnswer: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketConnect: {\n      service: 'websocket',\n      stype: 'outbound',\n      timeout: 3000\n    },\n    websocketPing: {\n      service: 'websocket',\n      stype: 'outbound',\n      timeout: 3000\n    },\n    websocketSend: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketStatus: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketTerminate: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketDisconnected: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnOpen: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnMessage: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnError: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnPong: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    }\n  }\n}\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n/**\n * @callback controller\n * @param {Request} req\n * @param {Response} res\n */\n\n/**\n * @typedef {{\n *  [path: string]: {\n *    get?: controller,\n *    post?: controller,\n *    patch?: controller,\n *    delete?:controller\n *   }\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [routes] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\n/**\n * @callback addModqqqqel\n * @param {{ searchTerm1, searchTerm2, searchTermN }} input\n * @returns {Promise<Model>}\n */\n\n/**\n * @callback editModel\n * @param {{ id:string, changes:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findModel\n * @param {{ id:string, query:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findRelatedModels\n * @param {{ query:object, relation:string }} input\n * @returns { Promise<{Model,[Model]}> }\n */\n\n/**\n * @callback listModels\n * @param {{ query:object }} input e.g. { searchTerm1 : 'val', ...etc }\n * @returns { [Promise<Model>] }\n */\n\n/**\n * @callback executeCommand\n * @param {{ id:string }} input\n * @returns { Model }\n */\n\n/**\n * @typedef DomainPortAPI\n * @property { addModel } addModel\n * @property { editModel } editModel\n * @property { listModels } listModels\n * @property { findModel } findModel\n * @property { findRelatedModels } findModel\n * @property { removeModel } removeModel\n * @property { executeCommand } executeCommand\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n\n// Service dependencies\nimport * as services from '../services'\nimport * as adapters from '../adapters'\n// Models\nimport * as modelSpecs from '../config'\n\n/**\n *\n * @param {ModelSpecification} spec\n */\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","'use strict'\n\nimport { hash, encrypt, decrypt, compose } from '../domain/utils'\nimport util from 'util'\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol('prevModel')\n/**\n * private key to access validation config\n */\nexport const validations = Symbol('validations')\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol('pre'),\n  post: Symbol('post')\n}\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol('preUpdateMixins'),\n  [mixinType.post]: Symbol('postUpdateMixins')\n}\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre]\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post]\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate (model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)) // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes\n\n  const updated = { ...model, ...updates }\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins (type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error('invalid mixin type')\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map()\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb())\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet\n    }\n  }\n  return o\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2 //  0100 Load\n}\n\nfunction handleUpdateEvent (model, updates, event) {\n  const isUpdate = eventMask.update & event\n  const decrypted = isUpdate ? model.decrypt() : {}\n  return {\n    ...model,\n    ...updates,\n    ...decrypted\n  }\n}\n\nfunction isObject (p) {\n  return p != null && typeof p === 'object'\n}\n\nfunction containsUpdates (model, changes, event) {\n  try {\n    if (!changes) return false\n    if (eventMask.update & event) {\n      const changeList = Object.keys(changes)\n      if (changeList.length < 1) return false\n\n      if (\n        changeList.every(\n          k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n        )\n      ) {\n        return false\n      }\n    }\n    return true\n  } catch (error) {\n    console.error({ fn: containsUpdates.name, error })\n  }\n  return false\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see {@link eventMask}.\n */\nexport function validateModel (model, changes, event) {\n  if (!model || !changes || !event) return {}\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) }\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input)\n\n  const updated = { ...model, ...updates }\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated)\n}\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent (onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0\n\n  if (onUpdate) {\n    enabled |= eventMask.update\n  }\n  if (onCreate) {\n    enabled |= eventMask.create\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload\n  }\n  return enabled\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate: enableEvent(true, false, false),\n    /**\n     * Validation runs on create.\n     */\n    onCreate: enableEvent(false, true, false),\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate: enableEvent(true, true, false),\n    /**\n     * Validation runs on load.\n     */\n    onLoad: enableEvent(false, false, true),\n    /**\n     * Validation runs on all events.\n     */\n    onAll: enableEvent(true, true, true),\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never: enableEvent(false, false, false)\n  }\n})()\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation ({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || []\n\n  if (config.some(v => v.name === name)) {\n    console.warn('duplicate validation name', name)\n    return model\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }]\n  }\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys (o, ...propKeys) {\n  if (!propKeys || !o) return null\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === 'function') return k(o)\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key))\n    if (k === '*') return Object.keys(o)\n    return k\n  })\n  return keys.flat()\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    encryptProperties () {\n      return encryptProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    }),\n\n    decrypt () {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n}\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys)\n\n    const mutations = Object.keys(obj).filter(key => keys.includes(key))\n    if (mutations?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${mutations}`)\n    }\n  }\n\n  return {\n    freezeProperties () {\n      preventUpdates(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20\n    })\n  }\n}\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function requireProps (obj) {\n    const missing = keys.filter(key => key && !obj[key])\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`)\n    }\n  }\n  return {\n    requireProperties () {\n      requireProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 90\n    })\n  }\n}\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function hashPwds (obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    hashPasswords () {\n      return hashPwds(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    })\n  }\n}\n\nconst internalPropList = []\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps () {\n    const keys = parseKeys(o, ...propKeys)\n    const allowList = keys.concat(internalPropList)\n\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key))\n\n    if (unknownProps?.length > 0) {\n      qs\n      throw new Error(`invalid properties: ${unknownProps}`)\n    }\n  }\n\n  return {\n    rejectUnknownProperties () {\n      return rejectUnknownProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: rejectUnknownProps.name,\n      input: enableValidation.onUpdate,\n      order: 10\n    })\n  }\n}\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test (expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr\n    return _expr.test(val)\n  }\n}\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:numbertp\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness (v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal\n  return o.listSync({ [v.propKey]: compareVal }).length < 1\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal)\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid (v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal)\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate (obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey]\n\n      if (!propVal) {\n        return false\n      }\n      return !Validator.isValid(v, obj, propVal)\n    })\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`)\n    }\n  }\n\n  return {\n    validateProperties () {\n      validate(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 50\n    })\n  }\n}\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps (obj) {\n    const updates = updaters.filter(u => obj[u.propKey])\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n\n  return {\n    updateProperties () {\n      return updateProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 30\n    })\n  }\n}\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort () {\n      console.log({ func: 'invokePort', fn, args })\n      return this[fn](...args).then(o => o)\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'invokePort',\n      output: enableValidation.onUpdate,\n      order: 85\n    })\n  }\n}\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o)\n  }\n\n  return {\n    ...o,\n    async execMethod () {\n      const model = await functionType[typeof fn](fn, this, ...args)\n      return model\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'execMethod',\n      output: enableValidation.onUpdate,\n      order: 40\n    })\n  }\n}\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args)\n  }\n}\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`)\n  }\n  return propKey\n}\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr\n    throw new Error(`${x} invalid`)\n  }\n}\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n)\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo]\n\nexport default GlobalMixins\n","/**\n * webswitch (c)\n *\n * Websocket clients connect to a common ws server,\n * called a webswitch. When a client sends a message,\n * webswitch broadcasts the message to all other\n * connected clients, including a special webswitch\n * server that acts as an uplink to another network,\n * if one is defined. A Webswitch server can also\n * receive messgages from an uplink and will broadcast\n * those messages to its clients as well.\n */\n\n'use strict'\n\nimport os from 'os'\nimport EventEmitter from 'events'\nimport { nanoid } from 'nanoid'\nimport { AsyncResource } from 'async_hooks'\n\nconst HOSTNAME = 'webswitch.local'\nconst SERVICENAME = 'webswitch'\nconst TIMEOUTEVENT = 'webswitchTimeout'\nconst CONNECTERROR = 'webswitchConnect'\nconst WSOCKETERROR = 'webswitchWsocket'\n\nconst isPrimary = /true/i.test(process.env.SWITCH)\nconst isBackup = /true/i.test(process.env.BACKUP)\nconst debug = /true/i.test(process.env.DEBUG)\nconst heartbeatMs = 10000\nconst sslEnabled = /true/i.test(process.env.SSL_ENABLED)\nconst clearPort = process.env.PORT || 80\nconst cipherPort = process.env.SSL_PORT || 443\nconst activePort = sslEnabled ? cipherPort : clearPort\nconst activeProto = sslEnabled ? 'wss' : 'ws'\nconst activeHost = process.env.DOMAIN || os.hostname()\nconst proto = isPrimary ? activeProto : process.env.SWITCH_PROTO\nconst port = isPrimary ? activePort : process.env.SWITCH_PORT\nconst host = isPrimary ? activeHost : process.env.SWITCH_HOST\nconst apiProto = sslEnabled ? 'https' : 'http'\nconst apiUrl = `${apiProto}://${activeHost}:${activePort}`\n\nfunction localUrl () {\n  const url = `${proto}://${host}:${port}`\n  if (proto && host && port) {\n    return url\n  }\n  if (isPrimary) throw new Error(`invalid url ${url}`)\n  return null\n}\n\nconst States = {\n  STARTING: Symbol('starting'),\n  CONNECTED: Symbol('connected'),\n  DISCONNECTED: Symbol('disconnected'),\n  DISPOSED: Symbol('disposed')\n}\n\n/**\n * use binary messages\n */\nconst primitives = {\n  encode: {\n    object: msg => Buffer.from(JSON.stringify(msg)),\n    string: msg => Buffer.from(JSON.stringify(msg)),\n    number: msg => Buffer.from(JSON.stringify(msg)),\n    symbol: msg => console.log('unsupported', msg),\n    undefined: msg => console.log('undefined', msg)\n  },\n  decode: {\n    object: msg => JSON.parse(Buffer.from(msg).toString()),\n    string: msg => JSON.parse(Buffer.from(msg).toString()),\n    number: msg => JSON.parse(Buffer.from(msg).toString()),\n    symbol: msg => console.log('unsupported', msg),\n    undefined: msg => console.error('undefined', msg)\n  }\n}\n\n/**\n * Service mesh client impl. Uses websocket and service-locator\n * adapters through ports injected into the {@link mesh} model.\n * Cf. modelSpec by the same name, i.e. `webswitch`. Extends\n * {@link AsyncResource} to handle system reload on the main\n * thread, in which two instances are active for a short time.\n */\nexport class ServiceMeshClient extends AsyncResource {\n  constructor (mesh) {\n    super('webswitch')\n    this.url = localUrl()\n    this.mesh = mesh\n    this.name = SERVICENAME\n    this.isPrimary = isPrimary\n    this.isBackup = isBackup\n    this.pong = new Map()\n    this.heartbeatTimer = new Map()\n    this.state = new Map()\n    this.broker = new EventEmitter()\n    this.headers = {\n      'x-webswitch-host': os.hostname(),\n      'x-webswitch-role': 'node',\n      'x-webswitch-pid': process.pid\n    }\n  }\n\n  /**\n   *\n   * @param {number} asyncId id's instance to kill\n   * @returns {{telemetry:{mem:number,cpu:number}}}\n   */\n  telemetry (asyncId) {\n    return {\n      eventName: 'telemetry',\n      proto: this.name,\n      apiUrl,\n      heartbeatMs,\n      hostname: os.hostname(),\n      role: 'node',\n      pid: process.pid,\n      telemetry: { ...process.memoryUsage(), ...process.cpuUsage() },\n      services: this.mesh.listServices(),\n      socketState: this.mesh.websocketStatus() || 'undefined',\n      clientState: this.state.toString(),\n      asyncId\n    }\n  }\n\n  /**\n   * Zero-config, self-forming mesh network:\n   * Discover URL of service to connect to or, if\n   * this is the service, multicast this url\n   * @returns {Promise<string>} url\n   */\n  async resolveUrl () {\n    console.debug('resolveUrl called')\n    await this.mesh.serviceLocatorInit({\n      serviceUrl: localUrl(),\n      name: this.name,\n      primary: this.isPrimary,\n      backup: this.isBackup\n    })\n    if (this.isPrimary) {\n      await this.mesh.serviceLocatorAnswer()\n      return localUrl()\n    }\n    return this.mesh.serviceLocatorListen()\n  }\n\n  /**\n   * Connect to service mesh broker and run stateful\n   * callbacks in async context to distinguish the old\n   * client instance from the new one created when the\n   * system hot-reloads. Allow listeners to subscribe\n   * to indivdual or all events. Use multicast dns to\n   * resolve broker url. Send binary messages with\n   * protocol and idempotentency headers. Send telemetry\n   * data, including asyncId for identifying context\n   * on socket close.\n   *\n   * @param {*} options\n   * @returns\n   */\n  async connect (options = { binary: true }) {\n    if (\n      options.asyncId &&\n      this.state.get(options.asyncId) === States.DISPOSED\n    ) {\n      console.info('client is disposed')\n      return\n    }\n    this.options = options\n    this.url = await this.resolveUrl()\n    await this.mesh.websocketConnect(this.url, {\n      agent: false,\n      headers: this.headers,\n      protocol: SERVICENAME\n    })\n\n    this.mesh.websocketOnOpen(() => {\n      this.runInAsyncScope(() => {\n        this.state.set(this.asyncId(), States.CONNECTED)\n        console.log('connection open')\n        this.send(this.encode(this.telemetry(this.asyncId())))\n        this.broker.once('timeout', () => this.timeout(this.asyncId()))\n        this.heartbeat(this.asyncId())\n        setTimeout(() => this.sendQueuedMsgs(), 3000).unref()\n      }, this)\n    })\n\n    this.mesh.websocketOnMessage(message => {\n      try {\n        const event = this.decode(message)\n        if (!event.eventName) {\n          debug && console.debug({ missingEventName: event })\n          this.broker.emit('missingEventName', event)\n          return\n        }\n        this.broker.emit(event.eventName, event)\n        this.broker.listeners('*').forEach(listener => listener(event))\n      } catch (error) {\n        console.error({ fn: this.connect.name, error })\n      }\n    })\n\n    this.mesh.websocketOnError(error => {\n      this.emit(WSOCKETERROR, error)\n      console.error({ fn: this.connect.name, error })\n    })\n\n    this.mesh.websocketOnPong(() =>\n      this.runInAsyncScope(() => (this.pong.set(this.asyncId(), true), this))\n    )\n\n    this.websocketOnClose(() => {\n      this.runInAsyncScope((code, reason) => {\n        this.state.set(this.asyncId(), States.DISCONNECTED)\n        console.log({\n          msg: 'received close frame',\n          asyncId: this.asyncId(),\n          code,\n          reason: reason?.toString()\n        })\n        clearTimeout(this.heartbeatTimer.get(this.asyncId()))\n        if (code === 4040 && reason === this.asyncId()) {\n          console.log('got dup code for this ctx (ie obj inst): die.')\n          return\n        }\n        setTimeout(() => {\n          console.debug('reconnect due to socket close')\n          this.connect({ asyncId: this.asyncId() })\n        }, 10000).unref()\n      })\n    })\n  }\n\n  timeout (asyncId) {\n    console.warn('timeout')\n    this.emit(TIMEOUTEVENT, this.telemetry(asyncId))\n    this.mesh.websocketTerminate()\n    this.state.set(asyncId, States.DISCONNECTED)\n    setTimeout(() => {\n      console.debug('reconnect due to timeout', asyncId)\n      this.connect({ asyncId })\n    }, 5000).unref()\n  }\n\n  heartbeat (asyncId) {\n    if (this.pong) {\n      this.pong.set(asyncId, false)\n      this.mesh.websocketPing()\n      this.heartbeatTimer.set(\n        asyncId,\n        setTimeout(() => this.heartbeat(asyncId), heartbeatMs)\n      )\n      this.heartbeatTimer.get(asyncId).unref()\n    } else {\n      clearTimeout(this.heartbeatTimer.get(asyncId))\n      this.broker.emit('timeout', asyncId)\n    }\n  }\n\n  encode (msg) {\n    const encoded = primitives.encode[typeof msg](msg)\n    debug && console.debug({ encoded })\n    return encoded\n  }\n\n  decode (msg) {\n    const decoded = primitives.decode[typeof msg](msg)\n    debug && console.debug({ decoded })\n    return decoded\n  }\n\n  /**\n   * Convert message to binary and send with protocol and idempotency headers.\n   * If message cannot be sent because of connection state or buffering queue\n   * message in domain object for retry later. Using a domain object ensures\n   * persistence of the queue.\n   *\n   * @param {object} msg\n   * @returns {Promise<boolean>} true if sent, false if not\n   */\n  async send (msg) {\n    const sent = await this.mesh.websocketSend(this.encode(msg), {\n      binary: true,\n      headers: {\n        ...this.headers,\n        'idempotency-key': nanoid()\n      }\n    })\n    if (sent) return true\n    this.mesh.pushSendQueue(msg)\n    return false\n  }\n\n  /**\n   * Send any messages buffered in `sendQueue`.\n   */\n  async sendQueuedMsgs () {\n    try {\n      let sent = true\n      while (this.mesh.sendQueueLength() > 0 && sent) {\n        console.debug('sending queued message')\n        sent = await this.send(this.mesh.popSendQueue())\n      }\n    } catch (error) {\n      console.error({ fn: this.sendQueuedMsgs.name, error })\n    }\n  }\n\n  /**\n   * Connects if needed then sends message to mesh broker service.\n   * @param {*} msg\n   */\n  async publish (msg) {\n    if (this.mesh.websocketDisconnected()) await this.connect()\n    return this.send(msg)\n  }\n\n  /**\n   * Register handler to fire on event.\n   * @param {string} eventName\n   * @param {function()} callback\n   */\n  subscribe (eventName, callback) {\n    this.broker.on(eventName, callback)\n  }\n\n  /**\n   * A new object will be created on system reload.\n   * Dispose of the old one. Run in context to\n   * distinguish between the new and old instance.\n   *\n   * @param {*} code\n   * @param {*} reason\n   */\n  async close (code, reason) {\n    this.runInAsyncScope(async () => {\n      console.debug('closing socket, asyncId:', this.asyncId())\n      this.mesh.websocketClose(code, reason)\n      this.state.set(this.asyncId(), States.DISPOSED)\n      await this.mesh.save() // save queued messages\n      this.broker.removeAllListeners()\n      this.emitDestroy()\n    }, this)\n  }\n}\n\n/**\n * Domain model factory function. This model is\n * used internally by the Aegis framework as a\n * pluggable service mesh client. Implement the\n * the methods below to create a new plugin.\n *\n * @param {*} dependencies injected depedencies\n * @returns\n */\nexport function makeClient (dependencies) {\n  let client\n  return async function ({ listServices }) {\n    return {\n      listServices,\n      sendQueue: [],\n      sendQueueMax: 1000,\n      sendQueueLength () {\n        return this.sendQueue.length\n      },\n      pushSendQueue (msg) {\n        this.sendQueue.push(msg)\n      },\n      popSendQueue () {\n        return this.sendQueue.pop()\n      },\n      getClient () {\n        if (client) return client\n        client = new ServiceMeshClient(this)\n        return client\n      },\n      async connect (options) {\n        this.getClient().connect(options)\n      },\n      async publish (event) {\n        this.getClient().publish(event)\n      },\n      subscribe (eventName, handler) {\n        this.getClient().subscribe(eventName, handler)\n      },\n      async close (code, reason) {\n        this.getClient().close(code, reason)\n      }\n    }\n  }\n}\n"],"sourceRoot":""}