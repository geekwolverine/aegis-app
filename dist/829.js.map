{"version":3,"sources":["webpack://microlib-example/./src/config/webswitch.js","webpack://microlib-example/./src/domain/bind-adapters.js","webpack://microlib-example/./src/domain/index.js","webpack://microlib-example/./src/domain/webswitch.js"],"names":["WebSwitch","modelName","endpoint","factory","makeClient","internal","ports","serviceLocatorInit","service","type","timeout","serviceLocatorAsk","serviceLocatorListen","serviceLocatorAnswer","websocketConnect","stype","websocketPing","websocketSend","websocketClose","websocketStatus","websocketTerminate","websocketDisconnected","websocketOnClose","websocketOnOpen","websocketOnMessage","websocketOnError","websocketOnPong","makeAdapters","adapters","services","Object","keys","map","port","e","console","warn","message","reduce","p","c","validateSpec","spec","missing","filter","key","length","Error","entries","makeModel","mixins","dependencies","concat","GlobalMixins","bindAdapters","models","values","modelSpecs","HOSTNAME","SERVICENAME","TIMEOUTEVENT","CONNECTERROR","WSOCKETERROR","isPrimary","test","process","env","SWITCH","isBackup","BACKUP","debug","DEBUG","heartbeatMs","sslEnabled","SSL_ENABLED","clearPort","PORT","cipherPort","SSL_PORT","activePort","activeProto","activeHost","DOMAIN","os","proto","SWITCH_PROTO","SWITCH_PORT","host","SWITCH_HOST","apiProto","apiUrl","localUrl","url","States","STARTING","Symbol","CONNECTED","DISCONNECTED","DISPOSED","primitives","encode","object","msg","Buffer","from","JSON","stringify","string","number","symbol","log","undefined","decode","parse","toString","error","ServiceMeshClient","mesh","name","pong","Map","heartbeatTimer","state","broker","EventEmitter","headers","pid","asyncId","eventName","hostname","role","telemetry","memoryUsage","cpuUsage","listServices","socketState","clientState","serviceUrl","primary","backup","options","binary","get","info","resolveUrl","agent","protocol","runInAsyncScope","set","send","once","heartbeat","setTimeout","sendQueuedMsgs","unref","event","missingEventName","emit","listeners","forEach","listener","fn","connect","code","reason","clearTimeout","encoded","decoded","nanoid","sent","pushSendQueue","sendQueueLength","popSendQueue","callback","on","save","removeAllListeners","emitDestroy","AsyncResource","client","sendQueue","sendQueueMax","push","pop","getClient","publish","subscribe","handler","close"],"mappings":"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","file":"829.js","sourcesContent":["'use strict'\n\nimport { makeClient } from '../domain/webswitch'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const WebSwitch = {\n  modelName: 'webswitch',\n  endpoint: 'service-mesh',\n  factory: makeClient,\n  internal: true,\n  ports: {\n    serviceLocatorInit: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAsk: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorListen: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAnswer: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketConnect: {\n      service: 'websocket',\n      stype: 'outbound',\n      timeout: 3000\n    },\n    websocketPing: {\n      service: 'websocket',\n      stype: 'outbound',\n      timeout: 3000\n    },\n    websocketSend: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketStatus: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketTerminate: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketDisconnected: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnOpen: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnMessage: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnError: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnPong: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    }\n  }\n}\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n/**\n * @callback controller\n * @param {Request} req\n * @param {Response} res\n */\n\n/**\n * @typedef {{\n *  [path: string]: {\n *    get?: controller,\n *    post?: controller,\n *    patch?: controller,\n *    delete?:controller\n *   }\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [routes] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\n/**\n * @callback addModqqqqel\n * @param {{ searchTerm1, searchTerm2, searchTermN }} input\n * @returns {Promise<Model>}\n */\n\n/**\n * @callback editModel\n * @param {{ id:string, changes:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findModel\n * @param {{ id:string, query:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findRelatedModels\n * @param {{ query:object, relation:string }} input\n * @returns { Promise<{Model,[Model]}> }\n */\n\n/**\n * @callback listModels\n * @param {{ query:object }} input e.g. { searchTerm1 : 'val', ...etc }\n * @returns { [Promise<Model>] }\n */\n\n/**\n * @callback executeCommand\n * @param {{ id:string }} input\n * @returns { Model }\n */\n\n/**\n * @typedef DomainPortAPI\n * @property { addModel } addModel\n * @property { editModel } editModel\n * @property { listModels } listModels\n * @property { findModel } findModel\n * @property { findRelatedModels } findModel\n * @property { removeModel } removeModel\n * @property { executeCommand } executeCommand\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n\n// Service dependencies\nimport * as services from '../services'\nimport * as adapters from '../adapters'\n// Models\nimport * as modelSpecs from '../config'\n\n/**\n *\n * @param {ModelSpecification} spec\n */\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","/**\n * webswitch (c)\n *\n * Websocket clients connect to a common ws server,\n * called a webswitch. When a client sends a message,\n * webswitch broadcasts the message to all other\n * connected clients, including a special webswitch\n * server that acts as an uplink to another network,\n * if one is defined. A Webswitch server can also\n * receive messgages from an uplink and will broadcast\n * those messages to its clients as well.\n */\n\n'use strict'\n\nimport os from 'os'\nimport EventEmitter from 'events'\nimport { nanoid } from 'nanoid'\nimport { AsyncResource } from 'async_hooks'\n\nconst HOSTNAME = 'webswitch.local'\nconst SERVICENAME = 'webswitch'\nconst TIMEOUTEVENT = 'webswitchTimeout'\nconst CONNECTERROR = 'webswitchConnect'\nconst WSOCKETERROR = 'webswitchWsocket'\n\nconst isPrimary = /true/i.test(process.env.SWITCH)\nconst isBackup = /true/i.test(process.env.BACKUP)\nconst debug = /true/i.test(process.env.DEBUG)\nconst heartbeatMs = 10000\nconst sslEnabled = /true/i.test(process.env.SSL_ENABLED)\nconst clearPort = process.env.PORT || 80\nconst cipherPort = process.env.SSL_PORT || 443\nconst activePort = sslEnabled ? cipherPort : clearPort\nconst activeProto = sslEnabled ? 'wss' : 'ws'\nconst activeHost = process.env.DOMAIN || os.hostname()\nconst proto = isPrimary ? activeProto : process.env.SWITCH_PROTO\nconst port = isPrimary ? activePort : process.env.SWITCH_PORT\nconst host = isPrimary ? activeHost : process.env.SWITCH_HOST\nconst apiProto = sslEnabled ? 'https' : 'http'\nconst apiUrl = `${apiProto}://${activeHost}:${activePort}`\n\nfunction localUrl () {\n  const url = `${proto}://${host}:${port}`\n  if (proto && host && port) {\n    return url\n  }\n  if (isPrimary) throw new Error(`invalid url ${url}`)\n  return null\n}\n\nconst States = {\n  STARTING: Symbol('starting'),\n  CONNECTED: Symbol('connected'),\n  DISCONNECTED: Symbol('disconnected'),\n  DISPOSED: Symbol('disposed')\n}\n\n/**\n * use binary messages\n */\nconst primitives = {\n  encode: {\n    object: msg => Buffer.from(JSON.stringify(msg)),\n    string: msg => Buffer.from(JSON.stringify(msg)),\n    number: msg => Buffer.from(JSON.stringify(msg)),\n    symbol: msg => console.log('unsupported', msg),\n    undefined: msg => console.log('undefined', msg)\n  },\n  decode: {\n    object: msg => JSON.parse(Buffer.from(msg).toString()),\n    string: msg => JSON.parse(Buffer.from(msg).toString()),\n    number: msg => JSON.parse(Buffer.from(msg).toString()),\n    symbol: msg => console.log('unsupported', msg),\n    undefined: msg => console.error('undefined', msg)\n  }\n}\n\n/**\n * Service mesh client impl. Uses websocket and service-locator\n * adapters through ports injected into the {@link mesh} model.\n * Cf. modelSpec by the same name, i.e. `webswitch`. Extends\n * {@link AsyncResource} to handle system reload on the main\n * thread, in which two instances are active for a short time.\n */\nexport class ServiceMeshClient extends AsyncResource {\n  constructor (mesh) {\n    super('webswitch')\n    this.url = localUrl()\n    this.mesh = mesh\n    this.name = SERVICENAME\n    this.isPrimary = isPrimary\n    this.isBackup = isBackup\n    this.pong = new Map()\n    this.heartbeatTimer = new Map()\n    this.state = new Map()\n    this.broker = new EventEmitter()\n    this.headers = {\n      'x-webswitch-host': os.hostname(),\n      'x-webswitch-role': 'node',\n      'x-webswitch-pid': process.pid\n    }\n  }\n\n  /**\n   *\n   * @param {number} asyncId id's instance to kill\n   * @returns {{telemetry:{mem:number,cpu:number}}}\n   */\n  telemetry (asyncId) {\n    return {\n      eventName: 'telemetry',\n      proto: this.name,\n      apiUrl,\n      heartbeatMs,\n      hostname: os.hostname(),\n      role: 'node',\n      pid: process.pid,\n      telemetry: { ...process.memoryUsage(), ...process.cpuUsage() },\n      services: this.mesh.listServices(),\n      socketState: this.mesh.websocketStatus() || 'undefined',\n      clientState: this.state.toString(),\n      asyncId\n    }\n  }\n\n  /**\n   * Zero-config, self-forming mesh network:\n   * Discover URL of service to connect to or, if\n   * this is the service, multicast this url\n   * @returns {Promise<string>} url\n   */\n  async resolveUrl () {\n    console.debug('resolveUrl called')\n    await this.mesh.serviceLocatorInit({\n      serviceUrl: localUrl(),\n      name: this.name,\n      primary: this.isPrimary,\n      backup: this.isBackup\n    })\n    if (this.isPrimary) {\n      await this.mesh.serviceLocatorAnswer()\n      return localUrl()\n    }\n    return this.mesh.serviceLocatorListen()\n  }\n\n  /**\n   * Connect to service mesh broker and run stateful\n   * callbacks in async context to distinguish the old\n   * client instance from the new one created when the\n   * system hot-reloads. Allow listeners to subscribe\n   * to indivdual or all events. Use multicast dns to\n   * resolve broker url. Send binary messages with\n   * protocol and idempotentency headers. Send telemetry\n   * data, including asyncId for identifying context\n   * on socket close.\n   *\n   * @param {*} options\n   * @returns\n   */\n  async connect (options = { binary: true }) {\n    if (\n      options.asyncId &&\n      this.state.get(options.asyncId) === States.DISPOSED\n    ) {\n      console.info('client is disposed')\n      return\n    }\n    this.options = options\n    this.url = await this.resolveUrl()\n    await this.mesh.websocketConnect(this.url, {\n      agent: false,\n      headers: this.headers,\n      protocol: SERVICENAME\n    })\n\n    this.mesh.websocketOnOpen(() => {\n      this.runInAsyncScope(() => {\n        this.state.set(this.asyncId(), States.CONNECTED)\n        console.log('connection open')\n        this.send(this.encode(this.telemetry(this.asyncId())))\n        this.broker.once('timeout', () => this.timeout(this.asyncId()))\n        this.heartbeat(this.asyncId())\n        setTimeout(() => this.sendQueuedMsgs(), 3000).unref()\n      }, this)\n    })\n\n    this.mesh.websocketOnMessage(message => {\n      try {\n        const event = this.decode(message)\n        if (!event.eventName) {\n          debug && console.debug({ missingEventName: event })\n          this.broker.emit('missingEventName', event)\n          return\n        }\n        this.broker.emit(event.eventName, event)\n        this.broker.listeners('*').forEach(listener => listener(event))\n      } catch (error) {\n        console.error({ fn: this.connect.name, error })\n      }\n    })\n\n    this.mesh.websocketOnError(error => {\n      this.emit(WSOCKETERROR, error)\n      console.error({ fn: this.connect.name, error })\n    })\n\n    this.mesh.websocketOnPong(() =>\n      this.runInAsyncScope(() => (this.pong.set(this.asyncId(), true), this))\n    )\n\n    this.websocketOnClose(() => {\n      this.runInAsyncScope((code, reason) => {\n        this.state.set(this.asyncId(), States.DISCONNECTED)\n        console.log({\n          msg: 'received close frame',\n          asyncId: this.asyncId(),\n          code,\n          reason: reason?.toString()\n        })\n        clearTimeout(this.heartbeatTimer.get(this.asyncId()))\n        if (code === 4040 && reason === this.asyncId()) {\n          console.log('got dup code for this ctx (ie obj inst): die.')\n          return\n        }\n        setTimeout(() => {\n          console.debug('reconnect due to socket close')\n          this.connect({ asyncId: this.asyncId() })\n        }, 10000).unref()\n      })\n    })\n  }\n\n  timeout (asyncId) {\n    console.warn('timeout')\n    this.emit(TIMEOUTEVENT, this.telemetry(asyncId))\n    this.mesh.websocketTerminate()\n    this.state.set(asyncId, States.DISCONNECTED)\n    setTimeout(() => {\n      console.debug('reconnect due to timeout', asyncId)\n      this.connect({ asyncId })\n    }, 5000).unref()\n  }\n\n  heartbeat (asyncId) {\n    if (this.pong) {\n      this.pong.set(asyncId, false)\n      this.mesh.websocketPing()\n      this.heartbeatTimer.set(\n        asyncId,\n        setTimeout(() => this.heartbeat(asyncId), heartbeatMs)\n      )\n      this.heartbeatTimer.get(asyncId).unref()\n    } else {\n      clearTimeout(this.heartbeatTimer.get(asyncId))\n      this.broker.emit('timeout', asyncId)\n    }\n  }\n\n  encode (msg) {\n    const encoded = primitives.encode[typeof msg](msg)\n    debug && console.debug({ encoded })\n    return encoded\n  }\n\n  decode (msg) {\n    const decoded = primitives.decode[typeof msg](msg)\n    debug && console.debug({ decoded })\n    return decoded\n  }\n\n  /**\n   * Convert message to binary and send with protocol and idempotency headers.\n   * If message cannot be sent because of connection state or buffering queue\n   * message in domain object for retry later. Using a domain object ensures\n   * persistence of the queue.\n   *\n   * @param {object} msg\n   * @returns {Promise<boolean>} true if sent, false if not\n   */\n  async send (msg) {\n    const sent = await this.mesh.websocketSend(this.encode(msg), {\n      binary: true,\n      headers: {\n        ...this.headers,\n        'idempotency-key': nanoid()\n      }\n    })\n    if (sent) return true\n    this.mesh.pushSendQueue(msg)\n    return false\n  }\n\n  /**\n   * Send any messages buffered in `sendQueue`.\n   */\n  async sendQueuedMsgs () {\n    try {\n      let sent = true\n      while (this.mesh.sendQueueLength() > 0 && sent) {\n        console.debug('sending queued message')\n        sent = await this.send(this.mesh.popSendQueue())\n      }\n    } catch (error) {\n      console.error({ fn: this.sendQueuedMsgs.name, error })\n    }\n  }\n\n  /**\n   * Connects if needed then sends message to mesh broker service.\n   * @param {*} msg\n   */\n  async publish (msg) {\n    if (this.mesh.websocketDisconnected()) await this.connect()\n    return this.send(msg)\n  }\n\n  /**\n   * Register handler to fire on event.\n   * @param {string} eventName\n   * @param {function()} callback\n   */\n  subscribe (eventName, callback) {\n    this.broker.on(eventName, callback)\n  }\n\n  /**\n   * A new object will be created on system reload.\n   * Dispose of the old one. Run in context to\n   * distinguish between the new and old instance.\n   *\n   * @param {*} code\n   * @param {*} reason\n   */\n  async close (code, reason) {\n    this.runInAsyncScope(async () => {\n      console.debug('closing socket, asyncId:', this.asyncId())\n      this.mesh.websocketClose(code, reason)\n      this.state.set(this.asyncId(), States.DISPOSED)\n      await this.mesh.save() // save queued messages\n      this.broker.removeAllListeners()\n      this.emitDestroy()\n    }, this)\n  }\n}\n\n/**\n * Domain model factory function. This model is\n * used internally by the Aegis framework as a\n * pluggable service mesh client. Implement the\n * the methods below to create a new plugin.\n *\n * @param {*} dependencies injected depedencies\n * @returns\n */\nexport function makeClient (dependencies) {\n  let client\n  return async function ({ listServices }) {\n    return {\n      listServices,\n      sendQueue: [],\n      sendQueueMax: 1000,\n      sendQueueLength () {\n        return this.sendQueue.length\n      },\n      pushSendQueue (msg) {\n        this.sendQueue.push(msg)\n      },\n      popSendQueue () {\n        return this.sendQueue.pop()\n      },\n      getClient () {\n        if (client) return client\n        client = new ServiceMeshClient(this)\n        return client\n      },\n      async connect (options) {\n        this.getClient().connect(options)\n      },\n      async publish (event) {\n        this.getClient().publish(event)\n      },\n      subscribe (eventName, handler) {\n        this.getClient().subscribe(eventName, handler)\n      },\n      async close (code, reason) {\n        this.getClient().close(code, reason)\n      }\n    }\n  }\n}\n"],"sourceRoot":""}