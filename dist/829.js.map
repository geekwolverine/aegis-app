{"version":3,"sources":["webpack://microlib-example/./src/domain/bind-adapters.js","webpack://microlib-example/./src/domain/index.js","webpack://microlib-example/./src/event-dispatcher.js","webpack://microlib-example/./src/service-registry.js","webpack://microlib-example/./test/mock/address-service.js","webpack://microlib-example/./test/mock/event-service.js","webpack://microlib-example/./test/mock/index.js","webpack://microlib-example/./test/mock/inventory-service.js","webpack://microlib-example/./test/mock/payment-service.js","webpack://microlib-example/./test/mock/shipping-service.js"],"names":["makeAdapters","ports","adapters","services","Object","keys","map","port","service","e","console","warn","message","reduce","p","c","validateSpec","spec","missing","filter","key","length","Error","entries","makeModel","mixins","dependencies","concat","GlobalMixins","bindAdapters","models","values","modelSpecs","EventDispatcher","adapter","Event","subscriptions","Map","topic","callback","has","get","push","set","method","emitEvent","forEach","bind","Registry","eventNames","shipOrder","trackShipment","verifyDelivery","sendEvent","eventData","eventSource","eventName","log","setTimeout","JSON","stringify","eventTime","Date","toUTCString","eventType","generateShippingEventData","event","externalId","trackingId","uuid","shipmentId","proofOfDelivery","trackingStatus","generateShippingMessage","commandResp","inventoryCallbackFactory","inventoryCallback","parse","warehouseAddress","commandArgs","replyChannel","warehouse_addr","shippingCallbackFactory","shippingCallback","_message","dispatcher","registerCallback","Address","validateAddress","address","shippingChannel","inventoryChannel","callbacks","responses","topics","handleEvents","req","res","body","topicName","find","k","test","func","name","msg","cb","code","toString","reduceRight","response","send","listening","listen","notify","init","Inventory","pickOrder","lineItems","pickupAddress","Payment","authorizePayment","id","amount","source_id","customer_id","autocomplete","currency","payload","idempotency_key","amount_money","location_id","reference_id","note","app_fee_money","completePayment","model","orderNo","refundPayment","createEventMessage","requester","type","data","eventTarget","getTime","eventUuid","createCommandEvent","args","commandName","Shipping","serviceName","shipTo","shipFrom","signature","respondOn","returnShipment","getPayload","payloads","getProperty"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;cAxDI,iCA8DO,MA9DP;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EA+DD,CAhFoB;;EAkFrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEQQ,eA1Je,2BA0JCC,KA1JD,EA0JQ;IAAA;MAAA;QAAA;UAAA;YAAA;cAC3B9H,OAAO,CAAC+C,GAAR,CAAY,6BAAZ,EAA2C+E,KAAK,CAACC,OAAjD;cAD2B,kCAEpB,MAFoB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAG5B,CA7JoB;EA+JfC,aA/Je,yBA+JDF,KA/JC,EA+JM;IAAA;MAAA;QAAA;UAAA;YAAA;cACzB9H,OAAO,CAAC+C,GAAR,CAAY,4BAAZ,EAA0C+E,KAAK,CAACC,OAAhD;;YADyB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAE1B;AAjKoB,CAAhB,C;;;;;;;;;;;;;;;;;;;AC1BM;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,SAASE,kBAAT,OAA0E;EAAA,IAA5CC,SAA4C,QAA5CA,SAA4C;EAAA,IAAjCpI,OAAiC,QAAjCA,OAAiC;EAAA,IAAxBqI,IAAwB,QAAxBA,IAAwB;EAAA,IAAlBrC,IA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","file":"829.js","sourcesContent":["\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n/**\n * @callback controller\n * @param {Request} req\n * @param {Response} res\n */\n\n/**\n * @typedef {{\n *  [path: string]: {\n *    get?: controller,\n *    post?: controller,\n *    patch?: controller,\n *    delete?:controller\n *   }\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [routes] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\n/**\n * @callback addModqqqqel\n * @param {{ searchTerm1, searchTerm2, searchTermN }} input\n * @returns {Promise<Model>}\n */\n\n/**\n * @callback editModel\n * @param {{ id:string, changes:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findModel\n * @param {{ id:string, query:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findRelatedModels\n * @param {{ query:object, relation:string }} input\n * @returns { Promise<{Model,[Model]}> }\n */\n\n/**\n * @callback listModels\n * @param {{ query:object }} input e.g. { searchTerm1 : 'val', ...etc }\n * @returns { [Promise<Model>] }\n */\n\n/**\n * @callback executeCommand\n * @param {{ id:string }} input\n * @returns { Model }\n */\n\n/**\n * @typedef DomainPortAPI\n * @property { addModel } addModel\n * @property { editModel } editModel\n * @property { listModels } listModels\n * @property { findModel } findModel\n * @property { findRelatedModels } findModel\n * @property { removeModel } removeModel\n * @property { executeCommand } executeCommand\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n\n// Service dependencies\nimport * as services from '../../test/mock'\nimport * as adapters from '../adapters'\n\nexport * from './order'\nexport * from './customer'\nexport * from './inventory'\n\n// Model properties\nimport * as modelSpecs from '../config'\n\n/**\n *\n * @param {ModelSpecification} spec\n */\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","\"use strict\";\n\nimport { Event } from \"./services/event-service\";\n\nexport class EventDispatcher {\n  constructor(adapter = Event) {\n    this.adapter = adapter;\n    this.subscriptions = new Map();\n  }\n\n  registerCallback(topic, callback) {\n    if (this.subscriptions.has(topic)) {\n      this.subscriptions.get(topic).push(callback);\n      return;\n    }\n    this.subscriptions.set(topic, [callback]);\n  }\n\n  async emitEvent(topic, message, method = \"notify\") {\n    await this.adapter[method](topic, message);\n  }\n\n  async init(method = \"listen\") {\n    function emitEvent(topic, message) {\n      this.emitEvent(topic, message);\n    }\n\n    // this.emitEvent(/Channel/, \"remoteRestart\");\n    await this.adapter[method](\n      /Channel/,\n      function ({ topic, message }) {\n        if (this.subscriptions.has(topic)) {\n          this.subscriptions\n            .get(topic)\n            .forEach(callback =>\n              callback({ message, emitEvent: emitEvent.bind(this) })\n            );\n        }\n      }.bind(this)\n    );\n  }\n}\n","\"use strict\";\n\nimport { EventDispatcher } from \"./event-dispatcher\";\nimport { uuid } from \"./domain/utils\";\n\nexport const Registry = {\n  eventNames: {\n    shipOrder: \"orderShipped\",\n    trackShipment: \"outForDelivery\",\n    verifyDelivery: \"deliveryVerified\",\n  },\n\n  sendEvent({ emitEvent, topic, eventData, eventSource, eventName }) {\n    console.log(\"Sending event...\");\n    console.log({ emitEvent, topic, eventData, eventSource, eventName });\n    setTimeout(async () => {\n      await emitEvent(\n        topic,\n        JSON.stringify({\n          eventData,\n          eventName,\n          eventTime: new Date().toUTCString(),\n          eventType: \"commandResponse\",\n          eventSource: eventSource,\n        })\n      );\n    }, 5000);\n  },\n\n  generateShippingEventData(event, externalId) {\n    const trackingId = uuid();\n    const shipmentId = trackingId;\n    const proofOfDelivery = `http://shipping.service.com?proof=${trackingId}`;\n    const eventData = { externalId };\n    if (event.eventName === \"shipOrder\") {\n      return { ...eventData, shipmentId };\n    }\n    if (event.eventName === \"trackShipment\") {\n      return { ...eventData, trackingId, trackingStatus: \"outForDelivery\" };\n    }\n    if (event.eventName === \"verifyDelivery\") {\n      return { ...eventData, proofOfDelivery };\n    }\n  },\n\n  generateShippingMessage(emitEvent, event, externalId) {\n    return {\n      emitEvent,\n      topic: event.eventData.commandResp,\n      eventData: this.generateShippingEventData(event, externalId),\n      eventName: this.eventNames[event.eventName],\n      eventSource: \"shippingService\",\n    };\n  },\n\n  inventoryCallbackFactory() {\n    function inventoryCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const warehouseAddress = /*null;*/ \"1234 warehouse dr, dock 2\";\n      const externalId = event.eventData.commandArgs.externalId;\n      const eventName = /*'outOfStock';*/ \"orderPicked\";\n      this.sendEvent({\n        emitEvent,\n        topic: event.eventData.replyChannel,\n        eventName,\n        eventData: { warehouse_addr: warehouseAddress, externalId },\n        eventSource: \"inventoryService\",\n      });\n    }\n    return inventoryCallback.bind(this);\n  },\n\n  shippingCallbackFactory() {\n    function shippingCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const externalId = event.eventData.commandArgs.externalId;\n      const _message = this.generateShippingMessage(\n        emitEvent,\n        event,\n        externalId\n      );\n      this.sendEvent(_message);\n\n      if (event.eventName === \"trackShipment\") {\n        const eventData = {\n          ..._message.eventData,\n          trackingStatus: \"orderDelivered\",\n        };\n        setTimeout(\n          () =>\n            this.sendEvent({\n              ..._message,\n              eventData,\n              eventName: \"orderDelivered\",\n            }),\n          7000\n        );\n      }\n    }\n    return shippingCallback.bind(this);\n  },\n};\n\nconst dispatcher = new EventDispatcher();\n\ndispatcher.registerCallback(\n  \"inventoryChannel\",\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  \"shippingChannel\",\n  Registry.shippingCallbackFactory()\n);\n\nexport default dispatcher;\n","\"use strict\";\n\nexport const Address = {\n  /**\n   *\n   * @param {string} address US street address\n   */\n  async validateAddress(address) {\n    console.log(\"test validating address...\");\n\n    if (!address) {\n      throw new Error(\"no address provided\");\n    }\n\n    return address;\n  },\n\n};\n","\"use strict\";\n\nimport { EventDispatcher } from \"../../src/event-dispatcher\";\nimport { Registry } from \"../../src/service-registry\";\n\nconst shippingChannel = \"shippingChannel\";\nconst inventoryChannel = \"inventoryChannel\";\n\nconst callbacks = [];\nconst responses = [];\nconst topics = {\n  [shippingChannel]: /shipping/,\n  [inventoryChannel]: /inventory/,\n};\n\nexport function handleEvents(req, res) {\n  const message = JSON.stringify(req.body);\n  const topicName = Object.keys(topics).find(k => topics[k].test(message));\n  if (topicName) {\n    console.log({\n      func: handleEvents.name,\n      msg: \"found topic\",\n      topicName,\n      message,\n      cb: callbacks,\n    });\n\n    callbacks.forEach(callback => {\n      console.log({ name: callback.name, code: callback.toString() });\n      callback({ topicName, message });\n    });\n    console.log(responses);\n    responses.reduceRight(response => res.send(response), \"response\");\n  }\n}\n\nconst Event = {\n  topics: /Channel/,\n  listening: false,\n\n  listen(topic, callback) {\n    callbacks.push(callback);\n  },\n\n  notify(topic, message) {\n    responses.push(message);\n  },\n};\n\nconst dispatcher = new EventDispatcher(Event);\n\ndispatcher.registerCallback(\n  inventoryChannel,\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  shippingChannel,\n  Registry.shippingCallbackFactory()\n);\n\ndispatcher.init();\n","export * from \"./address-service\";\nexport * from \"./payment-service\";\nexport * from \"./shipping-service\";\nexport * from \"./event-service\";\nexport * from \"./inventory-service\";\n","\"use strict\";\n\nimport { Event } from \"../../src/services/event-service\";\n\nfunction sendEvent({ eventData, eventName }) {\n  setTimeout(async () => {\n    await Event.notify(\n      \"orderChannel\",\n      JSON.stringify({\n        eventData,\n        eventName,\n        eventType: \"CommandResponse\",\n        eventTime: new Date().toUTCString(),\n        eventSource: \"Inventory\",\n      })\n    );\n  }, 5000);\n}\n\nexport const Inventory = {\n  async pickOrder({ externalId, lineItems }) {\n    console.log(\"inventory items\");\n    console.log(lineItems);\n    const pickupAddress = \"1234 warehouse dr, dock2\";\n    sendEvent({\n      eventName: \"orderPicked\",\n      eventData: { pickupAddress, externalId },\n    });\n  },\n};\n","\"use strict\";\n\n/**\n * @callback authorizePaymentType\n * @param {string} id\n * @param {number} amount\n * @param {string} source_id\n * @param {string} customer_id\n * @param {boolean} [autocomplete]\n * @returns {Promise<string>}\n */\n\n/**\n * @typedef PaymentService\n * @property {authorizePaymentType} authorizePayment\n * @property {function()} completePayment\n * @property {function()} refundPayment\n */\n\n// import { Client, Environment, ApiError } from \"square\";\n\n// const client = new Client({\n//   environment: Environment.Sandbox,\n//   accessToken: process.env.SQUARE_ACCESS_TOKEN,\n// });\n\nexport const Payment = {\n  /**\n   * @type {authorizePaymentType}\n   * @param {*} id\n   * @param {*} amount\n   * @param {*} source_id\n   * @param {*} customer_id\n   * @param {*} autocomplete\n   * @param {*} currency\n   */\n  async authorizePayment(\n    id,\n    amount,\n    source_id,\n    customer_id,\n    autocomplete = false,\n    currency = \"USD\"\n  ) {\n    console.log(\"mock payment service called\");\n    const payload = {\n      idempotency_key: id,\n      amount_money: {\n        amount,\n        currency,\n      },\n      source_id,\n      autocomplete,\n      customer_id,\n      location_id: \"XK3DBG77NJBFX\",\n      reference_id: \"123456\",\n      note: \"Brief description\",\n      app_fee_money: {\n        amount: 10,\n        currency: \"USD\",\n      },\n    };\n    /*\n    const bodyAmountMoney = {};\n    bodyAmountMoney.amount = 200;\n    bodyAmountMoney.currency = \"USD\";\n\n    const bodyTipMoney = {};\n    bodyTipMoney.amount = 198;\n    bodyTipMoney.currency = \"CHF\";\n\n    const bodyAppFeeMoney = {};\n    bodyAppFeeMoney.amount = 10;\n    bodyAppFeeMoney.currency = \"USD\";\n\n    const body = {\n      sourceId: \"ccof:uIbfJXhXETSP197M3GB\",\n      idempotencyKey: \"4935a656-a929-4792-b97c-8848be85c27c\",\n      amountMoney: bodyAmountMoney,\n    };\n\n    body.tipMoney = bodyTipMoney;\n    body.appFeeMoney = bodyAppFeeMoney;\n    body.delayDuration = \"delay_duration6\";\n    body.autocomplete = true;\n    body.orderId = \"order_id0\";\n    body.customerId = \"VDKXEEKPJN48QDG3BGGFAK05P8\";\n    body.locationId = \"XK3DBG77NJBFX\";\n    body.referenceId = \"123456\";\n    body.note = \"Brief description\";\n\n    // try {\n    //   const {\n    //     result,\n    //     ...httpResponse\n    //   } = await client.paymentsApi.createPayment(body);\n    //   // Get more response info...\n    //   // const { statusCode, headers } = httpResponse;\n    // } catch (error) {\n    //   if (error instanceof ApiError) {\n    //     const errors = error.result;\n    //     // const { statusCode, headers } = error;\n    //   }\n    // }\n    */\n    return \"1234\";\n  },\n\n  /*\n  const response ={\n  \"payment\": {\n    \"id\": \"GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\",\n    \"created_at\": \"2019-07-10T13:23:49.154Z\",\n    \"updated_at\": \"2019-07-10T13:23:49.446Z\",\n    \"amount_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"app_fee_money\": {\n      \"amount\": 10,\n      \"currency\": \"USD\"\n    },\n    \"total_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"status\": \"COMPLETED\",\n    \"source_type\": \"CARD\",\n    \"card_details\": {\n      \"status\": \"CAPTURED\",\n      \"card\": {\n        \"card_brand\": \"VISA\",\n        \"last_4\": \"1111\",\n        \"exp_month\": 7,\n        \"exp_year\": 2026,\n        \"fingerprint\": \"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw\",\n        \"card_type\": \"DEBIT\",\n        \"prepaid_type\": \"PREPAID\",\n        \"bin\": \"411111\"\n      },\n      \"entry_method\": \"ON_FILE\",\n      \"cvv_status\": \"CVV_ACCEPTED\",\n      \"avs_status\": \"AVS_ACCEPTED\",\n      \"auth_result_code\": \"nsAyY2\",\n      \"statement_description\": \"SQ *MY MERCHANT\"\n    },\n    \"location_id\": \"XTI0H92143A39\",\n    \"order_id\": \"m2Hr8Hk8A3CTyQQ1k4ynExg92tO3\",\n    \"reference_id\": \"123456\",\n    \"note\": \"Brief description\",\n    \"customer_id\": \"RDX9Z4XTIZR7MRZJUXNY9HUK6I\",\n    \"receipt_number\": \"GQTF\",\n    \"receipt_url\": \"https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\"\n  }\n}\n  /*\n{\n  \"errors\": [\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"source_id\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"idempotency_key\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"MISSING_REQUIRED_PARAMETER\",\n      \"detail\": \"Field must be set\",\n      \"field\": \"amount_money\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    }\n  ]\n}\n  */\n\n  async completePayment(model) {\n    console.log(\"REAL completing payment: %s\", model.orderNo);\n    return \"1234\";\n  },\n\n  async refundPayment(model) {\n    console.log(\"REAL refunding payment: %s\", model.orderNo);\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('../adapters/event-adapter').EventMessage} EventMessage\n */\n\n/**\n * @typedef {import('../adapters/event-adapter').CommandEvent} CommandEvent\n */\n\n/**\n * @callback shipOrder\n * @param {string} shipTo\n * @param {string} shipFrom\n * @param {string} lineItems\n * @param {string} signature\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @callback trackShipment\n * @param {string} shipmentId\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @typedef {string} functionName\n */\n\n/**\n * @typedef {Object} shippingService formats and parses shipping event messages\n * @property {string} serviceName - programmatic service name in eventSource/Target\n * @property {string} topic - event topic \"shippingChannel\" when sending messasges\n * @property {shipOrder} shipOrder - format event message requesting shipping label and pickup of order\n * @property {trackShipment} trackShipment - report on location/status of parcel\n * @property {function():EventMessage} verifyDelivery - ensure customer recieved parcel\n * @property {function():EventMessage} returnShipment - return to sender if refunding\n * @property {function(functionName,EventMessage):{[key]:string}} getPayload - extract payload\n */\n\nfunction createEventMessage({ requester, service, type, name, id, data }) {\n  return {\n    eventSource: requester,\n    eventTarget: service,\n    eventType: type,\n    eventName: name,\n    eventTime: new Date().getTime(),\n    eventUuid: id,\n    eventData: data,\n  };\n}\n\nfunction createCommandEvent(name, topic, args) {\n  return {\n    commandName: name,\n    commandResp: topic,\n    commandArgs: { ...args },\n  };\n}\n\n/**\n * Shipping service events\n * @type {shippingService}\n */\nexport const Shipping = {\n  serviceName: \"shippingService\",\n  topic: \"shippingChannel\",\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {shipMessage}\n   */\n  shipOrder({\n    shipTo,\n    shipFrom,\n    lineItems,\n    signature,\n    externalId,\n    requester,\n    respondOn,\n  }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.shipOrder.name,\n      id: externalId,\n      data: createCommandEvent(this.shipOrder.name, respondOn, {\n        shipTo,\n        shipFrom,\n        lineItems,\n        signature,\n        externalId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  trackShipment({ externalId, shipmentId, trackingId, requester, respondOn }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.trackShipment.name,\n      id: externalId,\n      data: createCommandEvent(this.trackShipment.name, respondOn, {\n        externalId,\n        shipmentId,\n        trackingId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  verifyDelivery({ requester, respondOn, trackingId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.verifyDelivery.name,\n      id: externalId,\n      data: createCommandEvent(this.verifyDelivery.name, respondOn, {\n        externalId,\n        trackingId,\n      }),\n    });\n  },\n\n  returnShipment({ requester, respondOn, shipmentId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      id: externalId,\n      name: this.returnShipment.name,\n      data: createCommandEvent(this.returnShipment, respondOn, {\n        shipmentId,\n        externalId,\n      }),\n    });\n  },\n\n  getPayload(func, event) {\n    const payloads = {\n      [this.shipOrder.name]: {\n        shipmentId: event.eventData.shipmentId,\n      },\n      [this.trackShipment.name]: {\n        trackingId: event.eventData.trackingId,\n        trackingStatus: event.eventData.trackingStatus,\n      },\n      [this.verifyDelivery.name]: {\n        proofOfDelivery: event.eventData.proofOfDelivery,\n      },\n    };\n    return payloads[func];\n  },\n\n  getProperty(event, key) {\n    return event.eventData[key];\n  },\n};\n"],"sourceRoot":""}