{"version":3,"sources":["webpack://microlib-example/./src/adapters/datasources/datasource-mongodb.js","webpack://microlib-example/./src/config/index.js","webpack://microlib-example/./src/config/inventory.js","webpack://microlib-example/./src/config/order.js","webpack://microlib-example/./src/config/user.js","webpack://microlib-example/./src/domain/bind-adapters.js","webpack://microlib-example/./src/domain/index.js","webpack://microlib-example/./src/domain/inventory.js","webpack://microlib-example/./src/domain/mixins.js","webpack://microlib-example/./src/domain/user.js","webpack://microlib-example/./src/domain/utils.js","webpack://microlib-example/./src/event-dispatcher.js","webpack://microlib-example/./src/service-registry.js","webpack://microlib-example/./test/mock/address-service.js","webpack://microlib-example/./test/mock/event-service.js","webpack://microlib-example/./test/mock/index.js","webpack://microlib-example/./test/mock/inventory-service.js","webpack://microlib-example/./test/mock/payment-service.js","webpack://microlib-example/./test/mock/shipping-service.js"],"names":["getSecret","process","env","MONGODB_CREDS","user","pass","token","archive","id","console","debug","DataSourceAdapterMongoDb","url","cacheSize","DataSourceMongoDb","DataSourceMongoDbArchive","datasource","factory","name","creds","Inventory","modelName","endpoint","dependencies","makeInventoryFactory","mixins","requireProperties","validateProperties","propKey","maxnum","values","categories","assetTypes","isValid","_obj","prop","every","p","properties","freezeProperties","relations","orders","type","foreignKey","desc","Order","makeOrderFactory","uuid","nanoid","requiredForGuest","requiredForApproval","requiredForCompletion","freezeOnApproval","freezeOnCompletion","updateProperties","update","recalcTotal","updateSignature","Object","OrderStatus","statusChangeValid","orderTotalValid","regex","validate","validateModel","onDelete","readyToDelete","eventHandlers","handleOrderEvent","ports","listen","service","timeout","notify","save","find","validateAddress","keys","producesEvent","disabled","authorizePayment","consumesEvent","undo","cancelPayment","pickOrder","returnInventory","circuitBreaker","portTimeout_pickOrder_order","callVolume","errorRate","intervalMs","shipOrder","callback","orderShipped","returnShipment","portTimeout_shipOrder_order","portRetryFailed_order","fallbackFn","cancel","trackShipment","verifyDelivery","returnDelivery","completePayment","paymentCompleted","refundPayment","cancelShipment","customer","inventory","key","commands","decrypt","command","acl","approve","runFibonacci","model","start","Date","now","fibonacci","x","param","parseFloat","result","Number","isNaN","time","serializers","on","value","enabled","User","userFactory","userMixins","makeAdapters","adapters","services","map","port","e","warn","message","reduce","c","validateSpec","spec","missing","filter","length","Error","entries","makeModel","concat","GlobalMixins","bindAdapters","models","modelSpecs","category","price","discount","sku","purchaseOrder","vendor","inStock","assetType","freeze","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","changes","JSON","parse","stringify","updates","compose","updated","updateMixins","o","cb","mixinSet","Map","has","set","eventMask","create","onload","handleUpdateEvent","event","isUpdate","decrypted","isObject","containsUpdates","changeList","k","util","error","fn","input","v","sort","a","b","order","apply","output","enableEvent","onUpdate","onCreate","onLoad","enableValidation","onCreateAndUpdate","onAll","never","addValidation","config","some","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","preventUpdates","mutations","includes","requireProps","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","unknownProps","rejectUnknownProperties","RegEx","email","ipv4Address","ipv6Address","phone","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","Validator","tests","maxlen","invalid","updaters","updateProps","u","invokePort","args","log","func","then","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","encryptPersonalInfo","userName","password","customerId","firstName","lastName","userId","funcs","initVal","reduceRight","composeAsync","Promise","resolve","asyncPipe","f","passwd","ENCRYPTION_PWD","algo","crypto","String","iv","Buffer","alloc","text","cipher","cipherText","decipher","data","digest","makeArray","Array","isArray","makeObject","async","promise","ok","object","asObject","asArray","EventDispatcher","adapter","Event","subscriptions","topic","get","push","method","emitEvent","forEach","bind","Registry","eventNames","sendEvent","eventData","eventSource","eventName","setTimeout","eventTime","toUTCString","eventType","generateShippingEventData","externalId","trackingId","shipmentId","proofOfDelivery","trackingStatus","generateShippingMessage","commandResp","inventoryCallbackFactory","inventoryCallback","warehouseAddress","commandArgs","replyChannel","warehouse_addr","shippingCallbackFactory","shippingCallback","_message","dispatcher","registerCallback","Address","address","shippingChannel","inventoryChannel","callbacks","responses","topics","handleEvents","req","res","body","topicName","msg","code","toString","response","send","listening","init","lineItems","pickupAddress","Payment","amount","source_id","customer_id","autocomplete","currency","payload","idempotency_key","amount_money","location_id","reference_id","note","app_fee_money","orderNo","createEventMessage","requester","eventTarget","getTime","eventUuid","createCommandEvent","commandName","Shipping","serviceName","shipTo","shipFrom","signature","respondOn","getPayload","payloads","getProperty"],"mappings":"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Q3S,kBAVe,4BAWnBxE,EAXmB,EAYnBoX,MAZmB,EAanBC,SAbmB,EAcnBC,WAdmB,EAiBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFAC,0BAEA,0EAFe,KAEf;AADAC,sBACA,0EADW,KACX;AACAvX,qBAAO,CAACqQ,GAAR,CAAY,6BAAZ;AACMmH,qBAFN,GAEgB;AACdC,+BAAe,EAAE1X,EADH;AAEd2X,4BAAY,EAAE;AACZP,wBAAM,EAANA,MADY;AAEZI,0BAAQ,EAARA;AAFY,iBAFA;AAMdH,yBAAS,EAATA,SANc;AAOdE,4BAAY,EAAZA,YAPc;AAQdD,2BAAW,EAAXA,WARc;AASdM,2BAAW,EAAE,eATC;AAUdC,4BAAY,EAAE,QAVA;AAWdC,oBAAI,EAAE,mBAXQ;AAYdC,6BAAa,EAAE;AACbX,wBAAM,EAAE,EADK;AAEbI,0BAAQ,EAAE;AAFG;AAZD,eAFhB;AAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxDI,+CA8DO,MA9DP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+DD,GAhFoB;;AAkFrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEQ1R,iBA1Je,2BA0JCa,KA1JD,EA0JQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3B1G,qBAAO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","file":"829.js","sourcesContent":["\"use strict\";\n\nfunction getSecret() {\n  return process.env.MONGODB_CREDS || { user: null, pass: null, token: null };\n}\n\nfunction archive(id) {\n  console.debug(\"mock archive\", id);\n}\n\n/**\n * Datasource adapter factory.\n * @param {string} url database url\n * @param {number} [cacheSize] number of models to keep in cache\n * @param {*} DataSource base class that enables caching\n * @returns {import(\"./datasource\").default}\n */\nexport const DataSourceAdapterMongoDb = function (\n  url,\n  cacheSize,\n  DataSourceMongoDb\n) {\n  /**\n   * MongoDB adapter extends in-memory datasource to support caching.\n   * The cache is always updated first, which allows the system to run\n   * even when the database is offline.\n   */\n  class DataSourceMongoDbArchive extends DataSourceMongoDb {\n    constructor(datasource, factory, name) {\n      super(datasource, factory, name);\n      this.url = url;\n      this.cacheSize = cacheSize;\n      this.creds = getSecret();\n    }\n\n    /**\n     * @override\n     */\n    delete(id) {\n      console.debug(\"archive\", id);\n      archive(id);\n    }\n  }\n\n  return DataSourceMongoDbArchive;\n};\n","export * from './order'\nexport * from './user'\n// export * from \"./customer\";\n// export * from \"./product\";\nexport * from './inventory'\n","'use strict'\n\nimport {\n  makeInventoryFactory,\n  assetTypes,\n  properties,\n  categories\n} from '../domain/inventory'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  validateProperties\n} from '../domain/mixins'\n\n/**\n * @type {import(\"../domain/order\").ModelSpecification}\n */\nexport const Inventory = {\n  modelName: 'inventory',\n  endpoint: 'inventory',\n  dependencies: {},\n  factory: makeInventoryFactory,\n  mixins: [\n    requireProperties('name', 'inStock', 'category', 'price', 'purchaseOrder'),\n    validateProperties([\n      {\n        propKey: 'inStock',\n        typeof: 'number',\n        maxnum: 99999\n      },\n      {\n        propKey: 'category',\n        values: categories\n      },\n      {\n        propKey: 'assetType',\n        values: assetTypes\n      },\n      {\n        propKey: 'properties',\n        isValid: (_obj, prop) => prop.every(p => properties.includes(p))\n      },\n      {\n        propKey: 'price',\n        typeof: 'number',\n        maxnum: 999.99\n      }\n    ]),\n    freezeProperties('*')\n  ],\n  relations: {\n    orders: {\n      modelName: 'order',\n      type: 'oneToMany',\n      foreignKey: 'itemId',\n      desc: 'many items per order'\n    }\n  }\n}\n","'use strict'\n\nimport {\n  makeOrderFactory,\n  readyToDelete,\n  handleOrderEvent,\n  orderShipped,\n  paymentCompleted,\n  OrderStatus,\n  recalcTotal,\n  requiredForCompletion,\n  statusChangeValid,\n  freezeOnApproval,\n  freezeOnCompletion,\n  orderTotalValid,\n  returnInventory,\n  returnShipment,\n  refundPayment,\n  returnDelivery,\n  cancelPayment,\n  updateSignature,\n  requiredForGuest,\n  requiredForApproval,\n  approve,\n  cancel\n} from '../domain/order'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  updateProperties,\n  validateProperties,\n  validateModel\n} from '../domain/mixins'\n\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport { nanoid } from 'nanoid'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Order = {\n  modelName: 'order',\n  endpoint: 'orders',\n  factory: makeOrderFactory,\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: 'mongodb://172.31.30.141:27017',\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceMongoDb'\n  // },\n  dependencies: { uuid: () => nanoid(8) },\n  mixins: [\n    requireProperties(\n      'orderItems',\n      requiredForGuest([\n        'lastName',\n        'firstName',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'email'\n      ]),\n      requiredForApproval('paymentAuthorization'),\n      requiredForCompletion('proofOfDelivery')\n    ),\n    freezeProperties(\n      'orderNo',\n      'customerId',\n      freezeOnApproval([\n        'email',\n        'lastName',\n        'firstName',\n        'orderItems',\n        'orderTotal',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'paymentAuthorization'\n      ]),\n      freezeOnCompletion('*')\n    ),\n    updateProperties([\n      {\n        propKey: 'orderItems',\n        update: recalcTotal\n      },\n      {\n        propKey: 'orderItems',\n        update: updateSignature\n      }\n    ]),\n    validateProperties([\n      {\n        propKey: 'orderStatus',\n        values: Object.values(OrderStatus),\n        isValid: statusChangeValid\n      },\n      {\n        propKey: 'orderTotal',\n        maxnum: 99999.99,\n        isValid: orderTotalValid\n      },\n      {\n        propKey: 'email',\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      },\n      {\n        propKey: 'phone',\n        regex: 'phone'\n      }\n    ])\n  ],\n  validate: validateModel,\n  onDelete: readyToDelete,\n  eventHandlers: [handleOrderEvent],\n  ports: {\n    listen: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    notify: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    save: {\n      service: 'Persistence',\n      type: 'outbound',\n      timeout: 0\n    },\n    find: {\n      service: 'Persistence',\n      type: 'outbound',\n      timeout: 0\n    },\n    validateAddress: {\n      service: 'Address',\n      type: 'outbound',\n      keys: 'shippingAddress',\n      producesEvent: 'addressValidated',\n      disabled: true\n    },\n    authorizePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      keys: 'paymentStatus',\n      consumesEvent: 'startWorkflow',\n      producesEvent: 'paymentAuthorized',\n      undo: cancelPayment,\n      disabled: true\n    },\n    pickOrder: {\n      service: 'Inventory',\n      type: 'outbound',\n      keys: 'pickupAddress',\n      consumesEvent: 'itemsAvailable',\n      producesEvent: 'orderPicked',\n      undo: returnInventory,\n      circuitBreaker: {\n        portTimeout_pickOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    shipOrder: {\n      service: 'Shipping',\n      type: 'outbound',\n      callback: orderShipped,\n      consumesEvent: 'orderPicked',\n      producesEvent: 'orderShipped',\n      undo: returnShipment,\n      circuitBreaker: {\n        portTimeout_shipOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        },\n        portRetryFailed_order: {\n          callVolume: 3,\n          errorRate: 2,\n          intervalMs: 60000,\n          fallbackFn: cancel\n        },\n        default: {\n          callVolume: 3,\n          errorRate: 3,\n          intervalMs: 60000\n        }\n      }\n    },\n    trackShipment: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: ['trackingStatus', 'trackingId'],\n      consumesEvent: 'orderShipped',\n      producesEvent: 'orderDelivered',\n      circuitBreaker: {\n        portRetryFailed_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    verifyDelivery: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: 'proofOfDelivery',\n      consumesEvent: 'orderDelivered',\n      producesEvent: 'deliveryVerified',\n      undo: returnDelivery\n    },\n    completePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      callback: paymentCompleted,\n      consumesEvent: 'deliveryVerified',\n      producesEvent: 'orderComplete',\n      undo: refundPayment\n    },\n    cancelShipment: {\n      service: 'Shipping',\n      type: 'outbound'\n    },\n    refundPayment: {\n      service: 'Payment',\n      type: 'outbound'\n    }\n  },\n  relations: {\n    customer: {\n      modelName: 'customer',\n      foreignKey: 'customerId',\n      type: 'manyToOne',\n      desc: 'Many orders per customer, just one customer per order'\n    },\n    inventory: {\n      modelName: 'inventory',\n      foreignKey: 'itemId',\n      key: 'orderItems',\n      type: 'containsMany',\n      desc: 'An order contains a list of inventory items to ship.'\n    }\n  },\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    },\n    approve: {\n      command: approve,\n      acl: ['write', 'approve']\n    },\n    cancel: {\n      command: cancel,\n      acl: ['write', 'cancel']\n    },\n    runFibonacci: {\n      command: model => {\n        const start = Date.now()\n        function fibonacci (x) {\n          if (x === 0) {\n            return 0\n          }\n          if (x === 1) {\n            return 1\n          }\n          return fibonacci(x - 1) + fibonacci(x - 2)\n        }\n        const param = parseFloat(model.fibonacci)\n        return {\n          result: fibonacci(Number.isNaN(param) ? 10 : param),\n          time: Date.now() - start\n        }\n      },\n      acl: ['read', 'write']\n    }\n  },\n  serializers: [\n    {\n      on: 'deserialize',\n      key: 'creditCardNumber',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'shippingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'billingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    }\n  ]\n}\n","'use strict'\n\nimport { validateModel } from '../domain/mixins'\nimport { userFactory, userMixins } from '../domain/user'\nimport { uuid } from '../domain/utils'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const User = {\n  modelName: 'user',\n  endpoint: 'users',\n  dependencies: { uuid },\n  factory: userFactory,\n  mixins: userMixins,\n  validate: validateModel,\n  relations: {\n    customer: {\n      foreignKey: 'customerId',\n      type: 'oneToOne',\n      modelName: 'customer'\n    }\n  }\n}\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    endpointUri: string,\n *    port:ports[p],\n *    method:'get'|'post'|'patch'|'delete'\n *    callback: ({\n *      body:string,\n *      headers:{},\n *      params:{},\n *      query:{}}) => Promise<{\n *        body,status,headers,\n *      }>\n *    })\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle application\n * events, e.g. CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [endpoints] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n// Service dependencies\nimport * as services from '../../test/mock'\nimport * as adapters from '../adapters'\n// Model properties\nimport * as modelSpecs from '../config'\n\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","'use strict'\n\nexport const assetTypes = ['rotating-asset', 'spare-part']\nexport const properties = ['height', 'length', 'width', 'weight', 'color']\nexport const categories = ['home', 'auto', 'business']\n\nexport const makeInventoryFactory = dependencies => ({\n  category,\n  properties,\n  price,\n  discount,\n  name,\n  desc,\n  sku,\n  purchaseOrder,\n  vendor,\n  inStock,\n  assetType\n}) =>\n  Object.freeze({\n    category,\n    properties,\n    price: price - (discount || 0.0),\n    name,\n    desc,\n    sku,\n    purchaseOrder,\n    vendor,\n    inStock,\n    assetType\n  })\n","'use strict'\n\nimport { hash, encrypt, decrypt, compose } from '../domain/utils'\nimport util from 'util'\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol('prevModel')\n/**\n * private key to access validation config\n */\nexport const validations = Symbol('validations')\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol('pre'),\n  post: Symbol('post')\n}\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol('preUpdateMixins'),\n  [mixinType.post]: Symbol('postUpdateMixins')\n}\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre]\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post]\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate (model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)) // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes\n\n  const updated = { ...model, ...updates }\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins (type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error('invalid mixin type')\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map()\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb())\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet\n    }\n  }\n  return o\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2 //  0100 Load\n}\n\nfunction handleUpdateEvent (model, updates, event) {\n  const isUpdate = eventMask.update & event\n  const decrypted = isUpdate ? model.decrypt() : {}\n  return {\n    ...model,\n    ...updates,\n    ...decrypted\n  }\n}\n\nfunction isObject (p) {\n  return p != null && typeof p === 'object'\n}\n\nfunction containsUpdates (model, changes, event) {\n  try {\n    if (!changes) return false\n    if (eventMask.update & event) {\n      const changeList = Object.keys(changes)\n      if (changeList.length < 1) return false\n\n      if (\n        changeList.every(\n          k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n        )\n      ) {\n        return false\n      }\n    }\n    return true\n  } catch (error) {\n    console.error({ fn: containsUpdates.name, error })\n  }\n  return false\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see {@link eventMask}.\n */\nexport function validateModel (model, changes, event) {\n  if (!model || !changes || !event) return {}\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) }\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input)\n\n  const updated = { ...model, ...updates }\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated)\n}\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent (onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0\n\n  if (onUpdate) {\n    enabled |= eventMask.update\n  }\n  if (onCreate) {\n    enabled |= eventMask.create\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload\n  }\n  return enabled\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate: enableEvent(true, false, false),\n    /**\n     * Validation runs on create.\n     */\n    onCreate: enableEvent(false, true, false),\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate: enableEvent(true, true, false),\n    /**\n     * Validation runs on load.\n     */\n    onLoad: enableEvent(false, false, true),\n    /**\n     * Validation runs on all events.\n     */\n    onAll: enableEvent(true, true, true),\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never: enableEvent(false, false, false)\n  }\n})()\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation ({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || []\n\n  if (config.some(v => v.name === name)) {\n    console.warn('duplicate validation name', name)\n    return model\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }]\n  }\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys (o, ...propKeys) {\n  if (!propKeys || !o) return null\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === 'function') return k(o)\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key))\n    if (k === '*') return Object.keys(o)\n    return k\n  })\n  return keys.flat()\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    encryptProperties () {\n      return encryptProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    }),\n\n    decrypt () {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n}\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys)\n\n    const mutations = Object.keys(obj).filter(key => keys.includes(key))\n    if (mutations?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${mutations}`)\n    }\n  }\n\n  return {\n    freezeProperties () {\n      preventUpdates(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20\n    })\n  }\n}\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function requireProps (obj) {\n    const missing = keys.filter(key => key && !obj[key])\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`)\n    }\n  }\n  return {\n    requireProperties () {\n      requireProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 90\n    })\n  }\n}\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function hashPwds (obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    hashPasswords () {\n      return hashPwds(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    })\n  }\n}\n\nconst internalPropList = []\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps () {\n    const keys = parseKeys(o, ...propKeys)\n    const allowList = keys.concat(internalPropList)\n\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key))\n\n    if (unknownProps?.length > 0) {\n      throw new Error(`invalid properties: ${unknownProps}`)\n    }\n  }\n\n  return {\n    rejectUnknownProperties () {\n      return rejectUnknownProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: rejectUnknownProps.name,\n      input: enableValidation.onUpdate,\n      order: 10\n    })\n  }\n}\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test (expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr\n    return _expr.test(val)\n  }\n}\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:number\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness (v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal\n  return o.listSync({ [v.propKey]: compareVal }).length < 1\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal)\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid (v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal)\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate (obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey]\n\n      if (!propVal) {\n        return false\n      }\n      return !Validator.isValid(v, obj, propVal)\n    })\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`)\n    }\n  }\n\n  return {\n    validateProperties () {\n      validate(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 50\n    })\n  }\n}\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps (obj) {\n    const updates = updaters.filter(u => obj[u.propKey])\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n\n  return {\n    updateProperties () {\n      return updateProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 30\n    })\n  }\n}\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort () {\n      console.log({ func: 'invokePort', fn, args })\n      return this[fn](...args).then(o => o)\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'invokePort',\n      output: enableValidation.onUpdate,\n      order: 85\n    })\n  }\n}\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o)\n  }\n\n  return {\n    ...o,\n    async execMethod () {\n      const model = await functionType[typeof fn](fn, this, ...args)\n      return model\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'execMethod',\n      output: enableValidation.onUpdate,\n      order: 40\n    })\n  }\n}\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args)\n  }\n}\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`)\n  }\n  return propKey\n}\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr\n    throw new Error(`${x} invalid`)\n  }\n}\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n)\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo]\n\nexport default GlobalMixins\n","'use strict'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  hashPasswords,\n  validateProperties\n} from './mixins'\n\nexport function userFactory ({ uuid }) {\n  return async ({\n    userName,\n    password,\n    customerId,\n    firstName,\n    lastName,\n    phone,\n    email,\n    fibonacci\n  } = {}) =>\n    Object.freeze({\n      userId: uuid(),\n      password,\n      userName,\n      customerId,\n      firstName,\n      lastName,\n      phone,\n      email,\n      fibonacci\n    })\n}\n\nexport const userMixins = [\n  requireProperties('userName', 'password', 'firstName'),\n  freezeProperties('userId', 'userName'),\n  hashPasswords('password'),\n  validateProperties([\n    {\n      propKey: 'email',\n      regex: 'email',\n      unique: { encrypted: true }\n    },\n    {\n      propKey: 'userName',\n      unique: { encrypted: false }\n    }\n  ])\n]\n","'use strict'\n\nimport crypto from 'crypto'\nimport { nanoid } from 'nanoid'\n\nexport function compose (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal)\n  }\n}\n\nexport function composeAsync (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    )\n  }\n}\n\n/**\n * @callback pipeFn\n * @param {object} obj - the object to compose\n * @returns {object} - the composed object\n */\n\n/**\n * @param {pipeFn} func\n */\nexport const asyncPipe = (...func) => obj =>\n  func.reduce((o, f) => o.then(f), Promise.resolve(obj))\n\nconst passwd = process.env.ENCRYPTION_PWD\nconst algo = 'aes-192-cbc'\nconst key = crypto.scryptSync(String(passwd), 'salt', 24)\nconst iv = Buffer.alloc(16, 0)\n\nexport function encrypt (text) {\n  const cipher = crypto.createCipheriv(algo, key, iv)\n  let encrypted = cipher.update(text, 'utf8', 'hex')\n  encrypted += cipher.final('hex')\n  return encrypted\n}\n\nexport function decrypt (cipherText) {\n  console.log('decrypt(%s)', cipherText)\n  const decipher = crypto.createDecipheriv(algo, key, iv)\n  let decrypted = decipher.update(cipherText, 'hex', 'utf8')\n  decrypted += decipher.final('utf8')\n  return decrypted\n}\n\nexport function hash (data) {\n  return crypto\n    .createHash('sha1')\n    .update(data)\n    .digest('hex')\n}\n\nexport function uuid () {\n  // return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n  //   (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  // );\n  return nanoid()\n}\n\nexport function makeArray (v) {\n  return Array.isArray(v) ? v : [v]\n}\n\nexport function makeObject (prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }))\n  }\n  return prop\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async (promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result)\n    }))\n    .catch(error => {\n      console.error(error)\n      return Promise.resolve({ ok: false, error })\n    })\n}\n","\"use strict\";\n\nimport { Event } from \"./services/event-service\";\n\nexport class EventDispatcher {\n  constructor(adapter = Event) {\n    this.adapter = adapter;\n    this.subscriptions = new Map();\n  }\n\n  registerCallback(topic, callback) {\n    if (this.subscriptions.has(topic)) {\n      this.subscriptions.get(topic).push(callback);\n      return;\n    }\n    this.subscriptions.set(topic, [callback]);\n  }\n\n  async emitEvent(topic, message, method = \"notify\") {\n    await this.adapter[method](topic, message);\n  }\n\n  async init(method = \"listen\") {\n    function emitEvent(topic, message) {\n      this.emitEvent(topic, message);\n    }\n\n    // this.emitEvent(/Channel/, \"remoteRestart\");\n    await this.adapter[method](\n      /Channel/,\n      function ({ topic, message }) {\n        if (this.subscriptions.has(topic)) {\n          this.subscriptions\n            .get(topic)\n            .forEach(callback =>\n              callback({ message, emitEvent: emitEvent.bind(this) })\n            );\n        }\n      }.bind(this)\n    );\n  }\n}\n","\"use strict\";\n\nimport { EventDispatcher } from \"./event-dispatcher\";\nimport { uuid } from \"./domain/utils\";\n\nexport const Registry = {\n  eventNames: {\n    shipOrder: \"orderShipped\",\n    trackShipment: \"outForDelivery\",\n    verifyDelivery: \"deliveryVerified\",\n  },\n\n  sendEvent({ emitEvent, topic, eventData, eventSource, eventName }) {\n    console.log(\"Sending event...\");\n    console.log({ emitEvent, topic, eventData, eventSource, eventName });\n    setTimeout(async () => {\n      await emitEvent(\n        topic,\n        JSON.stringify({\n          eventData,\n          eventName,\n          eventTime: new Date().toUTCString(),\n          eventType: \"commandResponse\",\n          eventSource: eventSource,\n        })\n      );\n    }, 5000);\n  },\n\n  generateShippingEventData(event, externalId) {\n    const trackingId = uuid();\n    const shipmentId = trackingId;\n    const proofOfDelivery = `http://shipping.service.com?proof=${trackingId}`;\n    const eventData = { externalId };\n    if (event.eventName === \"shipOrder\") {\n      return { ...eventData, shipmentId };\n    }\n    if (event.eventName === \"trackShipment\") {\n      return { ...eventData, trackingId, trackingStatus: \"outForDelivery\" };\n    }\n    if (event.eventName === \"verifyDelivery\") {\n      return { ...eventData, proofOfDelivery };\n    }\n  },\n\n  generateShippingMessage(emitEvent, event, externalId) {\n    return {\n      emitEvent,\n      topic: event.eventData.commandResp,\n      eventData: this.generateShippingEventData(event, externalId),\n      eventName: this.eventNames[event.eventName],\n      eventSource: \"shippingService\",\n    };\n  },\n\n  inventoryCallbackFactory() {\n    function inventoryCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const warehouseAddress = /*null;*/ \"1234 warehouse dr, dock 2\";\n      const externalId = event.eventData.commandArgs.externalId;\n      const eventName = /*'outOfStock';*/ \"orderPicked\";\n      this.sendEvent({\n        emitEvent,\n        topic: event.eventData.replyChannel,\n        eventName,\n        eventData: { warehouse_addr: warehouseAddress, externalId },\n        eventSource: \"inventoryService\",\n      });\n    }\n    return inventoryCallback.bind(this);\n  },\n\n  shippingCallbackFactory() {\n    function shippingCallback({ message, emitEvent }) {\n      const event = JSON.parse(message);\n      const externalId = event.eventData.commandArgs.externalId;\n      const _message = this.generateShippingMessage(\n        emitEvent,\n        event,\n        externalId\n      );\n      this.sendEvent(_message);\n\n      if (event.eventName === \"trackShipment\") {\n        const eventData = {\n          ..._message.eventData,\n          trackingStatus: \"orderDelivered\",\n        };\n        setTimeout(\n          () =>\n            this.sendEvent({\n              ..._message,\n              eventData,\n              eventName: \"orderDelivered\",\n            }),\n          7000\n        );\n      }\n    }\n    return shippingCallback.bind(this);\n  },\n};\n\nconst dispatcher = new EventDispatcher();\n\ndispatcher.registerCallback(\n  \"inventoryChannel\",\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  \"shippingChannel\",\n  Registry.shippingCallbackFactory()\n);\n\nexport default dispatcher;\n","\"use strict\";\n\nexport const Address = {\n  /**\n   *\n   * @param {string} address US street address\n   */\n  async validateAddress(address) {\n    console.log(\"test validating address...\");\n\n    if (!address) {\n      throw new Error(\"no address provided\");\n    }\n\n    return address;\n  },\n\n};\n","\"use strict\";\n\nimport { EventDispatcher } from \"../../src/event-dispatcher\";\nimport { Registry } from \"../../src/service-registry\";\n\nconst shippingChannel = \"shippingChannel\";\nconst inventoryChannel = \"inventoryChannel\";\n\nconst callbacks = [];\nconst responses = [];\nconst topics = {\n  [shippingChannel]: /shipping/,\n  [inventoryChannel]: /inventory/,\n};\n\nexport function handleEvents(req, res) {\n  const message = JSON.stringify(req.body);\n  const topicName = Object.keys(topics).find(k => topics[k].test(message));\n  if (topicName) {\n    console.log({\n      func: handleEvents.name,\n      msg: \"found topic\",\n      topicName,\n      message,\n      cb: callbacks,\n    });\n\n    callbacks.forEach(callback => {\n      console.log({ name: callback.name, code: callback.toString() });\n      callback({ topicName, message });\n    });\n    console.log(responses);\n    responses.reduceRight(response => res.send(response), \"response\");\n  }\n}\n\nconst Event = {\n  topics: /Channel/,\n  listening: false,\n\n  listen(topic, callback) {\n    callbacks.push(callback);\n  },\n\n  notify(topic, message) {\n    responses.push(message);\n  },\n};\n\nconst dispatcher = new EventDispatcher(Event);\n\ndispatcher.registerCallback(\n  inventoryChannel,\n  Registry.inventoryCallbackFactory()\n);\n\ndispatcher.registerCallback(\n  shippingChannel,\n  Registry.shippingCallbackFactory()\n);\n\ndispatcher.init();\n","export * from \"./address-service\";\nexport * from \"./payment-service\";\nexport * from \"./shipping-service\";\nexport * from \"./event-service\";\nexport * from \"./inventory-service\";\n","\"use strict\";\n\nimport { Event } from \"../../src/services/event-service\";\n\nfunction sendEvent({ eventData, eventName }) {\n  setTimeout(async () => {\n    await Event.notify(\n      \"orderChannel\",\n      JSON.stringify({\n        eventData,\n        eventName,\n        eventType: \"CommandResponse\",\n        eventTime: new Date().toUTCString(),\n        eventSource: \"Inventory\",\n      })\n    );\n  }, 5000);\n}\n\nexport const Inventory = {\n  async pickOrder({ externalId, lineItems }) {\n    console.log(\"inventory items\");\n    console.log(lineItems);\n    const pickupAddress = \"1234 warehouse dr, dock2\";\n    sendEvent({\n      eventName: \"orderPicked\",\n      eventData: { pickupAddress, externalId },\n    });\n  },\n};\n","\"use strict\";\n\n/**\n * @callback authorizePaymentType\n * @param {string} id\n * @param {number} amount\n * @param {string} source_id\n * @param {string} customer_id\n * @param {boolean} [autocomplete]\n * @returns {Promise<string>}\n */\n\n/**\n * @typedef PaymentService\n * @property {authorizePaymentType} authorizePayment\n * @property {function()} completePayment\n * @property {function()} refundPayment\n */\n\n// import { Client, Environment, ApiError } from \"square\";\n\n// const client = new Client({\n//   environment: Environment.Sandbox,\n//   accessToken: process.env.SQUARE_ACCESS_TOKEN,\n// });\n\nexport const Payment = {\n  /**\n   * @type {authorizePaymentType}\n   * @param {*} id\n   * @param {*} amount\n   * @param {*} source_id\n   * @param {*} customer_id\n   * @param {*} autocomplete\n   * @param {*} currency\n   */\n  async authorizePayment(\n    id,\n    amount,\n    source_id,\n    customer_id,\n    autocomplete = false,\n    currency = \"USD\"\n  ) {\n    console.log(\"mock payment service called\");\n    const payload = {\n      idempotency_key: id,\n      amount_money: {\n        amount,\n        currency,\n      },\n      source_id,\n      autocomplete,\n      customer_id,\n      location_id: \"XK3DBG77NJBFX\",\n      reference_id: \"123456\",\n      note: \"Brief description\",\n      app_fee_money: {\n        amount: 10,\n        currency: \"USD\",\n      },\n    };\n    /*\n    const bodyAmountMoney = {};\n    bodyAmountMoney.amount = 200;\n    bodyAmountMoney.currency = \"USD\";\n\n    const bodyTipMoney = {};\n    bodyTipMoney.amount = 198;\n    bodyTipMoney.currency = \"CHF\";\n\n    const bodyAppFeeMoney = {};\n    bodyAppFeeMoney.amount = 10;\n    bodyAppFeeMoney.currency = \"USD\";\n\n    const body = {\n      sourceId: \"ccof:uIbfJXhXETSP197M3GB\",\n      idempotencyKey: \"4935a656-a929-4792-b97c-8848be85c27c\",\n      amountMoney: bodyAmountMoney,\n    };\n\n    body.tipMoney = bodyTipMoney;\n    body.appFeeMoney = bodyAppFeeMoney;\n    body.delayDuration = \"delay_duration6\";\n    body.autocomplete = true;\n    body.orderId = \"order_id0\";\n    body.customerId = \"VDKXEEKPJN48QDG3BGGFAK05P8\";\n    body.locationId = \"XK3DBG77NJBFX\";\n    body.referenceId = \"123456\";\n    body.note = \"Brief description\";\n\n    // try {\n    //   const {\n    //     result,\n    //     ...httpResponse\n    //   } = await client.paymentsApi.createPayment(body);\n    //   // Get more response info...\n    //   // const { statusCode, headers } = httpResponse;\n    // } catch (error) {\n    //   if (error instanceof ApiError) {\n    //     const errors = error.result;\n    //     // const { statusCode, headers } = error;\n    //   }\n    // }\n    */\n    return \"1234\";\n  },\n\n  /*\n  const response ={\n  \"payment\": {\n    \"id\": \"GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\",\n    \"created_at\": \"2019-07-10T13:23:49.154Z\",\n    \"updated_at\": \"2019-07-10T13:23:49.446Z\",\n    \"amount_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"app_fee_money\": {\n      \"amount\": 10,\n      \"currency\": \"USD\"\n    },\n    \"total_money\": {\n      \"amount\": 200,\n      \"currency\": \"USD\"\n    },\n    \"status\": \"COMPLETED\",\n    \"source_type\": \"CARD\",\n    \"card_details\": {\n      \"status\": \"CAPTURED\",\n      \"card\": {\n        \"card_brand\": \"VISA\",\n        \"last_4\": \"1111\",\n        \"exp_month\": 7,\n        \"exp_year\": 2026,\n        \"fingerprint\": \"sq-1-TpmjbNBMFdibiIjpQI5LiRgNUBC7u1689i0TgHjnlyHEWYB7tnn-K4QbW4ttvtaqXw\",\n        \"card_type\": \"DEBIT\",\n        \"prepaid_type\": \"PREPAID\",\n        \"bin\": \"411111\"\n      },\n      \"entry_method\": \"ON_FILE\",\n      \"cvv_status\": \"CVV_ACCEPTED\",\n      \"avs_status\": \"AVS_ACCEPTED\",\n      \"auth_result_code\": \"nsAyY2\",\n      \"statement_description\": \"SQ *MY MERCHANT\"\n    },\n    \"location_id\": \"XTI0H92143A39\",\n    \"order_id\": \"m2Hr8Hk8A3CTyQQ1k4ynExg92tO3\",\n    \"reference_id\": \"123456\",\n    \"note\": \"Brief description\",\n    \"customer_id\": \"RDX9Z4XTIZR7MRZJUXNY9HUK6I\",\n    \"receipt_number\": \"GQTF\",\n    \"receipt_url\": \"https://squareup.com/receipt/preview/GQTFp1ZlXdpoW4o6eGiZhbjosiDFf\"\n  }\n}\n  /*\n{\n  \"errors\": [\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"source_id\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"VALUE_EMPTY\",\n      \"detail\": \"Field must not be blank\",\n      \"field\": \"idempotency_key\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    },\n    {\n      \"code\": \"MISSING_REQUIRED_PARAMETER\",\n      \"detail\": \"Field must be set\",\n      \"field\": \"amount_money\",\n      \"category\": \"INVALID_REQUEST_ERROR\"\n    }\n  ]\n}\n  */\n\n  async completePayment(model) {\n    console.log(\"REAL completing payment: %s\", model.orderNo);\n    return \"1234\";\n  },\n\n  async refundPayment(model) {\n    console.log(\"REAL refunding payment: %s\", model.orderNo);\n  },\n};\n","\"use strict\";\n\n/**\n * @typedef {import('../adapters/event-adapter').EventMessage} EventMessage\n */\n\n/**\n * @typedef {import('../adapters/event-adapter').CommandEvent} CommandEvent\n */\n\n/**\n * @callback shipOrder\n * @param {string} shipTo\n * @param {string} shipFrom\n * @param {string} lineItems\n * @param {string} signature\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @callback trackShipment\n * @param {string} shipmentId\n * @param {string} externalId\n * @param {string} requester\n * @param {string} respondOn\n * @returns {EventMessage}\n */\n\n/**\n * @typedef {string} functionName\n */\n\n/**\n * @typedef {Object} shippingService formats and parses shipping event messages\n * @property {string} serviceName - programmatic service name in eventSource/Target\n * @property {string} topic - event topic \"shippingChannel\" when sending messasges\n * @property {shipOrder} shipOrder - format event message requesting shipping label and pickup of order\n * @property {trackShipment} trackShipment - report on location/status of parcel\n * @property {function():EventMessage} verifyDelivery - ensure customer recieved parcel\n * @property {function():EventMessage} returnShipment - return to sender if refunding\n * @property {function(functionName,EventMessage):{[key]:string}} getPayload - extract payload\n */\n\nfunction createEventMessage({ requester, service, type, name, id, data }) {\n  return {\n    eventSource: requester,\n    eventTarget: service,\n    eventType: type,\n    eventName: name,\n    eventTime: new Date().getTime(),\n    eventUuid: id,\n    eventData: data,\n  };\n}\n\nfunction createCommandEvent(name, topic, args) {\n  return {\n    commandName: name,\n    commandResp: topic,\n    commandArgs: { ...args },\n  };\n}\n\n/**\n * Shipping service events\n * @type {shippingService}\n */\nexport const Shipping = {\n  serviceName: \"shippingService\",\n  topic: \"shippingChannel\",\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {shipMessage}\n   */\n  shipOrder({\n    shipTo,\n    shipFrom,\n    lineItems,\n    signature,\n    externalId,\n    requester,\n    respondOn,\n  }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.shipOrder.name,\n      id: externalId,\n      data: createCommandEvent(this.shipOrder.name, respondOn, {\n        shipTo,\n        shipFrom,\n        lineItems,\n        signature,\n        externalId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  trackShipment({ externalId, shipmentId, trackingId, requester, respondOn }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.trackShipment.name,\n      id: externalId,\n      data: createCommandEvent(this.trackShipment.name, respondOn, {\n        externalId,\n        shipmentId,\n        trackingId,\n      }),\n    });\n  },\n\n  /**\n   *\n   * @param {*} param0\n   * @returns {EventMessage}\n   */\n  verifyDelivery({ requester, respondOn, trackingId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      name: this.verifyDelivery.name,\n      id: externalId,\n      data: createCommandEvent(this.verifyDelivery.name, respondOn, {\n        externalId,\n        trackingId,\n      }),\n    });\n  },\n\n  returnShipment({ requester, respondOn, shipmentId, externalId }) {\n    return createEventMessage({\n      requester,\n      service: this.serviceName,\n      type: \"command\",\n      id: externalId,\n      name: this.returnShipment.name,\n      data: createCommandEvent(this.returnShipment, respondOn, {\n        shipmentId,\n        externalId,\n      }),\n    });\n  },\n\n  getPayload(func, event) {\n    const payloads = {\n      [this.shipOrder.name]: {\n        shipmentId: event.eventData.shipmentId,\n      },\n      [this.trackShipment.name]: {\n        trackingId: event.eventData.trackingId,\n        trackingStatus: event.eventData.trackingStatus,\n      },\n      [this.verifyDelivery.name]: {\n        proofOfDelivery: event.eventData.proofOfDelivery,\n      },\n    };\n    return payloads[func];\n  },\n\n  getProperty(event, key) {\n    return event.eventData[key];\n  },\n};\n"],"sourceRoot":""}