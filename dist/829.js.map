{"version":3,"sources":["webpack://aegis-app/./src/adapters/datasources/datasource-mongodb.js","webpack://aegis-app/./src/config/customer.js","webpack://aegis-app/./src/config/dam-api.js","webpack://aegis-app/./src/config/index.js","webpack://aegis-app/./src/config/inventory.js","webpack://aegis-app/./src/config/order.js","webpack://aegis-app/./src/config/query-engine.js","webpack://aegis-app/./src/config/user.js","webpack://aegis-app/./src/config/webswitch.js","webpack://aegis-app/./src/domain/bind-adapters.js","webpack://aegis-app/./src/domain/customer.js","webpack://aegis-app/./src/domain/index.js","webpack://aegis-app/./src/domain/inventory.js","webpack://aegis-app/./src/domain/user.js","webpack://aegis-app/./src/domain/webswitch.js"],"names":["getSecret","process","env","MONGODB_CREDS","user","pass","token","archive","id","console","debug","DataSourceAdapterMongoDb","url","cacheSize","DataSourceMongoDb","DataSourceMongoDbArchive","datasource","factory","name","creds","Customer","modelName","endpoint","dependencies","uuid","nanoid","makeCustomerFactory","validate","validateModel","onDelete","okToDelete","mixins","freezeProperties","requireProperties","validateProperties","propKey","regex","relations","orders","type","foreignKey","commands","decrypt","command","acl","accessControlList","customer","allow","desc","DigitalAssetMgmt","domain","payload","ports","damUploadIn","service","timeout","damSearchIn","damBrowseIn","damDownloadIn","damDownloadOut","circuitBreaker","callVolume","intervalMs","errorRate","damUploadOut","damSearchOut","damBrowseOut","Inventory","makeInventoryFactory","maxnum","values","categories","assetTypes","isValid","_obj","prop","every","p","properties","Order","makeOrderFactory","baseClass","requiredForGuest","requiredForApproval","requiredForCompletion","freezeOnApproval","freezeOnCompletion","updateProperties","update","recalcTotal","updateSignature","Object","OrderStatus","statusChangeValid","orderTotalValid","readyToDelete","eventHandlers","handleOrderEvent","listen","notify","validateAddress","keys","producesEvent","disabled","authorizePayment","consumesEvent","undo","cancelPayment","pickOrder","callback","orderPicked","returnInventory","portTimeout_pickOrder_order","shipOrder","orderShipped","returnShipment","portTimeout_shipOrder_order","portRetryFailed_order","fallbackFn","cancel","trackShipment","verifyDelivery","returnDelivery","completePayment","paymentCompleted","refundPayment","cancelShipment","cancelOrders","methods","approveOrders","trackAsyncContext","customHttpStatus","testContainsMany","runFibonacciJs","inventory","arrayKey","chat","routes","path","get","req","res","listModels","writable","serialize","query","post","log","addModel","body","result","status","json","message","ctx","context","OrderError","patch","editModel","params","changes","approve","runFibonacci","model","start","Date","now","fibonacci","x","param","parseFloat","Number","isNaN","time","serializers","on","key","value","enabled","QueryEngine","qeRunFibonacci","qeCustomHttpStatus","qeGetPublicIpAddressIn","qeGetPublicIpAddressOut","User","userFactory","userMixins","authenticate","createWebToken","verifyWebToken","authorize","applyRateLimits","userName","password","invokePort","port","args","WebSwitch","makeClient","internal","serviceLocatorInit","serviceLocatorAsk","serviceLocatorAnswer","websocketConnect","websocketPing","websocketSend","websocketClose","websocketStatus","websocketTerminate","websocketOnClose","websocketOnOpen","websocketOnMessage","websocketOnError","websocketOnPong","makeAdapters","adapters","services","map","e","warn","reduce","c","createCustomer","firstName","lastName","shippingAddress","creditCardNumber","billingAddress","phone","email","userId","freeze","customerId","length","error","func","validateSpec","spec","missing","filter","Error","entries","makeModel","concat","GlobalMixins","bindAdapters","models","modelSpecs","category","price","discount","sku","purchaseOrder","vendor","inStock","assetType","quantity","hashPasswords","unique","encrypted","HOSTNAME","SERVICENAME","HBEATTIMEOUT","WSOCKETERROR","isPrimary","test","SWITCH","isBackup","BACKUP","DEBUG","heartbeatMs","sslEnabled","SSL_ENABLED","clearPort","PORT","cipherPort","SSL_PORT","activePort","activeProto","activeHost","DOMAIN","os","proto","SWITCH_PROTO","SWITCH_PORT","host","SWITCH_HOST","override","SWITCH_OVERRIDE","apiProto","apiUrl","serviceUrl","ServiceMeshClient","mesh","pong","heartbeatTimer","headers","pid","eventName","hostname","role","telemetry","memoryUsage","cpuUsage","performance","nodeTiming","listServices","socketState","primary","backup","options","binary","resolveUrl","agent","protocol","useBinary","send","heartbeat","setTimeout","sendQueuedMsgs","missingEventName","emit","listeners","forEach","listener","fn","connect","code","reason","msg","toString","clearTimeout","once","sent","enqueue","queueDepth","dequeue","save","removeAllListeners","EventEmitter","client","sendQueue","sendQueueMax","push","shift","getClient","publish","event","subscribe","handler","close"],"mappings":"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","file":"829.js","sourcesContent":["'use strict'\n\nfunction getSecret () {\n  return process.env.MONGODB_CREDS || { user: null, pass: null, token: null }\n}\n\nfunction archive (id) {\n  console.debug('mock archive', id)\n}\n\n/**\n * Datasource adapter factory.\n * @param {string} url database url\n * @param {number} [cacheSize] number of models to keep in cache\n * @param {*} DataSource base class that enables caching\n * @returns {import(\"./datasource\").default}\n */\nexport const DataSourceAdapterMongoDb = function (\n  url,\n  cacheSize,\n  DataSourceMongoDb\n) {\n  /**\n   * MongoDB adapter extends in-memory datasource to support caching.\n   * The cache is always updated first, which allows the system to run\n   * even when the database is offline.\n   */\n  class DataSourceMongoDbArchive extends DataSourceMongoDb {\n    constructor (datasource, factory, name) {\n      super(datasource, factory, name)\n      this.url = url\n      this.cacheSize = cacheSize\n      this.creds = getSecret()\n    }\n\n    /**\n     * @override\n     */\n    delete (id) {\n      console.debug('archive', id)\n      archive(id)\n    }\n  }\n\n  return DataSourceMongoDbArchive\n}\n","'use strict'\n\nimport {\n  validateModel,\n  freezeProperties,\n  validateProperties,\n  requireProperties\n} from '../domain/mixins'\nimport { makeCustomerFactory, okToDelete } from '../domain/customer'\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport { nanoid } from 'nanoid'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Customer = {\n  modelName: 'customer',\n  endpoint: 'customers',\n  dependencies: { uuid: () => nanoid(8) },\n  factory: makeCustomerFactory,\n  validate: validateModel,\n  onDelete: okToDelete,\n  mixins: [\n    freezeProperties('customerId'),\n    requireProperties(\n      'firstName',\n      'lastName',\n      'email',\n      'shippingAddress',\n      'billingAddress',\n      'creditCardNumber'\n    ),\n    validateProperties([\n      {\n        propKey: 'email',\n        // unique: { encrypted: true },\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      }\n    ])\n  ],\n  relations: {\n    orders: {\n      modelName: 'order',\n      type: 'oneToMany',\n      foreignKey: 'customerId'\n    }\n  },\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    }\n  },\n  accessControlList: {\n    customer: {\n      allow: 'read',\n      type: 'relation',\n      desc: 'Allow orders to see customers.'\n    }\n  }\n}\n","/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const DigitalAssetMgmt = {\n  modelName: 'DigitalAssetMgmt',\n  endpoint: 'dam',\n  domain: 'dam',\n  factory: dependencies => payload => ({ ...dependencies, ...payload }),\n  ports: {\n    damUploadIn: {\n      service: 'dam',\n      type: 'inbound',\n      timeout: 0\n    },\n    damSearchIn: {\n      service: 'dam',\n      type: 'inbound',\n      timeout: 0\n    },\n    damBrowseIn: {\n      service: 'dam',\n      type: 'inbound',\n      timeout: 0\n    },\n    damDownloadIn: {\n      service: 'dam',\n      type: 'inbound',\n      timeout: 0\n    },\n    damDownloadOut: {\n      service: 'dam',\n      type: 'outbound',\n      timeout: 500,\n      circuitBreaker: {\n        default: {\n          callVolume: 100,\n          intervalMs: 20,\n          errorRate: 30\n        }\n      }\n    },\n    damUploadOut: {\n      service: 'dam',\n      type: 'outbound',\n      timeout: 500,\n      circuitBreaker: {\n        default: {\n          callVolume: 100,\n          intervalMs: 20,\n          errorRate: 30\n        }\n      }\n    },\n    damSearchOut: {\n      service: 'dam',\n      type: 'outbound',\n      timeout: 500,\n      circuitBreaker: {\n        default: {\n          callVolume: 100,\n          intervalMs: 20,\n          errorRate: 30\n        }\n      }\n    },\n    damBrowseOut: {\n      service: 'dam',\n      type: 'outbound',\n      timeout: 500,\n      circuitBreaker: {\n        default: {\n          callVolume: 100,\n          intervalMs: 20,\n          errorRate: 30\n        }\n      }\n    }\n  }\n}\n","export * from './webswitch'\nexport * from './order'\nexport * from './customer'\nexport * from './user'\nexport * from './inventory'\nexport * from './query-engine'\nexport * from './dam-api'\n","'use strict'\n\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport {\n  makeInventoryFactory,\n  assetTypes,\n  properties,\n  categories\n} from '../domain/inventory'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  validateProperties\n} from '../domain/mixins'\n\n/**\n * @type {import(\"../domain/order\").ModelSpecification}\n */\nexport const Inventory = {\n  modelName: 'inventory',\n  endpoint: 'inventory',\n  dependencies: {},\n  factory: makeInventoryFactory,\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: 'mongodb://127.0.0.1:27017',\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceMongoDb'\n  // },\n  mixins: [\n    requireProperties('name', 'inStock', 'category', 'price', 'purchaseOrder'),\n    validateProperties([\n      {\n        propKey: 'inStock',\n        typeof: 'number',\n        maxnum: 99999\n      },\n      {\n        propKey: 'category',\n        values: categories\n      },\n      {\n        propKey: 'assetType',\n        values: assetTypes\n      },\n      {\n        propKey: 'properties',\n        isValid: (_obj, prop) => prop.every(p => properties.includes(p))\n      },\n      {\n        propKey: 'price',\n        typeof: 'number',\n        maxnum: 999.99\n      }\n    ]),\n    freezeProperties('*')\n  ],\n  relations: {\n    orders: {\n      modelName: 'order',\n      type: 'oneToMany',\n      foreignKey: 'itemId',\n      desc: 'many items per order'\n    }\n  }\n}\n","'use strict'\n\nimport {\n  makeOrderFactory,\n  readyToDelete,\n  handleOrderEvent,\n  orderShipped,\n  paymentCompleted,\n  OrderStatus,\n  recalcTotal,\n  requiredForCompletion,\n  statusChangeValid,\n  freezeOnApproval,\n  freezeOnCompletion,\n  orderTotalValid,\n  returnInventory,\n  returnShipment,\n  refundPayment,\n  returnDelivery,\n  cancelPayment,\n  updateSignature,\n  requiredForGuest,\n  requiredForApproval,\n  approve,\n  cancel,\n  accountOrder,\n  OrderError,\n  orderPicked\n} from '../domain/order'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  updateProperties,\n  validateProperties,\n  validateModel,\n  allowProperties\n} from '../domain/mixins'\nimport { nanoid } from 'nanoid'\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Order = {\n  modelName: 'order',\n  endpoint: 'orders',\n  factory: makeOrderFactory,\n  datasource: {\n    factory: DataSourceAdapterMongoDb,\n    url: 'mongodb://127.0.0.1:27017',\n    cacheSize: 4000,\n    baseClass: 'DataSourceMongoDb'\n  },\n  dependencies: { uuid: () => nanoid(8) },\n  mixins: [\n    requireProperties(\n      'orderItems',\n      requiredForGuest([\n        'lastName',\n        'firstName',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'email'\n      ]),\n      requiredForApproval('paymentStatus'),\n      requiredForCompletion('proofOfDelivery')\n    ),\n    freezeProperties(\n      'orderNo',\n      'customerId',\n      freezeOnApproval([\n        'email',\n        'lastName',\n        'firstName',\n        'orderItems',\n        'orderTotal',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'paymentStatus'\n      ]),\n      freezeOnCompletion('*')\n    ),\n    updateProperties([\n      {\n        propKey: 'orderItems',\n        update: recalcTotal\n      },\n      {\n        propKey: 'orderItems',\n        update: updateSignature\n      }\n    ]),\n    validateProperties([\n      {\n        propKey: 'orderStatus',\n        values: Object.values(OrderStatus),\n        isValid: statusChangeValid\n      },\n      {\n        propKey: 'orderTotal',\n        maxnum: 99999.99,\n        isValid: orderTotalValid\n      },\n      {\n        propKey: 'email',\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      },\n      {\n        propKey: 'phone',\n        regex: 'phone'\n      }\n    ])\n    // allowProperties([fibonacci, time, result])\n  ],\n  validate: validateModel,\n  onDelete: readyToDelete,\n  eventHandlers: [handleOrderEvent],\n  ports: {\n    listen: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    notify: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    validateAddress: {\n      service: 'Address',\n      type: 'outbound',\n      keys: 'shippingAddress',\n      producesEvent: 'addressValidated',\n      disabled: true\n    },\n    authorizePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      keys: 'paymentStatus',\n      consumesEvent: 'startWorkflow',\n      producesEvent: 'paymentAuthorized',\n      undo: cancelPayment,\n      disabled: true\n    },\n    pickOrder: {\n      service: 'Inventory',\n      type: 'outbound',\n      keys: 'pickupAddress',\n      callback: orderPicked,\n      consumesEvent: 'itemsAvailable',\n      producesEvent: 'orderPicked',\n      undo: returnInventory,\n      circuitBreaker: {\n        portTimeout_pickOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 5000\n        }\n      }\n    },\n    shipOrder: {\n      service: 'Shipping',\n      type: 'outbound',\n      callback: orderShipped,\n      consumesEvent: 'orderPicked',\n      producesEvent: 'orderShipped',\n      undo: returnShipment,\n      circuitBreaker: {\n        portTimeout_shipOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        },\n        portRetryFailed_order: {\n          callVolume: 3,\n          errorRate: 2,\n          intervalMs: 60000,\n          fallbackFn: cancel\n        },\n        default: {\n          callVolume: 3,\n          errorRate: 3,\n          intervalMs: 60000\n        }\n      }\n    },\n    trackShipment: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: ['trackingStatus', 'trackingId'],\n      consumesEvent: 'orderShipped',\n      producesEvent: 'orderDelivered',\n      circuitBreaker: {\n        portRetryFailed_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    verifyDelivery: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: 'proofOfDelivery',\n      consumesEvent: 'orderDelivered',\n      producesEvent: 'deliveryVerified',\n      undo: returnDelivery\n    },\n    completePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      callback: paymentCompleted,\n      consumesEvent: 'deliveryVerified',\n      producesEvent: 'orderComplete',\n      undo: refundPayment\n    },\n    cancelShipment: {\n      service: 'Shipping',\n      type: 'outbound'\n    },\n    refundPayment: {\n      service: 'Payment',\n      type: 'outbound'\n    },\n    cancelOrders: {\n      service: 'Order',\n      type: 'inbound',\n      timeout: 0,\n      methods: ['post']\n    },\n    approveOrders: {\n      service: 'Order',\n      type: 'inbound',\n      timeout: 0,\n      methods: ['patch']\n    },\n    trackAsyncContext: {\n      service: 'Telemetry',\n      type: 'inbound',\n      timeout: 0\n    },\n    customHttpStatus: {\n      service: 'Telemetry',\n      type: 'inbound',\n      timeout: 0\n    },\n    testContainsMany: {\n      service: 'Inventory',\n      type: 'inbound',\n      timeout: 0\n    },\n    runFibonacciJs: {\n      service: 'Test',\n      type: 'inbound',\n      timeout: 0\n    }\n  },\n  relations: {\n    customer: {\n      modelName: 'customer',\n      type: 'manyToOne',\n      foreignKey: 'customerId',\n      desc: 'Many orders per customer, just one customer per order'\n    },\n    inventory: {\n      modelName: 'inventory',\n      type: 'containsMany',\n      foreignKey: 'itemId',\n      arrayKey: 'orderItems',\n      desc: 'An order contains a list of inventory items to ship.'\n    },\n    chat: {\n      modelName: 'user',\n      type: 'custom',\n      foreignKey: 'userId',\n      desc: 'A custom relation used for integrated chat'\n    }\n  },\n  routes: [\n    {\n      path: '/orders',\n      get: async (req, res, ports) =>\n        ports.listModels({\n          writable: res,\n          serialize: true,\n          query: req.query\n        }),\n\n      post: async (req, res, ports) => {\n        console.log('/orders')\n        try {\n          const result = await ports.addModel(req.body)\n          res\n            .status(200)\n            .json({ message: 'ok', ctx: result.context, id: result.id })\n        } catch (error) {\n          throw new OrderError(error, 404)\n        }\n      }\n    },\n    {\n      path: '/orders/:id',\n      get: async (req, res, ports) =>\n        ports.listModels({\n          writable: res,\n          serialize: true,\n          query: req.query\n        }),\n\n      patch: async (req, res, ports) => {\n        console.log('/orders/:id')\n        try {\n          const result = await ports.editModel({\n            id: req.params.id,\n            changes: req.body\n          })\n          res.status(200).json({ message: 'ok', ctx: result.context })\n        } catch (error) {\n          throw new OrderError(error, 404)\n        }\n      }\n    }\n  ],\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    },\n    approve: {\n      command: approve,\n      acl: ['write', 'approve']\n    },\n    cancel: {\n      command: cancel,\n      acl: ['write', 'cancel']\n    },\n    runFibonacci: {\n      command: model => {\n        const start = Date.now()\n        function fibonacci (x) {\n          if (x === 0) {\n            return 0\n          }\n          if (x === 1) {\n            return 1\n          }\n          return fibonacci(x - 1) + fibonacci(x - 2)\n        }\n        const param = parseFloat(model.fibonacci)\n        return {\n          result: fibonacci(Number.isNaN(param) ? 10 : param),\n          time: Date.now() - start\n        }\n      },\n      acl: ['read', 'write']\n    }\n  },\n  serializers: [\n    {\n      on: 'deserialize',\n      key: 'creditCardNumber',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'shippingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    }\n    // {\n    //   on: 'deserialize',\n    //   key: 'billingAddress',\n    //   type: 'string',\n    //   value: (key, value) => decrypt(value),\n    //   enabled: false\n    // }\n  ]\n}\n","/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const QueryEngine = {\n  modelName: 'QueryEngine',\n  endpoint: 'qe',\n  factory: dependencies => payload => ({ ...dependencies, ...payload }),\n  ports: {\n    qeRunFibonacci: {\n      service: 'QE',\n      type: 'inbound',\n      timeout: 0\n    },\n    qeCustomHttpStatus: {\n      service: 'QE',\n      type: 'inbound',\n      timeout: 0\n    },\n    qeGetPublicIpAddressIn: {\n      service: 'QE',\n      type: 'inbound',\n      timeout: 0\n    },\n    qeGetPublicIpAddressOut: {\n      service: 'QE',\n      type: 'outbound',\n      timeout: 500,\n      circuitBreaker: {\n        default: {\n          callVolume: 100,\n          intervalMs: 20,\n          errorRate: 30\n        }\n      }\n    }\n  }\n}\n","'use strict'\n\nimport { validateModel } from '../domain/mixins'\nimport { userFactory, userMixins } from '../domain/user'\nimport { uuid } from '../domain/utils'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const User = {\n  modelName: 'user',\n  endpoint: 'users',\n  dependencies: { uuid },\n  factory: userFactory,\n  mixins: userMixins,\n  validate: validateModel,\n  ports: {\n    authenticate: {\n      service: 'auth',\n      type: 'inbound'\n    },\n    createWebToken: {\n      service: 'auth',\n      type: 'outbound'\n    },\n    verifyWebToken: {\n      service: 'auth',\n      type: 'outbound'\n    },\n    authorize: {\n      service: 'authz',\n      type: 'inbound'\n    },\n    applyRateLimits: {\n      service: 'authz',\n      type: 'inbound'\n    }\n  },\n  routes: [\n    {\n      path: '/users/login',\n      post: (req, res, ports) => {\n        const { userName, password } = req.body\n        return ports.invokePort({\n          port: 'authenticate',\n          args: [userName, password]\n        })\n      }\n    }\n  ],\n  relations: {\n    customer: {\n      foreignKey: 'customerId',\n      type: 'oneToOne',\n      modelName: 'customer'\n    }\n  }\n}\n","'use strict'\n\nimport { makeClient } from '../domain/webswitch'\n\n/**\n * @type {import('../domain').ModelSpecification}\n */\nexport const WebSwitch = {\n  modelName: 'webswitch',\n  endpoint: 'service-mesh',\n  factory: makeClient,\n  internal: true,\n  ports: {\n    serviceLocatorInit: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAsk: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    serviceLocatorAnswer: {\n      service: 'serviceLocator',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketConnect: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketPing: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketSend: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 3000\n    },\n    websocketClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketStatus: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketTerminate: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnClose: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnOpen: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnMessage: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnError: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    },\n    websocketOnPong: {\n      service: 'websocket',\n      type: 'outbound',\n      timeout: 0\n    }\n  }\n}\n","\"use strict\";\n\nexport default function makeAdapters(ports, adapters, services) {\n  if (!ports || !adapters) {\n    return;\n  }\n  return Object.keys(ports)\n    .map(port => {\n      if (!adapters[port]) {\n        return;\n      }\n\n      try {\n        return {\n          [port]: adapters[port](services[ports[port].service]),\n        };\n      } catch (e) {\n        console.warn(e.message);\n      }\n    })\n    .reduce((p, c) => ({ ...p, ...c }));\n}\n","\"use strict\";\n\nexport function makeCustomerFactory(dependencies) {\n  return function createCustomer({\n    firstName,\n    lastName,\n    shippingAddress,\n    creditCardNumber,\n    billingAddress = shippingAddress,\n    phone,\n    email,\n    userId,\n  } = {}) {\n    return Object.freeze({\n      customerId: dependencies.uuid(),\n      firstName,\n      lastName,\n      creditCardNumber,\n      shippingAddress,\n      billingAddress,\n      phone,\n      email,\n      userId,\n    });\n  };\n}\n\nexport async function okToDelete(customer) {\n  try {\n    const orders = await customer.orders();\n    return orders.length > 0;\n  } catch (error) {\n    console.error({ func: okToDelete.name, error });\n    return true;\n  }\n}\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n/**\n * @callback controller\n * @param {Request} req\n * @param {Response} res\n */\n\n/**\n * @typedef {{\n *  [path: string]: {\n *    get?: controller,\n *    post?: controller,\n *    patch?: controller,\n *    delete?:controller\n *   }\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./mixins\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [routes] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n *\n */\n\n/**\n * @callback addModel\n * @param {{ searchTerm1, searchTerm2, searchTermN }} input\n * @returns {Promise<Model>}\n */\n\n/**\n * @callback editModel\n * @param {{ id:string, changes:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findModel\n * @param {{ id:string, query:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findRelatedModels\n * @param {{ query:object, relation:string }} input\n * @returns { Promise<{Model,[Model]}> }\n */\n\n/**\n * @callback listModels\n * @param {{ query:object }} input e.g. { searchTerm1 : 'val', ...etc }\n * @returns { [Promise<Model>] }\n */\n\n/**\n * @callback executeCommand\n * @param {{ id:string }} input\n * @returns { Model }\n */\n\n/**\n * @typedef DomainPortAPI\n * @property { addModel } addModel\n * @property { editModel } editModel\n * @property { listModels } listModels\n * @property { findModel } findModel\n * @property { findRelatedModels } findModel\n * @property { removeModel } removeModel\n * @property { executeCommand } executeCommand\n */\n\nimport GlobalMixins from './mixins'\nimport bindAdapters from './bind-adapters'\n\n// Service dependencies\nimport * as services from '../services'\nimport * as adapters from '../adapters'\nimport * as ports from '../domain/ports'\n// Models\nimport * as modelSpecs from '../config'\n\n/**\n *\n * @param {ModelSpecification} spec\n */\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","'use strict'\n\nexport const assetTypes = ['rotating-asset', 'spare-part']\nexport const properties = ['height', 'length', 'width', 'weight', 'color']\nexport const categories = ['home', 'auto', 'business']\n\nexport const makeInventoryFactory = dependencies => ({\n  category,\n  properties,\n  price,\n  discount,\n  name,\n  desc,\n  sku,\n  purchaseOrder,\n  vendor,\n  inStock,\n  assetType,\n  quantity\n}) =>\n  Object.freeze({\n    category,\n    properties,\n    price: price - (discount || 0.0),\n    name,\n    desc,\n    sku,\n    purchaseOrder,\n    vendor,\n    inStock,\n    assetType,\n    quantity\n  })\n","'use strict'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  hashPasswords,\n  validateProperties\n} from './mixins'\n\nexport function userFactory ({ uuid }) {\n  return async ({\n    userName,\n    password,\n    customerId,\n    firstName,\n    lastName,\n    phone,\n    email,\n    fibonacci\n  } = {}) =>\n    Object.freeze({\n      userId: uuid(),\n      password,\n      userName,\n      customerId,\n      firstName,\n      lastName,\n      phone,\n      email,\n      fibonacci\n    })\n}\n\nexport const userMixins = [\n  requireProperties('userName', 'password', 'firstName'),\n  freezeProperties('userId', 'userName'),\n  hashPasswords('password'),\n  validateProperties([\n    {\n      propKey: 'email',\n      regex: 'email',\n      unique: { encrypted: true }\n    },\n    {\n      propKey: 'userName',\n      unique: { encrypted: false }\n    }\n  ])\n]\n","/**\n * webswitch (c)\n *\n * Websocket clients connect to a common ws server,\n * called a webswitch. When a client sends a message,\n * webswitch broadcasts the message to all other\n * connected clients, including a special webswitch\n * server that acts as an uplink to another network,\n * if one is defined. A Webswitch server can also\n * receive messgages from an uplink and will broadcast\n * those messages to its clients as well.\n */\n\n'use strict'\n\nimport os from 'os'\nimport EventEmitter from 'events'\nimport { nanoid } from 'nanoid'\n\nconst HOSTNAME = 'webswitch.local'\nconst SERVICENAME = 'webswitch'\nconst HBEATTIMEOUT = 'heartBeatTimeout'\nconst WSOCKETERROR = 'webSocketError'\n\nconst isPrimary = /true/i.test(process.env.SWITCH)\nconst isBackup = /true/i.test(process.env.BACKUP)\nconst debug = /true/i.test(process.env.DEBUG)\nconst heartbeatMs = 10000\nconst sslEnabled = /true/i.test(process.env.SSL_ENABLED)\nconst clearPort = process.env.PORT || 80\nconst cipherPort = process.env.SSL_PORT || 443\nconst activePort = sslEnabled ? cipherPort : clearPort\nconst activeProto = sslEnabled ? 'wss' : 'ws'\nconst activeHost = process.env.DOMAIN || os.hostname()\nconst proto = isPrimary ? activeProto : process.env.SWITCH_PROTO\nconst port = isPrimary ? activePort : process.env.SWITCH_PORT\nconst host = isPrimary ? activeHost : process.env.SWITCH_HOST\nconst override = /true/i.test(process.env.SWITCH_OVERRIDE)\nconst apiProto = sslEnabled ? 'https' : 'http'\nconst apiUrl = `${apiProto}://${activeHost}:${activePort}`\n\nfunction serviceUrl () {\n  const url = `${proto}://${host}:${port}`\n  if (proto && host && port) return url\n  if (isPrimary) throw new Error(`invalid url ${url}`)\n  return null\n}\n\n/**\n * Service mesh client impl. Uses websocket and service-locator\n * adapters through ports injected into the {@link mesh} model.\n * Cf. modelSpec by the same name, i.e. `webswitch`.\n */\nexport class ServiceMeshClient extends EventEmitter {\n  constructor (mesh) {\n    super('webswitch')\n    this.url\n    this.mesh = mesh\n    this.name = SERVICENAME\n    this.isPrimary = isPrimary\n    this.isBackup = isBackup\n    this.pong = true\n    this.heartbeatTimer = 3000\n    this.headers = {\n      'x-webswitch-host': os.hostname(),\n      'x-webswitch-role': 'node',\n      'x-webswitch-pid': process.pid\n    }\n  }\n\n  /**\n   *\n   * @param {number} asyncId id's instance to kill\n   * @returns {{telemetry:{mem:number,cpu:number}}}\n   */\n  telemetry () {\n    return {\n      eventName: 'telemetry',\n      proto: this.name,\n      apiUrl,\n      heartbeatMs,\n      hostname: os.hostname(),\n      role: 'node',\n      pid: process.pid,\n      telemetry: {\n        ...process.memoryUsage(),\n        ...process.cpuUsage(),\n        ...performance.nodeTiming\n      },\n      services: this.mesh.listServices(),\n      socketState: this.mesh.websocketStatus() || 'undefined'\n    }\n  }\n\n  /**\n   * Zero-config, self-forming mesh network:\n   * Discover URL of broker to connect to, or\n   * if this is the broker, cast the local url\n   * @returns {Promise<string>} url\n   */\n  async resolveUrl () {\n    await this.mesh.serviceLocatorInit({\n      serviceUrl: serviceUrl(),\n      name: this.name,\n      primary: this.isPrimary,\n      backup: this.isBackup\n    })\n    if (this.isPrimary) {\n      await this.mesh.serviceLocatorAnswer()\n      return serviceUrl()\n    }\n    return override ? serviceUrl() : this.mesh.serviceLocatorAsk()\n  }\n\n  /**\n   * Use multicast dns to resolve broker url. Connect to\n   * service mesh broker. Allow listeners to subscribe to\n   * indivdual or all events. Send binary messages with\n   * protocol and idempotentency headers. Periodically send\n   * telemetry data.\n   *\n   * @param {*} options\n   * @returns\n   */\n  async connect (options = { binary: true }) {\n    this.options = options\n    this.url = await this.resolveUrl()\n\n    this.mesh.websocketConnect(this.url, {\n      agent: false,\n      headers: this.headers,\n      protocol: SERVICENAME,\n      useBinary: options.binary\n    })\n\n    this.mesh.websocketOnOpen(() => {\n      console.log('connection open')\n      this.send(this.telemetry())\n      this.heartbeat()\n      setTimeout(() => this.sendQueuedMsgs(), 3000)\n    })\n\n    this.mesh.websocketOnMessage(message => {\n      if (!message.eventName) {\n        debug && console.debug({ missingEventName: message })\n        this.emit('missingEventName', message)\n        return\n      }\n      try {\n        this.emit(message.eventName, message)\n        this.listeners('*').forEach(listener => listener(message))\n      } catch (error) {\n        console.error({ fn: this.connect.name, error })\n      }\n    })\n\n    this.mesh.websocketOnError(error => {\n      this.emit(WSOCKETERROR, error)\n      console.error({ fn: this.connect.name, error })\n    })\n\n    this.mesh.websocketOnClose((code, reason) => {\n      console.log({\n        msg: 'received close frame',\n        code,\n        reason: reason?.toString()\n      })\n      clearTimeout(this.heartbeatTimer)\n      setTimeout(() => {\n        console.debug('reconnect due to socket close')\n        this.connect()\n      }, 5000)\n    })\n\n    this.mesh.websocketOnPong(() => (this.pong = true))\n    this.once('timeout', this.timeout)\n  }\n\n  timeout () {\n    console.warn('timeout')\n    this.emit(HBEATTIMEOUT, this.telemetry())\n    this.mesh.websocketTerminate()\n    setTimeout(() => {\n      console.debug('reconnect due to timeout')\n      this.connect()\n    }, 5000)\n  }\n\n  heartbeat () {\n    if (this.pong) {\n      this.pong = false\n      this.mesh.websocketPing()\n      this.heartbeatTimer = setTimeout(() => this.heartbeat(), heartbeatMs)\n    } else {\n      clearTimeout(this.heartbeatTimer)\n      this.emit('timeout')\n    }\n  }\n\n  /**\n   * Convert message to binary and send with protocol and idempotency headers.\n   * If message cannot be sent because of connection state or buffering queue\n   * message in domain object for retry later. Using a domain object ensures\n   * persistence of the queue across boots.\n   *\n   * @param {object} msg\n   * @returns {Promise<boolean>} true if sent, false if not\n   */\n  send (msg) {\n    const sent = this.mesh.websocketSend(msg, {\n      headers: {\n        ...this.headers,\n        'idempotency-key': nanoid()\n      }\n    })\n    if (sent) return true\n    this.mesh.enqueue(msg)\n    return false\n  }\n\n  /**\n   * Send any messages buffered in `sendQueue`.\n   */\n  sendQueuedMsgs () {\n    let sent = true\n    while (this.mesh.queueDepth() > 0 && sent)\n      sent = this.send(this.mesh.dequeue())\n  }\n\n  /**\n   * Connects if needed then sends message to mesh broker service.\n   * @param {*} msg\n   */\n  publish (msg) {\n    return this.send(msg)\n  }\n\n  /**\n   * Register handler to fire on event\n   * @param {string} eventName\n   * @param {function()} callback\n   */\n  subscribe (eventName, callback) {\n    this.on(eventName, callback)\n  }\n\n  /**\n   * A new object will be created on system reload.\n   * Dispose of the old one. Run in context to\n   * distinguish between the new and old instance.\n   *\n   * @param {*} code\n   * @param {*} reason\n   */\n  async close (code, reason) {\n    console.debug('closing socket')\n    await this.mesh.save() // save queued messages\n    this.removeAllListeners()\n    this.mesh.websocketClose(code, reason)\n  }\n}\n\n/**\n * Domain model factory function. This model is\n * used internally by the Aegis framework as a\n * pluggable service mesh client. Implement the\n * the methods below to create a new plugin.\n *\n * @param {*} dependencies injected depedencies\n * @returns\n */\nexport function makeClient (dependencies) {\n  let client\n  return function ({ listServices }) {\n    return {\n      listServices,\n      sendQueue: [],\n      sendQueueMax: 1000,\n\n      queueDepth () {\n        return this.sendQueue.length\n      },\n\n      enqueue (msg) {\n        this.sendQueue.push(msg)\n      },\n\n      dequeue () {\n        return this.sendQueue.shift()\n      },\n\n      getClient () {\n        if (client) return client\n        client = new ServiceMeshClient(this)\n        return client\n      },\n\n      async connect (options) {\n        this.getClient().connect(options)\n      },\n\n      async publish (event) {\n        this.getClient().publish(event)\n      },\n\n      subscribe (eventName, handler) {\n        this.getClient().subscribe(eventName, handler)\n      },\n\n      async close (code, reason) {\n        this.getClient().close(code, reason)\n      }\n    }\n  }\n}\n"],"sourceRoot":""}