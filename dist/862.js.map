{"version":3,"sources":["webpack://microlib-example/./src/domain/mixins.js"],"names":["prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","model","changes","JSON","parse","stringify","updates","compose","values","updated","updateMixins","type","o","name","cb","Error","mixinSet","Map","has","set","eventMask","update","create","onload","handleUpdateEvent","event","isUpdate","decrypted","decrypt","isObject","p","containsUpdates","changeList","Object","keys","length","every","k","util","error","console","fn","validateModel","input","filter","v","sort","a","b","order","map","apply","reduce","c","output","enableEvent","onUpdate","onCreate","onLoad","enabled","enableValidation","onCreateAndUpdate","onAll","never","addValidation","config","some","warn","parseKeys","propKeys","flat","RegExp","key","test","encryptProperties","encryptProps","obj","encrypt","freezeProperties","preventUpdates","mutations","includes","requireProperties","requireProps","missing","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","concat","unknownProps","qs","rejectUnknownProperties","RegEx","email","ipv4Address","ipv6Address","phone","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","propKey","Validator","tests","isValid","regex","maxnum","maxlen","validateProperties","validate","invalid","updateProperties","updaters","updateProps","u","invokePort","args","log","func","then","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","value","x","encryptPersonalInfo","GlobalMixins"],"mappings":"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","file":"862.js","sourcesContent":["'use strict'\n\nimport { hash, encrypt, decrypt, compose } from '../domain/utils'\nimport util from 'util'\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol('prevModel')\n/**\n * private key to access validation config\n */\nexport const validations = Symbol('validations')\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol('pre'),\n  post: Symbol('post')\n}\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol('preUpdateMixins'),\n  [mixinType.post]: Symbol('postUpdateMixins')\n}\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre]\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post]\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate (model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)) // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes\n\n  const updated = { ...model, ...updates }\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins (type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error('invalid mixin type')\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map()\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb())\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet\n    }\n  }\n  return o\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2 //  0100 Load\n}\n\nfunction handleUpdateEvent (model, updates, event) {\n  const isUpdate = eventMask.update & event\n  const decrypted = isUpdate ? model.decrypt() : {}\n  return {\n    ...model,\n    ...updates,\n    ...decrypted\n  }\n}\n\nfunction isObject (p) {\n  return p != null && typeof p === 'object'\n}\n\nfunction containsUpdates (model, changes, event) {\n  try {\n    if (!changes) return false\n    if (eventMask.update & event) {\n      const changeList = Object.keys(changes)\n      if (changeList.length < 1) return false\n\n      if (\n        changeList.every(\n          k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n        )\n      ) {\n        return false\n      }\n    }\n    return true\n  } catch (error) {\n    console.error({ fn: containsUpdates.name, error })\n  }\n  return false\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see {@link eventMask}.\n */\nexport function validateModel (model, changes, event) {\n  if (!model || !changes || !event) return {}\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) }\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input)\n\n  const updated = { ...model, ...updates }\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated)\n}\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent (onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0\n\n  if (onUpdate) {\n    enabled |= eventMask.update\n  }\n  if (onCreate) {\n    enabled |= eventMask.create\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload\n  }\n  return enabled\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate: enableEvent(true, false, false),\n    /**\n     * Validation runs on create.\n     */\n    onCreate: enableEvent(false, true, false),\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate: enableEvent(true, true, false),\n    /**\n     * Validation runs on load.\n     */\n    onLoad: enableEvent(false, false, true),\n    /**\n     * Validation runs on all events.\n     */\n    onAll: enableEvent(true, true, true),\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never: enableEvent(false, false, false)\n  }\n})()\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation ({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || []\n\n  if (config.some(v => v.name === name)) {\n    console.warn('duplicate validation name', name)\n    return model\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }]\n  }\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys (o, ...propKeys) {\n  if (!propKeys || !o) return null\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === 'function') return k(o)\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key))\n    if (k === '*') return Object.keys(o)\n    return k\n  })\n  return keys.flat()\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    encryptProperties () {\n      return encryptProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    }),\n\n    decrypt () {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n}\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys)\n\n    const mutations = Object.keys(obj).filter(key => keys.includes(key))\n    if (mutations?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${mutations}`)\n    }\n  }\n\n  return {\n    freezeProperties () {\n      preventUpdates(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20\n    })\n  }\n}\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function requireProps (obj) {\n    const missing = keys.filter(key => key && !obj[key])\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`)\n    }\n  }\n  return {\n    requireProperties () {\n      requireProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 90\n    })\n  }\n}\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function hashPwds (obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    hashPasswords () {\n      return hashPwds(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    })\n  }\n}\n\nconst internalPropList = []\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps () {\n    const keys = parseKeys(o, ...propKeys)\n    const allowList = keys.concat(internalPropList)\n\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key))\n\n    if (unknownProps?.length > 0) {\n      qs\n      throw new Error(`invalid properties: ${unknownProps}`)\n    }\n  }\n\n  return {\n    rejectUnknownProperties () {\n      return rejectUnknownProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: rejectUnknownProps.name,\n      input: enableValidation.onUpdate,\n      order: 10\n    })\n  }\n}\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test (expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr\n    return _expr.test(val)\n  }\n}\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:numbertp\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness (v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal\n  return o.listSync({ [v.propKey]: compareVal }).length < 1\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal)\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid (v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal)\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate (obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey]\n\n      if (!propVal) {\n        return false\n      }\n      return !Validator.isValid(v, obj, propVal)\n    })\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`)\n    }\n  }\n\n  return {\n    validateProperties () {\n      validate(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 50\n    })\n  }\n}\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps (obj) {\n    const updates = updaters.filter(u => obj[u.propKey])\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n\n  return {\n    updateProperties () {\n      return updateProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 30\n    })\n  }\n}\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort () {\n      console.log({ func: 'invokePort', fn, args })\n      return this[fn](...args).then(o => o)\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'invokePort',\n      output: enableValidation.onUpdate,\n      order: 85\n    })\n  }\n}\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o)\n  }\n\n  return {\n    ...o,\n    async execMethod () {\n      const model = await functionType[typeof fn](fn, this, ...args)\n      return model\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'execMethod',\n      output: enableValidation.onUpdate,\n      order: 40\n    })\n  }\n}\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args)\n  }\n}\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`)\n  }\n  return propKey\n}\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr\n    throw new Error(`${x} invalid`)\n  }\n}\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n)\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo]\n\nexport default GlobalMixins\n"],"sourceRoot":""}