{"version":3,"sources":["webpack://microlib-example/./src/adapters/index.js","webpack://microlib-example/./src/adapters/service-locator.js","webpack://microlib-example/./src/adapters/websocket-adapter.js"],"names":["debug","test","process","env","DEBUG","ServiceLocator","name","serviceUrl","primary","backup","maxRetries","retryInterval","url","dns","Dns","isPrimary","isBackup","activateBackup","retries","console","log","answer","query","questions","type","setTimeout","ask","on","fromClient","find","question","runningAsService","URL","answers","data","port","target","hostname","info","respond","Promise","resolve","buildUrl","response","fromServer","protocol","msg","service","off","locator","serviceLocatorInit","args","options","serviceLocatorAsk","serviceLocatorListen","listen","serviceLocatorAnswer","socket","websocketConnect","WebSocket","binary","binaryType","Error","websocketSend","readyState","OPEN","send","websocketClose","code","reason","close","websocketPing","ping","websocketOnMessage","callback","websocketOnClose","onclose","websocketOnOpen","onopen","websocketOnPong","websocketStatus","websockeTerminate","terminate","websocketDisconnected"],"mappings":"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","file":"867.js","sourcesContent":["'use strict'\n\nexport * from './service-locator'\nexport * from './websocket-adapter'\n\n/**\n * @typedef {import('../domain').Model} Model\n * @typedef {function(function(eventCallback):Promise<Model>)} adapterFunction\n */\n","'use strict'\n\nimport Dns from 'multicast-dns'\n\nconst debug = /true/i.test(process.env.DEBUG)\n\nexport class ServiceLocator {\n  constructor ({\n    name,\n    serviceUrl,\n    primary = false,\n    backup = false,\n    maxRetries = 20,\n    retryInterval = 8000\n  } = {}) {\n    this.url = serviceUrl\n    this.name = name\n    this.dns = Dns()\n    this.isPrimary = primary\n    this.isBackup = backup\n    this.maxRetries = maxRetries\n    this.retryInterval = retryInterval\n  }\n\n  runningAsService () {\n    return this.isPrimary || (this.isBackup && this.activateBackup)\n  }\n\n  /**\n   * Query DNS for the webswitch service.\n   * Recursively retry by incrementing a\n   * counter we pass to ourselves on the\n   * stack. Once the URL is populated, exit.\n   *\n   * @param {number} retries number of query attempts\n   * @returns\n   */\n  ask (retries = 0) {\n    // have we found the url?\n    if (this.url) {\n      console.log('url found')\n      return\n    }\n\n    // if designated as backup, takeover for primary after maxRetries\n    if (retries > this.maxRetries && this.isBackup) {\n      this.activateBackup = true\n      this.answer()\n      return\n    }\n    debug && console.debug('looking for srv %s retries: %d', this.name, retries)\n    // then query the service name\n    this.dns.query({\n      questions: [\n        {\n          name: this.name,\n          type: 'SRV'\n        }\n      ]\n    })\n\n    // keep asking\n    setTimeout(() => this.ask(++retries), this.retryInterval)\n  }\n\n  answer () {\n    this.dns.on('query', query => {\n      debug && console.debug('got a query packet:', query)\n\n      const fromClient = query.questions.find(\n        question => question.name === this.name\n      )\n\n      if (fromClient && this.runningAsService()) {\n        const url = new URL(this.url)\n        const answer = {\n          answers: [\n            {\n              name: this.name,\n              type: 'SRV',\n              data: {\n                port: url.port,\n                target: url.hostname\n              }\n            }\n          ]\n        }\n        console.info('advertising this location', url)\n        this.dns.respond(answer)\n      }\n    })\n  }\n\n  listen () {\n    console.log('resolving service url')\n    return new Promise(resolve => {\n      const buildUrl = response => {\n        debug && console.debug({ answers: response.answers })\n\n        const fromServer = response.answers.find(\n          answer => answer.name === this.name && answer.type === 'SRV'\n        )\n\n        if (fromServer) {\n          const { target, port } = fromServer.data\n          const protocol = port === 443 ? 'wss' : 'ws'\n          this.url = `${protocol}://${target}:${port}`\n\n          console.info({\n            msg: 'found dns service record for',\n            service: this.name,\n            url: this.url\n          })\n\n          this.dns.off('response', buildUrl)\n          resolve(this.url)\n        }\n      }\n      console.log('looking for service', this.name)\n      this.dns.on('response', buildUrl)\n      this.ask()\n    })\n  }\n}\n\nlet locator\nexport function serviceLocatorInit () {\n  return async function ({ args: [options] }) {\n    console.debug('serviceLocatorInit called')\n    locator = new ServiceLocator(options)\n  }\n}\n\nexport function serviceLocatorAsk () {\n  return async function () {\n    return locator.ask()\n  }\n}\n\nexport function serviceLocatorListen () {\n  return async function () {\n    return locator.listen()\n  }\n}\n\nexport function serviceLocatorAnswer () {\n  return async function () {\n    return locator.answer()\n  }\n}\n","'use strict'\n\nimport WebSocket from 'ws'\n/** @type {WebSocket} */\nlet socket\n\nexport function websocketConnect () {\n  return async function ({ args: [url, options] }) {\n    if (socket) return socket\n    if (url) {\n      socket = new WebSocket(url, options)\n      console.debug('connected')\n      if (options?.binary) socket.binaryType = 'arraybuffer'\n      return socket\n    }\n    throw new Error('missing url', url)\n  }\n}\n\nexport function websocketSend () {\n  return async function ({ args: [data, options = {}] }) {\n    if (socket && socket.readyState === socket.OPEN) {\n      socket.send(data, options)\n      return true\n    }\n    return false\n  }\n}\n\nexport function websocketClose () {\n  return async function ({ args: [code, reason] }) {\n    if (socket) return socket.close(code, reason)\n  }\n}\n\nexport function websocketPing () {\n  return async function ({ args: [options] }) {\n    if (socket) return socket.ping(options)\n  }\n}\n\nexport function websocketOnMessage () {\n  return async function ({ args: [callback] }) {\n    if (socket) return socket.on('message', callback)\n  }\n}\n\nexport function websocketOnClose () {\n  return async function ({ args: [callback] }) {\n    if (socket) socket.onclose = callback\n  }\n}\n\nexport function websocketOnOpen () {\n  return async function ({ args: [callback] }) {\n    if (socket) socket.onopen = callback\n  }\n}\n\nexport function websocketOnPong () {\n  return async function ({ args: [callback] }) {\n    if (socket) socket.on('pong', callback)\n  }\n}\n\nexport function websocketStatus () {\n  return async function ({ args: [callback] }) {\n    if (socket) return socket.readyState\n  }\n}\n\nexport function websockeTerminate () {\n  return async function () {\n    if (socket) return socket.terminate()\n  }\n}\n\nexport function websocketDisconnected () {\n  return async function () {\n    return socket.readyState !== socket.OPEN\n  }\n}\n"],"sourceRoot":""}