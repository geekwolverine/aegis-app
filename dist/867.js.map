{"version":3,"sources":["webpack://microlib-example/./src/adapters/event-adapter.js","webpack://microlib-example/./src/adapters/index.js","webpack://microlib-example/./src/adapters/service-locator.js","webpack://microlib-example/./src/adapters/websocket-adapter.js","webpack://microlib-example/./src/services/event-service.js"],"names":["subscriptions","Map","filterMatches","message","filter","regex","RegExp","result","test","console","debug","func","name","substring","concat","Subscription","id","callback","topic","filters","once","model","unsubscribe","get","getId","getModel","getSubscriptions","entries","every","subscription","listen","service","Event","options","args","arg","has","set","listening","forEach","notify","JSON","parse","process","env","DEBUG","ServiceLocator","serviceUrl","primary","backup","maxRetries","retryInterval","url","dns","Dns","isPrimary","isBackup","activateBackup","retries","log","answer","query","questions","type","setTimeout","ask","on","fromClient","find","question","runningAsService","URL","answers","data","port","target","hostname","info","respond","Promise","resolve","buildUrl","response","fromServer","protocol","msg","off","locator","serviceLocatorInit","serviceLocatorAsk","serviceLocatorListen","serviceLocatorAnswer","socket","websocketConnect","WebSocket","binary","binaryType","Error","websocketSend","readyState","OPEN","send","websocketClose","code","reason","close","websocketPing","ping","websocketOnMessage","websocketOnClose","onclose","websocketOnOpen","onopen","websocketOnPong","websocketStatus","websockeTerminate","terminate","websocketDisconnected","brokers","KAFKA_BROKERS","topics","KAFKA_TOPICS","groupId","KAFKA_GROUP_ID","pid","kafka","Kafka","clientId","split","consumer","producer","connect","subscribe","fromBeginning","run","eachMessage","value","toString","error","messages","disconnect"],"mappings":"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","file":"867.js","sourcesContent":["\"use strict\";\n\n/**\n * @typedef {import('../domain').Model} Model\n * @typedef {string} serviceName\n *\n * @typedef {Object} EventMessage\n * @property {serviceName} eventSource\n * @property {serviceName|\"broadcast\"} eventTarget\n * @property {\"command\"|\"commandResponse\"|\"notification\"|\"import\"} eventType\n * @property {string} eventName\n * @property {string} eventTime\n * @property {string} eventUuid\n * @property {NotificationEvent|ImportEvent|CommandEvent} eventData\n *\n * @typedef {object} ImportEvent\n * @property {\"service\"|\"model\"|\"adapter\"} type\n * @property {string} url\n * @property {string} path\n * @property {string} importRemote\n *\n * @typedef {object} NotificationEvent\n * @property {string|} message\n * @property {\"utf8\"|Uint32Array} encoding\n *\n * @typedef {Object} CommandEvent\n * @property {string} commandName\n * @property {string} commandResp\n * @property {*} commandArgs\n */\n\n/**\n * @typedef {{\n *  filter:function(message):Promise<void>,\n *  unsubscribe:function()\n * }} Subscription\n * @typedef {string|RegExp} topic\n * @callback eventHandler\n * @param {string} eventData\n * @typedef {eventHandler} notifyType\n * @typedef {{\n * listen:function(topic, x),\n * notify:notifyType\n * }} EventService\n * @callback adapterFactory\n * @param {EventService} service\n * @returns {function(topic, eventHandler)}\n */\nimport { Event } from \"../services/event-service\";\n\n/**\n * @type {Map<any,Map<string,*>>}\n */\nconst subscriptions = new Map();\n\n/**\n * Test the filter.\n * @param {string} message\n * @returns {function(string|RegExp):boolean} did the filter match?\n */\nfunction filterMatches(message) {\n  return function (filter) {\n    const regex = new RegExp(filter);\n    const result = regex.test(message);\n    if (result)\n      console.debug({\n        func: filterMatches.name,\n        filter,\n        result,\n        message: message.substring(0, 100).concat(\"...\"),\n      });\n    return result;\n  };\n}\n\n/**\n * @typedef {string} message\n * @typedef {string|RegExp} topic\n * @param {{\n *  id:string,\n *  callback:function(message,Subscription),\n *  topic:topic,\n *  filter:string|RegExp,\n *  once:boolean,\n *  model:import(\"../domain\").Model\n * }} options\n */\nconst Subscription = function ({ id, callback, topic, filters, once, model }) {\n  return {\n    /**\n     * unsubscribe from topic\n     */\n    unsubscribe() {\n      subscriptions.get(topic).delete(id);\n    },\n\n    getId() {\n      return id;\n    },\n\n    getModel() {\n      return model;\n    },\n\n    getSubscriptions() {\n      return [...subscriptions.entries()];\n    },\n\n    /**\n     * Filter message and invoke callback\n     * @param {string} message\n     */\n    async filter(message) {\n      if (filters) {\n        // Every filter must match.\n        if (filters.every(filterMatches(message))) {\n          if (once) {\n            // Only looking for 1 msg, got it.\n            this.unsubscribe();\n          }\n          await callback({ message, subscription: this });\n          return;\n        }\n        // no match\n        return;\n      }\n      // no filters defined, just invoke the callback.\n      await callback({ message, subscription: this });\n    },\n  };\n};\n\n/**\n * Listen for external events with default event service if none specified.\n * @type {adapterFactory}\n * @param {import('../services/event-service').Event} [service] - has default service\n */\nexport function listen(service = Event) {\n  return async function (options) {\n    const {\n      model,\n      args: [arg],\n    } = options;\n\n    const subscription = Subscription({ model, ...arg });\n\n    if (subscriptions.has(arg.topic)) {\n      subscriptions.get(arg.topic).set(arg.id, subscription);\n      return subscription;\n    }\n\n    subscriptions.set(arg.topic, new Map().set(arg.id, subscription));\n\n    if (!service.listening) {\n      service.listen(/Channel/, async function ({ topic, message }) {\n        if (subscriptions.has(topic)) {\n          subscriptions.get(topic).forEach(async subscription => {\n            await subscription.filter(message);\n          });\n        }\n      });\n    }\n    return subscription;\n  };\n}\n\n/**\n * @type {adapterFactory}\n * @returns {function(topic, eventData)}\n */\nexport function notify(service = Event) {\n  return async function ({ model, args: [topic, message] }) {\n    console.debug(\"sending...\", { topic, message: JSON.parse(message) });\n    await service.notify(topic, message);\n    return model;\n  };\n}\n","'use strict'\n\nexport * from './service-locator'\nexport * from './websocket-adapter'\nexport * from './event-adapter'\n\n/**\n * @typedef {import('../domain').Model} Model\n * @typedef {function(function(eventCallback):Promise<Model>)} adapterFunction\n */\n","'use strict'\n\nimport Dns from 'multicast-dns'\n\nconst debug = /true/i.test(process.env.DEBUG)\n\nexport class ServiceLocator {\n  constructor ({\n    name,\n    serviceUrl,\n    primary = false,\n    backup = false,\n    maxRetries = 20,\n    retryInterval = 8000\n  } = {}) {\n    this.url = serviceUrl\n    this.name = name\n    this.dns = Dns()\n    this.isPrimary = primary\n    this.isBackup = backup\n    this.maxRetries = maxRetries\n    this.retryInterval = retryInterval\n  }\n\n  runningAsService () {\n    return this.isPrimary || (this.isBackup && this.activateBackup)\n  }\n\n  /**\n   * Query DNS for the webswitch service.\n   * Recursively retry by incrementing a\n   * counter we pass to ourselves on the\n   * stack. Once the URL is populated, exit.\n   *\n   * @param {number} retries number of query attempts\n   * @returns\n   */\n  ask (retries = 0) {\n    // have we found the url?\n    if (this.url) {\n      console.log('url found')\n      return\n    }\n\n    // if designated as backup, takeover for primary after maxRetries\n    if (retries > this.maxRetries && this.isBackup) {\n      this.activateBackup = true\n      this.answer()\n      return\n    }\n    debug && console.debug('looking for srv %s retries: %d', this.name, retries)\n    // then query the service name\n    this.dns.query({\n      questions: [\n        {\n          name: this.name,\n          type: 'SRV'\n        }\n      ]\n    })\n\n    // keep asking\n    setTimeout(() => this.ask(++retries), this.retryInterval)\n  }\n\n  answer () {\n    this.dns.on('query', query => {\n      debug && console.debug('got a query packet:', query)\n\n      const fromClient = query.questions.find(\n        question => question.name === this.name\n      )\n\n      if (fromClient && this.runningAsService()) {\n        const url = new URL(this.url)\n        const answer = {\n          answers: [\n            {\n              name: this.name,\n              type: 'SRV',\n              data: {\n                port: url.port,\n                target: url.hostname\n              }\n            }\n          ]\n        }\n        console.info('advertising this location', url)\n        this.dns.respond(answer)\n      }\n    })\n  }\n\n  listen () {\n    console.log('resolving service url')\n    return new Promise(resolve => {\n      const buildUrl = response => {\n        debug && console.debug({ answers: response.answers })\n\n        const fromServer = response.answers.find(\n          answer => answer.name === this.name && answer.type === 'SRV'\n        )\n\n        if (fromServer) {\n          const { target, port } = fromServer.data\n          const protocol = port === 443 ? 'wss' : 'ws'\n          this.url = `${protocol}://${target}:${port}`\n\n          console.info({\n            msg: 'found dns service record for',\n            service: this.name,\n            url: this.url\n          })\n\n          this.dns.off('response', buildUrl)\n          resolve(this.url)\n        }\n      }\n      console.log('looking for service', this.name)\n      this.dns.on('response', buildUrl)\n      this.ask()\n    })\n  }\n}\n\nlet locator\nexport function serviceLocatorInit () {\n  return async function ({ args: [options] }) {\n    console.debug('serviceLocatorInit called')\n    locator = new ServiceLocator(options)\n  }\n}\n\nexport function serviceLocatorAsk () {\n  return async function () {\n    return locator.ask()\n  }\n}\n\nexport function serviceLocatorListen () {\n  return async function () {\n    return locator.listen()\n  }\n}\n\nexport function serviceLocatorAnswer () {\n  return async function () {\n    return locator.answer()\n  }\n}\n","'use strict'\n\nimport WebSocket from 'ws'\n/** @type {WebSocket} */\nlet socket\n\nexport function websocketConnect () {\n  return async function ({ args: [url, options] }) {\n    if (socket) return socket\n    if (url) {\n      socket = new WebSocket(url, options)\n      console.debug('connected')\n      if (options?.binary) socket.binaryType = 'arraybuffer'\n      return socket\n    }\n    throw new Error('missing url', url)\n  }\n}\n\nexport function websocketSend () {\n  return async function ({ args: [data, options = {}] }) {\n    if (socket && socket.readyState === socket.OPEN) {\n      socket.send(data, options)\n      return true\n    }\n    return false\n  }\n}\n\nexport function websocketClose () {\n  return async function ({ args: [code, reason] }) {\n    if (socket) return socket.close(code, reason)\n  }\n}\n\nexport function websocketPing () {\n  return async function ({ args: [options] }) {\n    if (socket) return socket.ping(options)\n  }\n}\n\nexport function websocketOnMessage () {\n  return async function ({ args: [callback] }) {\n    if (socket) return socket.on('message', callback)\n  }\n}\n\nexport function websocketOnClose () {\n  return async function ({ args: [callback] }) {\n    if (socket) socket.onclose = callback\n  }\n}\n\nexport function websocketOnOpen () {\n  return async function ({ args: [callback] }) {\n    if (socket) socket.onopen = callback\n  }\n}\n\nexport function websocketOnPong () {\n  return async function ({ args: [callback] }) {\n    if (socket) socket.on('pong', callback)\n  }\n}\n\nexport function websocketStatus () {\n  return async function ({ args: [callback] }) {\n    if (socket) return socket.readyState\n  }\n}\n\nexport function websockeTerminate () {\n  return async function () {\n    if (socket) return socket.terminate()\n  }\n}\n\nexport function websocketDisconnected () {\n  return async function () {\n    return socket.readyState !== socket.OPEN\n  }\n}\n","\"use strict\";\n\nimport { Kafka } from \"kafkajs\";\n\nconst brokers = process.env.KAFKA_BROKERS || \"localhost:9092\";\nconst topics = new RegExp(process.env.KAFKA_TOPICS) || /Channel/;\nconst groupId = (process.env.KAFKA_GROUP_ID || \"MicroLib\") + process.pid;\n\nconst kafka = new Kafka({\n  clientId: \"MicroLib\",\n  brokers: brokers.split(\",\"),\n});\n\nconst consumer = kafka.consumer({ groupId });\nconst producer = kafka.producer();\n\n/**\n * @typedef {EventService}\n */\nexport const Event = {\n  listening: false,\n  topics,\n\n  /**\n   * Implements event consumer service.\n   * @param {string|RegExp} topic\n   * @param {function({message, topic})} callback\n   */\n  async listen(topic, callback) {\n    try {\n      await consumer.connect();\n      await consumer.subscribe({ topic, fromBeginning: true });\n      this.listening = true;\n      await consumer.run({\n        eachMessage: async ({ topic, message }) => {\n          try {\n            callback({\n              topic,\n              message: message.value.toString(),\n            });\n          } catch (error) {\n            console.error(error);\n          }\n        },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  /**\n   * Implemements event producer service.\n   * @param {string|RegExp} topic\n   * @param {string} message\n   */\n  async notify(topic, message) {\n    try {\n      await producer.connect();\n      await producer.send({\n        topic: topic,\n        messages: [{ value: message }],\n      });\n      await producer.disconnect();\n    } catch (error) {\n      console.error({ func: this.notify.name, error });\n    }\n  },\n};\n"],"sourceRoot":""}