{"version":3,"sources":["webpack://microlib-example/./src/adapters/datasources/datasource-file-adapter.js","webpack://microlib-example/./src/adapters/datasources/datasource-mongodb.js","webpack://microlib-example/./src/config/order.js","webpack://microlib-example/./src/domain/check-payload.js","webpack://microlib-example/./src/domain/mixins.js","webpack://microlib-example/./src/domain/order.js","webpack://microlib-example/./src/domain/utils.js"],"names":["DataSourceFileAdapter","url","cacheSize","DataSourceFile","DataSourceFileOrder","id","data","console","log","getSecret","process","env","MONGODB_CREDS","user","pass","token","archive","debug","DataSourceAdapterMongoDb","DataSourceMongoDb","DataSourceMongoDbArchive","datasource","factory","name","creds","Order","modelName","endpoint","makeOrderFactory","dependencies","uuid","nanoid","mixins","requireProperties","requiredForGuest","requiredForApproval","requiredForCompletion","freezeProperties","freezeOnApproval","freezeOnCompletion","updateProperties","propKey","update","recalcTotal","updateSignature","validateProperties","values","Object","OrderStatus","isValid","statusChangeValid","maxnum","orderTotalValid","regex","validate","validateModel","onDelete","readyToDelete","eventHandlers","handleOrderEvent","ports","listen","service","type","timeout","notify","save","find","validateAddress","keys","producesEvent","disabled","authorizePayment","consumesEvent","undo","cancelPayment","pickOrder","returnInventory","circuitBreaker","portTimeout_pickOrder_order","callVolume","errorRate","intervalMs","shipOrder","callback","orderShipped","returnShipment","portTimeout_shipOrder_order","portRetryFailed_order","fallbackFn","cancel","trackShipment","verifyDelivery","returnDelivery","completePayment","paymentCompleted","refundPayment","cancelShipment","relations","customer","foreignKey","desc","inventory","arrayKey","commands","decrypt","command","acl","approve","runFibonacci","model","start","Date","now","fibonacci","x","param","parseFloat","result","Number","isNaN","time","serializers","on","key","value","enabled","checkPayload","options","payload","port","Error","error","Array","isArray","map","k","reduce","p","c","then","latest","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","changes","JSON","parse","stringify","updates","compose","updated","updateMixins","o","cb","mixinSet","Map","has","set","eventMask","create","onload","handleUpdateEvent","event","isUpdate","decrypted","isObject","containsUpdates","changeList","length","every","util","fn","input","filter","v","sort","a","b","order","apply","output","enableEvent","onUpdate","onCreate","onLoad","enableValidation","onCreateAndUpdate","onAll","never","addValidation","config","some","warn","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","preventUpdates","mutations","includes","requireProps","missing","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","concat","unknownProps","rejectUnknownProperties","RegEx","email","ipv4Address","ipv6Address","phone","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","Validator","tests","maxlen","invalid","updaters","updateProps","u","invokePort","args","func","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","encryptPersonalInfo","GlobalMixins","orderStatus","orderTotal","orderNo","PENDING","APPROVED","SHIPPING","COMPLETE","CANCELED","checkItem","orderItem","itemId","price","checkItems","orderItems","items","calcTotal","total","item","qty","itemCount","finalStatus","status","customerId","invalidStatusChange","from","to","invalidStatusChanges","i","signatureRequired","handleError","errMsg","emit","shipmentPayload","shipmentId","orderPicked","addressValidated","addressPayload","shippingAddress","paymentAuthorized","paymentStatus","verifyAddress","verifyPayment","authorizeOrder","paymentDeclined","verifyInventory","insufficient","inv","quantity","getCustomerOrder","custInfo","firstName","info","saveShippingDetails","processPendingOrder","asyncPipe","OrderActions","processedOrder","autoCheckout","runOrderWorkflow","trackingUpdate","eventType","needsSignature","logMessage","message","msg","substring","toJSON","toUTCString","lastName","billingAddress","creditCardNumber","shippingPriority","requireSignature","estimatedArrival","push","logEvent","index","indx","parseInt","NaN","lastIndexOf","l","freeze","createOrder","approvedOrder","canceledOrder","logStateChange","checkout","errorCallback","timeoutCallback","adapterFn","logUndo","funcs","initVal","reduceRight","composeAsync","Promise","resolve","f","passwd","ENCRYPTION_PWD","algo","crypto","String","iv","Buffer","alloc","text","cipher","cipherText","decipher","digest","makeArray","makeObject","prop","async","promise","ok","object","asObject","asArray"],"mappings":"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","file":"988.js","sourcesContent":["export const DataSourceFileAdapter = function (url, cacheSize, DataSourceFile) {\n  /**\n   * Datasource adapter for AWS Dynamo DB\n   */\n  class DataSourceFileOrder extends DataSourceFile {\n    save(id, data) {\n      super.save(id, data);\n      console.log(\"DataSourceFileOrder datasource\", id, data);\n    }\n  }\n\n  return DataSourceFileOrder;\n};\n","\"use strict\";\n\nfunction getSecret() {\n  return process.env.MONGODB_CREDS || { user: null, pass: null, token: null };\n}\n\nfunction archive(id) {\n  console.debug(\"mock archive\", id);\n}\n\n/**\n * Datasource adapter factory.\n * @param {string} url database url\n * @param {number} [cacheSize] number of models to keep in cache\n * @param {*} DataSource base class that enables caching\n * @returns {import(\"./datasource\").default}\n */\nexport const DataSourceAdapterMongoDb = function (\n  url,\n  cacheSize,\n  DataSourceMongoDb\n) {\n  /**\n   * MongoDB adapter extends in-memory datasource to support caching.\n   * The cache is always updated first, which allows the system to run\n   * even when the database is offline.\n   */\n  class DataSourceMongoDbArchive extends DataSourceMongoDb {\n    constructor(datasource, factory, name) {\n      super(datasource, factory, name);\n      this.url = url;\n      this.cacheSize = cacheSize;\n      this.creds = getSecret();\n    }\n\n    /**\n     * @override\n     */\n    delete(id) {\n      console.debug(\"archive\", id);\n      archive(id);\n    }\n  }\n\n  return DataSourceMongoDbArchive;\n};\n","'use strict'\n\nimport {\n  makeOrderFactory,\n  readyToDelete,\n  handleOrderEvent,\n  orderShipped,\n  paymentCompleted,\n  OrderStatus,\n  recalcTotal,\n  requiredForCompletion,\n  statusChangeValid,\n  freezeOnApproval,\n  freezeOnCompletion,\n  orderTotalValid,\n  returnInventory,\n  returnShipment,\n  refundPayment,\n  returnDelivery,\n  cancelPayment,\n  updateSignature,\n  requiredForGuest,\n  requiredForApproval,\n  approve,\n  cancel\n} from '../domain/order'\n\nimport {\n  requireProperties,\n  freezeProperties,\n  updateProperties,\n  validateProperties,\n  validateModel\n} from '../domain/mixins'\n\nimport { DataSourceAdapterMongoDb } from '../adapters/datasources/datasource-mongodb'\nimport { nanoid } from 'nanoid'\nimport { DataSourceFileAdapter } from '../adapters/datasources/datasource-file-adapter'\n\n/**\n * @type {import('../domain/index').ModelSpecification}\n */\nexport const Order = {\n  modelName: 'order',\n  endpoint: 'orders',\n  factory: makeOrderFactory,\n  // datasource: {\n  //   factory: DataSourceAdapterMongoDb,\n  //   url: 'mongodb://127.0.0.1:27017',\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceMongoDb'\n  // },\n  // datasource: {\n  //   factory: DataSourceFileAdapter,\n  //   cacheSize: 4000,\n  //   baseClass: 'DataSourceFile'\n  // },\n  dependencies: { uuid: () => nanoid(8) },\n  mixins: [\n    requireProperties(\n      'orderItems',\n      requiredForGuest([\n        'lastName',\n        'firstName',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'email'\n      ]),\n      requiredForApproval('paymentAuthorization'),\n      requiredForCompletion('proofOfDelivery')\n    ),\n    freezeProperties(\n      'orderNo',\n      'customerId',\n      freezeOnApproval([\n        'email',\n        'lastName',\n        'firstName',\n        'orderItems',\n        'orderTotal',\n        'billingAddress',\n        'shippingAddress',\n        'creditCardNumber',\n        'paymentAuthorization'\n      ]),\n      freezeOnCompletion('*')\n    ),\n    updateProperties([\n      {\n        propKey: 'orderItems',\n        update: recalcTotal\n      },\n      {\n        propKey: 'orderItems',\n        update: updateSignature\n      }\n    ]),\n    validateProperties([\n      {\n        propKey: 'orderStatus',\n        values: Object.values(OrderStatus),\n        isValid: statusChangeValid\n      },\n      {\n        propKey: 'orderTotal',\n        maxnum: 99999.99,\n        isValid: orderTotalValid\n      },\n      {\n        propKey: 'email',\n        regex: 'email'\n      },\n      {\n        propKey: 'creditCardNumber',\n        regex: 'creditCard'\n      },\n      {\n        propKey: 'phone',\n        regex: 'phone'\n      }\n    ])\n  ],\n  validate: validateModel,\n  onDelete: readyToDelete,\n  eventHandlers: [handleOrderEvent],\n  ports: {\n    listen: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    notify: {\n      service: 'Event',\n      type: 'outbound',\n      timeout: 0\n    },\n    save: {\n      service: 'Persistence',\n      type: 'outbound',\n      timeout: 0\n    },\n    find: {\n      service: 'Persistence',\n      type: 'outbound',\n      timeout: 0\n    },\n    validateAddress: {\n      service: 'Address',\n      type: 'outbound',\n      keys: 'shippingAddress',\n      producesEvent: 'addressValidated',\n      disabled: true\n    },\n    authorizePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      keys: 'paymentStatus',\n      consumesEvent: 'startWorkflow',\n      producesEvent: 'paymentAuthorized',\n      undo: cancelPayment,\n      disabled: true\n    },\n    pickOrder: {\n      service: 'Inventory',\n      type: 'outbound',\n      keys: 'pickupAddress',\n      consumesEvent: 'itemsAvailable',\n      producesEvent: 'orderPicked',\n      undo: returnInventory,\n      circuitBreaker: {\n        portTimeout_pickOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    shipOrder: {\n      service: 'Shipping',\n      type: 'outbound',\n      callback: orderShipped,\n      consumesEvent: 'orderPicked',\n      producesEvent: 'orderShipped',\n      undo: returnShipment,\n      circuitBreaker: {\n        portTimeout_shipOrder_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        },\n        portRetryFailed_order: {\n          callVolume: 3,\n          errorRate: 2,\n          intervalMs: 60000,\n          fallbackFn: cancel\n        },\n        default: {\n          callVolume: 3,\n          errorRate: 3,\n          intervalMs: 60000\n        }\n      }\n    },\n    trackShipment: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: ['trackingStatus', 'trackingId'],\n      consumesEvent: 'orderShipped',\n      producesEvent: 'orderDelivered',\n      circuitBreaker: {\n        portRetryFailed_order: {\n          callVolume: 2,\n          errorRate: 1,\n          intervalMs: 60000\n        }\n      }\n    },\n    verifyDelivery: {\n      service: 'Shipping',\n      type: 'outbound',\n      keys: 'proofOfDelivery',\n      consumesEvent: 'orderDelivered',\n      producesEvent: 'deliveryVerified',\n      undo: returnDelivery\n    },\n    completePayment: {\n      service: 'Payment',\n      type: 'outbound',\n      callback: paymentCompleted,\n      consumesEvent: 'deliveryVerified',\n      producesEvent: 'orderComplete',\n      undo: refundPayment\n    },\n    cancelShipment: {\n      service: 'Shipping',\n      type: 'outbound'\n    },\n    refundPayment: {\n      service: 'Payment',\n      type: 'outbound'\n    }\n  },\n  relations: {\n    customer: {\n      modelName: 'customer',\n      type: 'manyToOne',\n      foreignKey: 'customerId',\n      desc: 'Many orders per customer, just one customer per order'\n    },\n    inventory: {\n      modelName: 'inventory',\n      type: 'containsMany',\n      foreignKey: 'itemId',\n      arrayKey: 'orderItems',\n      desc: 'An order contains a list of inventory items to ship.'\n    }\n  },\n  commands: {\n    decrypt: {\n      command: 'decrypt',\n      acl: ['read', 'decrypt']\n    },\n    approve: {\n      command: approve,\n      acl: ['write', 'approve']\n    },\n    cancel: {\n      command: cancel,\n      acl: ['write', 'cancel']\n    },\n    runFibonacci: {\n      command: model => {\n        const start = Date.now()\n        function fibonacci (x) {\n          if (x === 0) {\n            return 0\n          }\n          if (x === 1) {\n            return 1\n          }\n          return fibonacci(x - 1) + fibonacci(x - 2)\n        }\n        const param = parseFloat(model.fibonacci)\n        return {\n          result: fibonacci(Number.isNaN(param) ? 10 : param),\n          time: Date.now() - start\n        }\n      },\n      acl: ['read', 'write']\n    }\n  },\n  serializers: [\n    {\n      on: 'deserialize',\n      key: 'creditCardNumber',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'shippingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    },\n    {\n      on: 'deserialize',\n      key: 'billingAddress',\n      type: 'string',\n      value: (key, value) => decrypt(value),\n      enabled: false\n    }\n  ]\n}\n","'use strict'\n\n/**\n * Check the payload for expected properties.\n * @param {string|string[]} key name of property or properties\n * @param {*} options\n * @param {*} payload\n * @param {*} port\n */\nexport default function checkPayload (\n  key,\n  options = {},\n  payload = {},\n  port = checkPayload.name\n) {\n  const { model } = options\n\n  if (!model || Object.keys(payload) < 1 || !key) {\n    throw new Error({\n      desc: 'model, payload, or key is missing',\n      model,\n      port,\n      error,\n      payload,\n      key\n    })\n  }\n\n  if (Array.isArray(key)) {\n    const keys = key.map(k => checkPayload(k, options, payload, port))\n\n    return keys.reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  if (payload[key]) {\n    return { [key]: payload[key] }\n  }\n\n  if (model[key]) {\n    return { [key]: model[key] }\n  }\n\n  return model\n    .find()\n    .then(latest => ({ [key]: latest[key] }))\n    .catch(error => {\n      throw new Error('property is missing' + key, port, error, payload, model)\n    })\n}\n","'use strict'\n\nimport { hash, encrypt, decrypt, compose } from '../domain/utils'\nimport util from 'util'\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"../domain/index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol('prevModel')\n/**\n * private key to access validation config\n */\nexport const validations = Symbol('validations')\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol('pre'),\n  post: Symbol('post')\n}\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol('preUpdateMixins'),\n  [mixinType.post]: Symbol('postUpdateMixins')\n}\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre]\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post]\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate (model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)) // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes\n\n  const updated = { ...model, ...updates }\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins (type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error('invalid mixin type')\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map()\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb())\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet\n    }\n  }\n  return o\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2 //  0100 Load\n}\n\nfunction handleUpdateEvent (model, updates, event) {\n  const isUpdate = eventMask.update & event\n  const decrypted = isUpdate ? model.decrypt() : {}\n  return {\n    ...model,\n    ...updates,\n    ...decrypted\n  }\n}\n\nfunction isObject (p) {\n  return p != null && typeof p === 'object'\n}\n\nfunction containsUpdates (model, changes, event) {\n  try {\n    if (!changes) return false\n    if (eventMask.update & event) {\n      const changeList = Object.keys(changes)\n      if (changeList.length < 1) return false\n\n      if (\n        changeList.every(\n          k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n        )\n      ) {\n        return false\n      }\n    }\n    return true\n  } catch (error) {\n    console.error({ fn: containsUpdates.name, error })\n  }\n  return false\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see {@link eventMask}.\n */\nexport function validateModel (model, changes, event) {\n  if (!model || !changes || !event) return {}\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model\n  }\n\n  // keep a history of the last saved model\n  const input = { ...changes, [prevmodel]: JSON.parse(JSON.stringify(model)) }\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input)\n\n  const updated = { ...model, ...updates }\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated)\n}\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent (onUpdate = true, onCreate = true, onLoad = false) {\n  let enabled = 0\n\n  if (onUpdate) {\n    enabled |= eventMask.update\n  }\n  if (onCreate) {\n    enabled |= eventMask.create\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload\n  }\n  return enabled\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate: enableEvent(true, false, false),\n    /**\n     * Validation runs on create.\n     */\n    onCreate: enableEvent(false, true, false),\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate: enableEvent(true, true, false),\n    /**\n     * Validation runs on load.\n     */\n    onLoad: enableEvent(false, false, true),\n    /**\n     * Validation runs on all events.\n     */\n    onAll: enableEvent(true, true, true),\n    /**\n     * Validation runs on zero events (disabled).\n     */\n    never: enableEvent(false, false, false)\n  }\n})()\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation ({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || []\n\n  if (config.some(v => v.name === name)) {\n    console.warn('duplicate validation name', name)\n    return model\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }]\n  }\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys (o, ...propKeys) {\n  if (!propKeys || !o) return null\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === 'function') return k(o)\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key))\n    if (k === '*') return Object.keys(o)\n    return k\n  })\n  return keys.flat()\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    encryptProperties () {\n      return encryptProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    }),\n\n    decrypt () {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n}\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys)\n\n    const mutations = Object.keys(obj).filter(key => keys.includes(key))\n    if (mutations?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${mutations}`)\n    }\n  }\n\n  return {\n    freezeProperties () {\n      preventUpdates(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20\n    })\n  }\n}\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function requireProps (obj) {\n    const missing = keys.filter(key => key && !obj[key])\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`)\n    }\n  }\n  return {\n    requireProperties () {\n      requireProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 90\n    })\n  }\n}\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function hashPwds (obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    hashPasswords () {\n      return hashPwds(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    })\n  }\n}\n\nconst internalPropList = []\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps () {\n    const keys = parseKeys(o, ...propKeys)\n    const allowList = keys.concat(internalPropList)\n\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key))\n\n    if (unknownProps?.length > 0) {\n      throw new Error(`invalid properties: ${unknownProps}`)\n    }\n  }\n\n  return {\n    rejectUnknownProperties () {\n      return rejectUnknownProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: rejectUnknownProps.name,\n      input: enableValidation.onUpdate,\n      order: 10\n    })\n  }\n}\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test (expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr\n    return _expr.test(val)\n  }\n}\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:number\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness (v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal\n  return o.listSync({ [v.propKey]: compareVal }).length < 1\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal)\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid (v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal)\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate (obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey]\n\n      if (!propVal) {\n        return false\n      }\n      return !Validator.isValid(v, obj, propVal)\n    })\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`)\n    }\n  }\n\n  return {\n    validateProperties () {\n      validate(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 50\n    })\n  }\n}\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps (obj) {\n    const updates = updaters.filter(u => obj[u.propKey])\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n\n  return {\n    updateProperties () {\n      return updateProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      input: enableValidation.onUpdate,\n      order: 30\n    })\n  }\n}\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort () {\n      console.log({ func: 'invokePort', fn, args })\n      return this[fn](...args).then(o => o)\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'invokePort',\n      output: enableValidation.onUpdate,\n      order: 85\n    })\n  }\n}\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o)\n  }\n\n  return {\n    ...o,\n    async execMethod () {\n      const model = await functionType[typeof fn](fn, this, ...args)\n      return model\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'execMethod',\n      output: enableValidation.onUpdate,\n      order: 40\n    })\n  }\n}\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args)\n  }\n}\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`)\n  }\n  return propKey\n}\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr\n    throw new Error(`${x} invalid`)\n  }\n}\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n)\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo]\n\nexport default GlobalMixins\n","'use strict'\n\nimport { prevmodel } from './mixins'\nimport { asyncPipe } from '../domain/utils'\nimport checkPayload from './check-payload'\n\n/** @typedef { import('../domain/index.js').ModelSpecification} ModelSpecification */\n/** @typedef {string|RegExp} topic*/\n/** @typedef {function(string)} eventCallback*/\n/** @typedef {import('../adapters/index').adapterFunction} adapterFunction*/\n/** @typedef {string} id */\n/** @typedef {import(\"./customer\").Customer} Customer */\n/** @typedef {function(Order)} undoFunction */\n/**\n * @callback logMessageFn\n * @param {object|string} message\n * @param {logType} [type]\n */\n\n/** @typedef {'first'|'last'|'lastStateChange'|'stateChange'|'error'|'undo'} logType */\n\n/**\n * @typedef readLogType\n * @property {number} index\n * @property  {logType} type\n */\n\n/**\n * @typedef {{\n *  itemId: string,\n *  price: number,\n *  qty?: number\n * }} orderItemType\n */\n\n/**\n * @callback relationFunction\n * @property {...args}\n * @returns {Promise<Model>}\n * } relationFunction\n */\n\n/**\n *  @typedef {Object} Order The Order Service\n * @property {function(topic,eventCallback)} listen - listen for events\n * @property {import('../adapters/event-adapter').notifyType} notify\n * @property {adapterFunction} validateAddress - returns valid address or throws exception\n * @property {adapterFunction} completePayment - completes payment for an authorized charge\n * @property {adapterFunction} verifyDelivery - verify the order was received by the customer\n * @property {adapterFunction} trackShipment\n * @property {adapterFunction} refundPayment\n * @property {relationFunction} inventory - reserve inventory items\n * @property {adapterFunction} undo - undo all transactions up to this point\n * @property {function():Promise<Order>} pickOrder - pick items from warehouse and prepare for shipment\n * @property {adapterFunction} authorizePayment - verify payment, i.e. reserve the balance due\n * @property {import('../adapters/shipping-adapter').shipOrder} shipOrder -\n * calls shipping service to print label and request delivery\n * @property {function(Order):Promise<void>} save - saves order\n * @property {function():Promise<Order>} find - finds order\n * @property {string} shippingAddress\n * @property {string} orderNo = the order number\n * @property {string} trackingId - id given by tracking status for this `orderNo`\n * @property {function():Order} decrypt - decrypts sensitive properties\n * @property {function({key1:any,keyN:any}, boolean):Promise<Order>} update - update the order,\n * set the second arg to false to turn off validation.\n * @property {'PENDING'|'APPROVED'|'SHIPPING'|'CANCELED'|'COMPLETED'} orderStatus\n * @property {function(...args):Promise<import(\"../domain/index\").Model>} customer - retrieves related customer object,\n * or if args are provided, creates a new customer object, using the provided args as the input.\n * @property {function(string,Order):Promise} emit - broadcast domain event\n * @property {function():boolean} paymentAccepted - payment approved and funds reserved\n * @property {function():boolean} autoCheckout - whether or not to immediately submit the order\n * @property {boolean} saveShippingDetails save shipping and payment details in a new customer record\n * @property {{itemId:string,price:number,qty:number}[]} orderItems\n * @property {Symbol} customerId {@link Customer}\n * @property {logMessageFn} logEvent\n * @property {logMessageFn} logError\n * @property {logMessageFn} logUndo\n * @property {logMessageFn} logStateChange\n * @property {readMessageFn} readLog\n */\n\nconst orderStatus = 'orderStatus'\nconst orderTotal = 'orderTotal'\nconst orderNo = 'orderNo'\n\nexport const OrderStatus = {\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  SHIPPING: 'SHIPPING',\n  COMPLETE: 'COMPLETE',\n  CANCELED: 'CANCELED'\n}\n\n/**\n *\n * @param {orderItemType} orderItem\n * @returns {boolean} true if item is valid\n */\nexport const checkItem = function (orderItem) {\n  return (\n    typeof orderItem.itemId === 'string' && typeof orderItem.price === 'number'\n  )\n}\n\n/**\n * @param {orderItemType[]} orderItems\n */\nexport const checkItems = function (orderItems) {\n  if (!orderItems || orderItems.length < 1) {\n    throw new Error('order contains no items')\n  }\n  const items = Array.isArray(orderItems) ? orderItems : [orderItems]\n\n  if (items.length > 0 && items.every(checkItem)) {\n    return items\n  }\n  throw new Error('order items invalid')\n}\n\n/**\n * Calculate order total\n * @param {orderItemType[]} orderItems\n */\nexport const calcTotal = function (orderItems) {\n  const items = checkItems(orderItems)\n\n  return items.reduce((total, item) => {\n    const qty = item.qty || 1\n    return (total += item.price * qty)\n  }, 0)\n}\n\n/**\n * @param {orderItemType[]} orderItems\n * @returns {number} number of items\n */\nexport const itemCount = function (orderItems) {\n  return orderItems.reduce((total, item) => (total += item.qty || 1))\n}\n\n/**\n * No changes to `propKey` properties once the order is approved\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnApproval = propKey => o =>\n  o.orderStatus && o.orderStatus !== OrderStatus.PENDING ? propKey : null\n\nconst finalStatus = status =>\n  [OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(status)\n\n/**\n * No changes to `propKey` once order is complete or canceled\n * @param {*} o - the order\n * @param {*} propKey\n * @returns {string | null} the key or `null`\n */\nexport const freezeOnCompletion = propKey => o =>\n  finalStatus() ? propKey : null\n\n/**\n * If not a registered customer, provide shipping & payment details.\n * @param {*} o\n * @param {*} propKey\n * @returns {string | void} the key or `void`\n */\nexport const requiredForGuest = propKey => o => (o.customerId ? null : propKey)\n\n/**\n * Value required to approve order.\n * @param {*} propKey\n */\nexport const requiredForApproval = propKey => o =>\n  o.orderStatus === OrderStatus.APPROVED ? propKey : null\n\n/**\n * Value required to complete order\n * @param {object} o\n * @param {string | string[]} propKey these props are required to comlete the order\n * @returns {string | void} the key or `void`\n */\nexport const requiredForCompletion = propKey => o =>\n  o.orderStatus === OrderStatus.COMPLETE ? propKey : null\n\n/**\n *\n * @param {enum} from\n * @param {enum} to\n * @returns\n */\nconst invalidStatusChange = (from, to) => (o, propVal) =>\n  propVal === to && o[prevmodel].orderStatus === from\n\nconst invalidStatusChanges = [\n  // Can't change back to pending once approved\n  invalidStatusChange(OrderStatus.APPROVED, OrderStatus.PENDING),\n  // Can't change back to pending once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.PENDING),\n  // Can't change back to approved once shipped\n  invalidStatusChange(OrderStatus.SHIPPING, OrderStatus.APPROVED),\n  // Can't change directly to shipping from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.SHIPPING),\n  // Can't change directly to complete from pending\n  invalidStatusChange(OrderStatus.PENDING, OrderStatus.COMPLETE),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.COMPLETE, OrderStatus.CANCELED),\n  // Can't change final status\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.PENDING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.SHIPPING),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.APPROVED),\n  invalidStatusChange(OrderStatus.CANCELED, OrderStatus.COMPLETE)\n]\n\n/**\n * Check that status changes are valid\n */\nexport const statusChangeValid = (o, propVal) => {\n  if (invalidStatusChanges.some(i => i(o, propVal))) {\n    throw new Error('invalid status change')\n  }\n  return true\n}\n\n/**\n *\n * @param {*} o\n * @param {*} propVal\n */\nexport const orderTotalValid = (o, propVal) =>\n  calcTotal(o.orderItems) === propVal\n\n/**\n * Recalculate order total\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const recalcTotal = (o, propVal) => ({\n  orderTotal: calcTotal(propVal)\n})\n\n/**\n * Updated signature requirement if `orderTotal` above certain value\n * @param {object} o - the object (order)\n * @param {number} propVal - the property value\n */\nexport const updateSignature = (o, propVal) => ({\n  signatureRequired: calcTotal(propVal) > 999.99 || o.signatureRequired\n})\n\n/**\n * Don't delete orders before they're complete.\n */\nexport function readyToDelete (model) {\n  if (\n    ![OrderStatus.COMPLETE, OrderStatus.CANCELED].includes(model.orderStatus)\n  ) {\n    throw new Error('order must be canceled or completed')\n  }\n  return model\n}\n\n/**\n *\n * @param {Error} error\n * @param {Order} order\n * @param {*} func\n */\nfunction handleError (error, order, func) {\n  const errMsg = { func, orderNo: order.orderNo, error }\n  if (order) order.emit('orderError', errMsg)\n\n  throw new Error(JSON.stringify(errMsg))\n}\n\n/**\n * Callback invoked by adapter when payment is complete\n * @param {{model:Order}} options\n */\nexport async function paymentCompleted (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'confirmationCode',\n    options,\n    payload,\n    paymentCompleted.name\n  )\n  return order.update({ ...changes, orderStatus: OrderStatus.COMPLETE })\n}\n\n/**\n * Callback invoked by shipping adapter when order is picked up.\n * @param {{model:Order}} options\n * @param {string} shipmentId\n */\nexport async function orderShipped (options = {}, payload = {}) {\n  const { model: order } = options\n  const shipmentPayload = checkPayload(\n    'shipmentId',\n    options,\n    payload,\n    orderShipped.name\n  )\n  return order.update({\n    shipmentId: shipmentPayload.shipmentId,\n    orderStatus: OrderStatus.SHIPPING\n  })\n}\n\n/**\n * Callback invoked when order is ready for pickup\n * @param {{ model:Order }} options\n */\nexport async function orderPicked (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'pickupAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update(changes)\n}\n\n/**\n * Callback invoked when shippingAddress is verified (and possibly corrected)\n * @param {{ model:Order }} options\n * @param {string} shippingAddress\n */\nexport async function addressValidated (options = {}, payload = {}) {\n  const { model: order } = options\n  const addressPayload = checkPayload(\n    'shippingAddress',\n    options,\n    payload,\n    addressValidated.name\n  )\n  return order.update({ shippingAddress: addressPayload.shippingAddress })\n}\n\n/**\n * Called by adapter when port recevies response from payment service.\n * @param {{ model:Order }} options\n * @param {*} paymentAuthorization\n */\nexport async function paymentAuthorized (options = {}, payload = {}) {\n  const { model: order } = options\n  const changes = checkPayload(\n    'paymentStatus',\n    options,\n    payload,\n    paymentAuthorized.name\n  )\n  return order.update({ ...changes, paymentStatus }, false)\n}\n\n/**\n * Called to refund payment when order is canceled.\n * @param {*} options\n * @param {*} payload\n * @returns\n */\nexport async function refundPayment (order) {\n  // call port by same name.\n  order.refundPayment((options, payload) => {\n    const changes = checkPayload(\n      'refundReceipt',\n      options,\n      payload,\n      refundPayment.name\n    )\n    return order.update({ ...changes, orderStatus: OrderStatus.CANCELED })\n  })\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyAddress (order) {\n  console.debug({\n    fn: verifyAddress.name,\n    validateAddress: order.validateAddress\n  })\n  return order.validateAddress(addressValidated)\n}\n\n/**\n * Request the bank or lender to place a hold on\n * the customer account in the amount of the payment\n * due, to be withdrawn once the shipment is safely\n * in our customer's hands, or credited back if things\n * don't work out.\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n */\nasync function verifyPayment (order) {\n  try {\n    /**\n     * @type {Order}\n     */\n    const authorizeOrder = await order.authorizePayment(paymentAuthorized)\n\n    if (!authorizeOrder.paymentDeclined) {\n      throw new Error('payment declined')\n    }\n\n    return authorizeOrder\n  } catch (e) {\n    handleError(e, order, verifyPayment.name)\n  }\n  return order\n}\n\n/**\n *\n * @param {Order} order\n * @returns {Promise<Order>}\n * @throws {'InsufficientInventory'}\n */\nasync function verifyInventory (order) {\n  const inventory = await order.inventory()\n  if (inventory.length < 1) throw new Error('bad inventory ID')\n\n  const insufficient = order.orderItems.filter(item => {\n    const inv = inventory.find(i => i.id === item.itemId)\n    if (!inv) return true\n    if (inv.quantity < item.qty) return true\n    return false\n  })\n\n  if (insufficient.length > 0) {\n    order.emit('lowOrOutOfStock', insufficient)\n    throw new Error(`low or out of stock: ${insufficient.map(i => i.itemId)}`)\n  }\n}\n/**\n * Copy existing customer data into the order\n * or create new customer from order details.\n *\n * @param {Order} order\n * @throws {'InvalidCustomerId'}\n */\nasync function getCustomerOrder (order) {\n  // If an id is given, try fetching the model\n  if (order.customerId) {\n    if (!order.customer) {\n      console.log({ order })\n    }\n    // Use the relation defined in the spec\n    const customer = await order.customer()\n\n    if (!customer) {\n      throw new Error('invalid customer id', order.customerId)\n    }\n\n    // Add customer data to the order\n    const custInfo = { ...customer.decrypt(), firstName: customer.firstName }\n    const update = await order.update(custInfo)\n\n    console.info('update order with data from existing customer', custInfo)\n    return update\n  }\n\n  // Create a new customer from the shipping details\n  if (order.saveShippingDetails) {\n    const custInfo = { ...order.decrypt(), firstName: order.firstName }\n    const customer = await order.customer(custInfo)\n\n    console.info('create new customer with data from order', customer)\n    return order\n  }\n\n  return order\n}\n\n/**\n * Handle a new order:\n * - fetch or save customer info\n * - check item availability\n * - authorize payment\n * - verify shipping address\n */\nconst processPendingOrder = asyncPipe(\n  getCustomerOrder,\n  verifyInventory,\n  verifyPayment,\n  verifyAddress\n)\n\n/**\n * Implements the beginging of the order service workflow.\n * The rest is implemented by the {@link ModelSpecification}.\n * See the port configuration section of {@link Order}.\n */\nconst OrderActions = {\n  /**\n   * Verifies the shipping address and authorizes payment\n   * for the order total when the order is first created,\n   * or when it is updated while still in pending status.\n   *\n   * @param {Order} order - the order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.PENDING]: async order => {\n    try {\n      /**@type {Order} */\n      const processedOrder = await processPendingOrder(order)\n\n      if (processedOrder.autoCheckout()) {\n        runOrderWorkflow(\n          processedOrder.update({ OrderStatus: OrderStatus.APPROVED }, false)\n        )\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    return order\n  },\n\n  /**\n   * If payment is authorized, check inventory.\n   * This kicks off the rest of the workflow,\n   * which is controlled by port event flow.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.APPROVED]: async order => {\n    console.log('typeof order', typeof order)\n    try {\n      if (/approved/i.test(order.paymentStatus)) {\n        return order.pickOrder(orderPicked)\n      }\n      await order.emit('PayAuthFail', 'Payment authorization problem')\n      return order\n    } catch (error) {\n      console.log({ error })\n      handleError(error, order, OrderStatus.APPROVED)\n    }\n    return order\n  },\n\n  /**\n   * Useful if we need to restart tracking.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.SHIPPING]: async order => {\n    try {\n      order.trackShipment(trackingUpdate)\n      console.debug({ func: OrderStatus.SHIPPING, order })\n      await (await order.update({ orderStatus: OrderStatus.SHIPPING })).emit(\n        'orderPicked'\n      )\n    } catch (error) {\n      handleError(error, order, OrderStatus.SHIPPING)\n    }\n    return order\n  },\n\n  /**\n   * Start cancellation process.\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.CANCELED]: async order => {\n    try {\n      console.debug({\n        func: OrderStatus.CANCELED,\n        desc: 'order canceled, calling undo',\n        orderNo: order.orderNo\n      })\n      return order.undo()\n    } catch (error) {\n      handleError(error, order, OrderStatus.CANCELED)\n    }\n    return order\n  },\n  /**\n   *\n   * @param {Order} order\n   * @returns {Promise<Readonly<Order>>}\n   */\n  [OrderStatus.COMPLETE]: async order => {\n    // send route to questionnaire, perform analysis, schedule follow-up\n    console.log('customer sentiment analysis, customer care, sales analysis')\n    return order\n  }\n}\n\n/**\n * Call order service workflow - controlled by status\n * @param {Order} order\n * @returns {Promise<Readonly<Order>>}\n */\nexport async function runOrderWorkflow (order) {\n  return OrderActions[order.orderStatus](order)\n}\n\n/**\n * Called on create, update, delete of model instance.\n * @param {{model:Promise<ReadOnly<Order>>}}\n */\nexport async function handleOrderEvent ({ model: order, eventType, changes }) {\n  if (changes?.orderStatus || eventType === 'CREATE') {\n    // console.debug({ fn: handleOrderEvent.name, order })\n    return runOrderWorkflow(order)\n  }\n}\n\n/**\n * Require a signature for orders $1000 and up\n * @param {*} input\n * @param {*} orderTotal\n */\nfunction needsSignature (input, orderTotal) {\n  return typeof input === 'boolean' ? input : orderTotal > 999.99\n}\n\n/** format and classify log entries */\nfunction logMessage (message, type) {\n  const msg = typeof message === 'string' ? message : JSON.stringify(message)\n\n  return {\n    desc: msg.substring(0, 140),\n    type,\n    time: Date.now(),\n    toJSON () {\n      return {\n        desc: this.desc,\n        type,\n        time: new Date(this.time).toUTCString()\n      }\n    }\n  }\n}\n\n/**\n * Returns factory function for the Order model.\n * @type {import('../domain/index.js').modelSpecFactoryFn}\n * @param {*} dependencies - inject dependencies\n */\nexport function makeOrderFactory (dependencies) {\n  return async function createOrder ({\n    orderItems,\n    email = null,\n    lastName = null,\n    firstName = null,\n    customerId = null,\n    billingAddress = null,\n    shippingAddress = null,\n    creditCardNumber = null,\n    shippingPriority = null,\n    autoCheckout = false,\n    saveShippingDetails = false,\n    requireSignature,\n    fibonacci = 10\n  }) {\n    const total = calcTotal(orderItems)\n    const signatureRequired = needsSignature(requireSignature, total)\n    const order = {\n      email,\n      lastName,\n      firstName,\n      customerId,\n      orderItems,\n      creditCardNumber,\n      billingAddress,\n      shippingAddress,\n      signatureRequired,\n      saveShippingDetails,\n      shippingPriority,\n      fibonacci,\n      result: 0,\n      time: 0,\n      estimatedArrival: null,\n      log: [logMessage('order created')],\n      [orderTotal]: total,\n      [orderStatus]: OrderStatus.PENDING,\n      [orderNo]: dependencies.uuid(),\n      desc: 'new order 25',\n      /**\n       * Has payment for the order been authorized?\n       */\n      paymentAccepted () {\n        return true\n      },\n      /**\n       * Proceed to checkout automatically or wait for approval?\n       */\n      autoCheckout () {\n        return autoCheckout\n      },\n      totalItems () {\n        return itemCount(this.orderItems)\n      },\n      total () {\n        return calcTotal(this.orderItems)\n      },\n      addItem (item) {\n        if (checkItem(item)) {\n          this.orderItems.push(item)\n          return true\n        }\n        return false\n      },\n      logEvent (message, type = 'info') {\n        this.log.push(logMessage(message, type))\n      },\n      logError (message) {\n        this.logEvent(message, 'error')\n      },\n      logUndo (message) {\n        this.logEvent(message, 'undo')\n      },\n      logStateChange (message) {\n        this.logEvent(message, 'stateChange')\n      },\n      /**\n       *\n       * @param {viewLog} options\n       * @returns {logMessageFn[]|logMessageFn}\n       */\n      readLog ({ index = null, type = null }) {\n        const indx = parseInt(index)\n        if (indx < this.log.length && indx !== NaN) return this.log[indx]\n        if (type === 'first') return this.log[0]\n        if (type === 'last') return this.log[this.log.length - 1]\n        if (type === 'lastStateChange')\n          return this.log[this.log.lastIndexOf({ type: 'stateChange' })]\n        if (type === 'stateChanges')\n          return this.log.filter(l => l.type === 'stateChange')\n        if (type === 'error') return this.log.filter(l => l.type === 'error')\n        if (type === 'undo') return this.log.filter(l => l.type === 'undo')\n        return this.log\n      }\n    }\n\n    return Object.freeze(order)\n  }\n}\n\n/**\n * Called as command to approve/submit order.\n * @param {Order} order\n */\nexport async function approve (order) {\n  const approvedOrder = await order.update({\n    orderStatus: OrderStatus.APPROVED\n  })\n  console.debug({ approvedOrder })\n  //approvedOrder.logStateChange(OrderStatus.APPROVED)\n  return runOrderWorkflow(approvedOrder)\n}\n\n/**\n * Called as command to cancel order.\n * @param {Order} order\n */\nexport async function cancel (order) {\n  const canceledOrder = await order.update({\n    orderStatus: OrderStatus.CANCELED\n  })\n  canceledOrder.logStateChange(OrderStatus.CANCELED)\n  return runOrderWorkflow(canceledOrder)\n}\n\n/**\n * Alias of `approve`\n * @param {Order} order\n * @returns\n */\nexport async function checkout (order) {\n  return approve(order)\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function errorCallback ({ port, model: order, error }) {\n  const errMsg = { error, port, error }\n  console.error(errorCallback.name, errMsg)\n  order.logEvent(errMsg)\n  order.emit(errorCallback.name, errMsg)\n  return order.undo()\n}\n\n/**\n *\n * @param {{model:Order}} param0\n */\nexport function timeoutCallback ({ port, ports, adapterFn, model: order }) {\n  console.error('timeout...', port)\n  //order.logError(timeoutCallback.name, 'timeout')\n  order.emit(timeoutCallback.name, errMsg)\n}\n\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnInventory (order) {\n  console.log(returnInventory.name)\n  order.logEvent(returnInventory.name, 'timeout')\n  order.emit(returnInventory.name, errMsg)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n * Start process for the shipper to pick the items to return.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnShipment (order) {\n  console.log(returnShipment.name)\n  order.logUndo(returnShipment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n * Start process to return canceled order items to inventory.\n * Do not call `runOrderWorkflow` - it is already running (in\n * reverse) if we get here.\n */\nexport async function returnDelivery (order) {\n  console.log(returnDelivery.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n\n/**\n * @type {undoFunction}\n */\nexport async function cancelPayment (order) {\n  console.log(cancelPayment.name)\n  return order.update({ orderStatus: OrderStatus.CANCELED })\n}\n","'use strict'\n\nimport crypto from 'crypto'\nimport { nanoid } from 'nanoid'\n\nexport function compose (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight((val, func) => func(val), initVal)\n  }\n}\n\nexport function composeAsync (...funcs) {\n  return function (initVal) {\n    return funcs.reduceRight(\n      (val, func) => val.then(func),\n      Promise.resolve(initVal)\n    )\n  }\n}\n\n/**\n * @callback pipeFn\n * @param {object} obj - the object to compose\n * @returns {object} - the composed object\n */\n\n/**\n * @param {pipeFn} func\n */\nexport const asyncPipe = (...func) => obj =>\n  func.reduce((o, f) => o.then(f), Promise.resolve(obj))\n\nconst passwd = process.env.ENCRYPTION_PWD\nconst algo = 'aes-192-cbc'\nconst key = crypto.scryptSync(String(passwd), 'salt', 24)\nconst iv = Buffer.alloc(16, 0)\n\nexport function encrypt (text) {\n  const cipher = crypto.createCipheriv(algo, key, iv)\n  let encrypted = cipher.update(text, 'utf8', 'hex')\n  encrypted += cipher.final('hex')\n  return encrypted\n}\n\nexport function decrypt (cipherText) {\n  console.log('decrypt(%s)', cipherText)\n  const decipher = crypto.createDecipheriv(algo, key, iv)\n  let decrypted = decipher.update(cipherText, 'hex', 'utf8')\n  decrypted += decipher.final('utf8')\n  return decrypted\n}\n\nexport function hash (data) {\n  return crypto\n    .createHash('sha1')\n    .update(data)\n    .digest('hex')\n}\n\nexport function uuid () {\n  // return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n  //   (c ^ (crypto.randomBytes(16)[0] & (15 >> (c / 4)))).toString(16)\n  // );\n  return nanoid()\n}\n\nexport function makeArray (v) {\n  return Array.isArray(v) ? v : [v]\n}\n\nexport function makeObject (prop) {\n  if (Array.isArray(prop)) {\n    return prop.reduce((p, c) => ({ ...p, ...c }))\n  }\n  return prop\n}\n\n/**\n *\n * @param {Promise<{\n * ok:()=>any,\n *\n * }} promise\n * @returns\n */\nexport function async (promise) {\n  return promise\n    .then(result => ({\n      ok: true,\n      object: result,\n      asObject: () => makeObject(result),\n      asArray: () => makeArray(result)\n    }))\n    .catch(error => {\n      console.error(error)\n      return Promise.resolve({ ok: false, error })\n    })\n}\n"],"sourceRoot":""}